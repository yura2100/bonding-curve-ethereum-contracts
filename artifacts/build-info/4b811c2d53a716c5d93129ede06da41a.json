{"id":"4b811c2d53a716c5d93129ede06da41a","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @notice Thrown when setting the illegal interfaceId 0xffffffff.\nerror IllegalInterfaceId();\n"},"@animoca/ethereum-contracts/contracts/introspection/InterfaceDetection.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {IERC165} from \"./interfaces/IERC165.sol\";\nimport {InterfaceDetectionStorage} from \"./libraries/InterfaceDetectionStorage.sol\";\n\n/// @title ERC165 Interface Detection Standard (immutable or proxiable version).\n/// @dev This contract is to be used via inheritance in an immutable (non-proxied) or proxied implementation.\nabstract contract InterfaceDetection is IERC165 {\n    using InterfaceDetectionStorage for InterfaceDetectionStorage.Layout;\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) external view returns (bool) {\n        return InterfaceDetectionStorage.layout().supportsInterface(interfaceId);\n    }\n}\n"},"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @title ERC165 Interface Detection Standard.\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\ninterface IERC165 {\n    /// @notice Returns whether this contract implements a given interface.\n    /// @dev Note: This function call must use less than 30 000 gas.\n    /// @param interfaceId the interface identifier to test.\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\n}\n"},"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {IllegalInterfaceId} from \"./../errors/InterfaceDetectionErrors.sol\";\nimport {IERC165} from \"./../interfaces/IERC165.sol\";\n\nlibrary InterfaceDetectionStorage {\n    struct Layout {\n        mapping(bytes4 => bool) supportedInterfaces;\n    }\n\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\"animoca.core.introspection.InterfaceDetection.storage\")) - 1);\n\n    bytes4 internal constant ILLEGAL_INTERFACE_ID = 0xffffffff;\n\n    /// @notice Sets or unsets an ERC165 interface.\n    /// @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\n    /// @param interfaceId the interface identifier.\n    /// @param supported True to set the interface, false to unset it.\n    function setSupportedInterface(Layout storage s, bytes4 interfaceId, bool supported) internal {\n        if (interfaceId == ILLEGAL_INTERFACE_ID) revert IllegalInterfaceId();\n        s.supportedInterfaces[interfaceId] = supported;\n    }\n\n    /// @notice Returns whether this contract implements a given interface.\n    /// @dev Note: This function call must use less than 30 000 gas.\n    /// @param interfaceId The interface identifier to test.\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\n    function supportsInterface(Layout storage s, bytes4 interfaceId) internal view returns (bool supported) {\n        if (interfaceId == ILLEGAL_INTERFACE_ID) {\n            return false;\n        }\n        if (interfaceId == type(IERC165).interfaceId) {\n            return true;\n        }\n        return s.supportedInterfaces[interfaceId];\n    }\n\n    function layout() internal pure returns (Layout storage s) {\n        bytes32 position = LAYOUT_STORAGE_SLOT;\n        assembly {\n            s.slot := position\n        }\n    }\n}\n"},"@animoca/ethereum-contracts/contracts/metatx/base/ForwarderRegistryContextBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {IForwarderRegistry} from \"./../interfaces/IForwarderRegistry.sol\";\nimport {ERC2771Calldata} from \"./../libraries/ERC2771Calldata.sol\";\n\n/// @title Meta-Transactions Forwarder Registry Context (proxiable version).\n/// @dev This contract is to be used via inheritance in a proxied implementation.\n/// @dev Derived from https://github.com/wighawag/universal-forwarder (MIT licence)\nabstract contract ForwarderRegistryContextBase {\n    IForwarderRegistry internal immutable _FORWARDER_REGISTRY;\n\n    constructor(IForwarderRegistry forwarderRegistry) {\n        _FORWARDER_REGISTRY = forwarderRegistry;\n    }\n\n    /// @notice Returns the message sender depending on the ForwarderRegistry-based meta-transaction context.\n    function _msgSender() internal view virtual returns (address) {\n        // Optimised path in case of an EOA-initiated direct tx to the contract or a call from a contract not complying with EIP-2771\n        // solhint-disable-next-line avoid-tx-origin\n        if (msg.sender == tx.origin || msg.data.length < 24) {\n            return msg.sender;\n        }\n\n        address sender = ERC2771Calldata.msgSender();\n\n        // Return the EIP-2771 calldata-appended sender address if the message was forwarded by the ForwarderRegistry or an approved forwarder\n        if (msg.sender == address(_FORWARDER_REGISTRY) || _FORWARDER_REGISTRY.isApprovedForwarder(sender, msg.sender)) {\n            return sender;\n        }\n\n        return msg.sender;\n    }\n\n    /// @notice Returns the message data depending on the ForwarderRegistry-based meta-transaction context.\n    function _msgData() internal view virtual returns (bytes calldata) {\n        // Optimised path in case of an EOA-initiated direct tx to the contract or a call from a contract not complying with EIP-2771\n        // solhint-disable-next-line avoid-tx-origin\n        if (msg.sender == tx.origin || msg.data.length < 24) {\n            return msg.data;\n        }\n\n        // Return the EIP-2771 calldata (minus the appended sender) if the message was forwarded by the ForwarderRegistry or an approved forwarder\n        if (msg.sender == address(_FORWARDER_REGISTRY) || _FORWARDER_REGISTRY.isApprovedForwarder(ERC2771Calldata.msgSender(), msg.sender)) {\n            return ERC2771Calldata.msgData();\n        }\n\n        return msg.data;\n    }\n}\n"},"@animoca/ethereum-contracts/contracts/metatx/interfaces/IForwarderRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @title Universal Meta-Transactions Forwarder Registry.\n/// @dev Derived from https://github.com/wighawag/universal-forwarder (MIT licence)\ninterface IForwarderRegistry {\n    /// @notice Checks whether an account is as an approved meta-transaction forwarder for a sender account.\n    /// @param sender The sender account.\n    /// @param forwarder The forwarder account.\n    /// @return isApproved True if `forwarder` is an approved meta-transaction forwarder for `sender`, false otherwise.\n    function isApprovedForwarder(address sender, address forwarder) external view returns (bool isApproved);\n}\n"},"@animoca/ethereum-contracts/contracts/metatx/libraries/ERC2771Calldata.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @dev Derived from https://github.com/OpenZeppelin/openzeppelin-contracts (MIT licence)\n/// @dev See https://eips.ethereum.org/EIPS/eip-2771\nlibrary ERC2771Calldata {\n    /// @notice Returns the sender address appended at the end of the calldata, as specified in EIP-2771.\n    function msgSender() internal pure returns (address sender) {\n        assembly {\n            sender := shr(96, calldataload(sub(calldatasize(), 20)))\n        }\n    }\n\n    /// @notice Returns the calldata while omitting the appended sender address, as specified in EIP-2771.\n    function msgData() internal pure returns (bytes calldata data) {\n        unchecked {\n            return msg.data[:msg.data.length - 20];\n        }\n    }\n}\n"},"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyAdminErrors.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @notice Thrown when the initial admin is not set.\nerror NoInitialProxyAdmin();\n\n/// @notice Thrown when an account is not the proxy admin but is required to.\n/// @param account The account that was checked.\nerror NotProxyAdmin(address account);\n"},"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @notice Emitted when trying to set a phase value that has already been reached.\n/// @param currentPhase The current phase.\n/// @param newPhase The new phase trying to be set.\nerror InitializationPhaseAlreadyReached(uint256 currentPhase, uint256 newPhase);\n"},"@animoca/ethereum-contracts/contracts/proxy/events/ProxyAdminEvents.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @notice Emitted when the proxy admin changes.\n/// @param previousAdmin the previous admin.\n/// @param newAdmin the new admin.\nevent AdminChanged(address previousAdmin, address newAdmin);\n"},"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyAdminStorage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {NoInitialProxyAdmin, NotProxyAdmin} from \"./../errors/ProxyAdminErrors.sol\";\nimport {AdminChanged} from \"./../events/ProxyAdminEvents.sol\";\nimport {ProxyInitialization} from \"./ProxyInitialization.sol\";\n\nlibrary ProxyAdminStorage {\n    using ProxyAdminStorage for ProxyAdminStorage.Layout;\n\n    struct Layout {\n        address admin;\n    }\n\n    // bytes32 public constant PROXYADMIN_STORAGE_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1);\n    bytes32 internal constant PROXY_INIT_PHASE_SLOT = bytes32(uint256(keccak256(\"eip1967.proxy.admin.phase\")) - 1);\n\n    /// @notice Initializes the storage with an initial admin (immutable version).\n    /// @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\n    /// @dev Reverts {NoInitialProxyAdmin} if `initialAdmin` is the zero address.\n    /// @dev Emits an {AdminChanged} event.\n    /// @param initialAdmin The initial payout wallet.\n    function constructorInit(Layout storage s, address initialAdmin) internal {\n        if (initialAdmin == address(0)) revert NoInitialProxyAdmin();\n        s.admin = initialAdmin;\n        emit AdminChanged(address(0), initialAdmin);\n    }\n\n    /// @notice Initializes the storage with an initial admin (proxied version).\n    /// @notice Sets the proxy initialization phase to `1`.\n    /// @dev Note: This function should be called ONLY in the init function of a proxied contract.\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\n    /// @dev Reverts {NoInitialProxyAdmin} if `initialAdmin` is the zero address.\n    /// @dev Emits an {AdminChanged} event.\n    /// @param initialAdmin The initial payout wallet.\n    function proxyInit(Layout storage s, address initialAdmin) internal {\n        ProxyInitialization.setPhase(PROXY_INIT_PHASE_SLOT, 1);\n        s.constructorInit(initialAdmin);\n    }\n\n    /// @notice Sets a new proxy admin.\n    /// @dev Reverts with {NotProxyAdmin} if `sender` is not the proxy admin.\n    /// @dev Emits an {AdminChanged} event if `newAdmin` is different from the current proxy admin.\n    /// @param newAdmin The new proxy admin.\n    function changeProxyAdmin(Layout storage s, address sender, address newAdmin) internal {\n        address previousAdmin = s.admin;\n        if (sender != previousAdmin) revert NotProxyAdmin(sender);\n        if (previousAdmin != newAdmin) {\n            s.admin = newAdmin;\n            emit AdminChanged(previousAdmin, newAdmin);\n        }\n    }\n\n    /// @notice Gets the proxy admin.\n    /// @return admin The proxy admin\n    function proxyAdmin(Layout storage s) internal view returns (address admin) {\n        return s.admin;\n    }\n\n    /// @notice Ensures that an account is the proxy admin.\n    /// @dev Reverts with {NotProxyAdmin} if `account` is not the proxy admin.\n    /// @param account The account.\n    function enforceIsProxyAdmin(Layout storage s, address account) internal view {\n        if (account != s.admin) revert NotProxyAdmin(account);\n    }\n\n    function layout() internal pure returns (Layout storage s) {\n        bytes32 position = LAYOUT_STORAGE_SLOT;\n        assembly {\n            s.slot := position\n        }\n    }\n}\n"},"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {InitializationPhaseAlreadyReached} from \"./../errors/ProxyInitializationErrors.sol\";\nimport {StorageSlot} from \"@openzeppelin/contracts/utils/StorageSlot.sol\";\n\n/// @notice Multiple calls protection for storage-modifying proxy initialization functions.\nlibrary ProxyInitialization {\n    /// @notice Sets the initialization phase during a storage-modifying proxy initialization function.\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\n    /// @param storageSlot the storage slot where `phase` is stored.\n    /// @param phase the initialization phase.\n    function setPhase(bytes32 storageSlot, uint256 phase) internal {\n        StorageSlot.Uint256Slot storage currentVersion = StorageSlot.getUint256Slot(storageSlot);\n        uint256 currentPhase = currentVersion.value;\n        if (currentPhase >= phase) revert InitializationPhaseAlreadyReached(currentPhase, phase);\n        currentVersion.value = phase;\n    }\n}\n"},"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @title ERC721 Non-Fungible Token Standard, optional extension: Mintable.\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\n/// @dev Note: The ERC-165 identifier for this interface is 0x8e773e13.\ninterface IERC721Mintable {\n    /// @notice Unsafely mints a token.\n    /// @dev Reverts if `to` is the zero address.\n    /// @dev Reverts if `tokenId` already exists.\n    /// @dev Emits an {IERC721-Transfer} event from the zero address.\n    /// @param to Address of the new token owner.\n    /// @param tokenId Identifier of the token to mint.\n    function mint(address to, uint256 tokenId) external;\n\n    /// @notice Safely mints a token.\n    /// @dev Reverts if `to` is the zero address.\n    /// @dev Reverts if `tokenId` already exists.\n    /// @dev Reverts if `to` is a contract and the call to {IERC721Receiver-onERC721Received} fails, reverts or is rejected.\n    /// @dev Emits an {IERC721-Transfer} event from the zero address.\n    /// @param to Address of the new token owner.\n    /// @param tokenId Identifier of the token to mint.\n    /// @param data Optional data to pass along to the receiver call.\n    function safeMint(address to, uint256 tokenId, bytes calldata data) external;\n\n    /// @notice Unsafely mints a batch of tokens.\n    /// @dev Reverts if `to` is the zero address.\n    /// @dev Reverts if one of `tokenIds` already exists.\n    /// @dev Emits an {IERC721-Transfer} event from the zero address for each of `tokenIds`.\n    /// @param to Address of the new tokens owner.\n    /// @param tokenIds Identifiers of the tokens to mint.\n    function batchMint(address to, uint256[] calldata tokenIds) external;\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/lib/minter/ERC721/base/ERC721MinterBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {IERC721Minter} from \"../interfaces/IERC721Minter.sol\";\nimport {ERC721MinterStorage} from \"../libraries/ERC721MinterStorage.sol\";\n\n/// @title ERC721 Minter contract for minting ERC721 tokens with a maximum token ID limit.\n/// @dev This contract is to be used via inheritance in a proxied implementation.\n/// @dev Note: This contract requires ERC165 (Interface Detection Standard).\nabstract contract ERC721MinterBase is IERC721Minter {\n    using ERC721MinterStorage for ERC721MinterStorage.Layout;\n\n    /// @inheritdoc IERC721Minter\n    function mint(address to) public virtual {\n        ERC721MinterStorage.layout().mint(to);\n    }\n\n    /// @inheritdoc IERC721Minter\n    function currentTokenId() public view returns (uint256 tokenId) {\n        return ERC721MinterStorage.layout().currentId();\n    }\n\n    /// @inheritdoc IERC721Minter\n    function maxTokenId() public view returns (uint256 tokenId) {\n        return ERC721MinterStorage.layout().maxId();\n    }\n}\n"},"contracts/lib/minter/ERC721/ERC721Minter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {InterfaceDetection} from \"@animoca/ethereum-contracts/contracts/introspection/InterfaceDetection.sol\";\nimport {IERC721Mintable} from \"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\";\nimport {ERC721MinterBase} from \"./base/ERC721MinterBase.sol\";\nimport {ERC721MinterStorage} from \"./libraries/ERC721MinterStorage.sol\";\n\n/// @title ERC721 Minter contract (immutable version).\nabstract contract ERC721Minter is ERC721MinterBase, InterfaceDetection {\n    using ERC721MinterStorage for ERC721MinterStorage.Layout;\n\n    /// @notice Initializes the storage with the maximum token ID and the ERC721 token contract.\n    /// @dev Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.\n    /// @dev Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.\n    /// @dev Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.\n    /// @param maxTokenId The maximum token ID that can be minted.\n    /// @param token The ERC721 token contract.\n    constructor(uint256 maxTokenId, IERC721Mintable token) {\n        ERC721MinterStorage.layout().constructorInit(maxTokenId, token);\n    }\n}\n"},"contracts/lib/minter/ERC721/errors/ERC721MinterErrors.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @notice Thrown when the token ID is zero.\nerror ERC721MinterZeroMaxTokenId();\n\n/// @notice Thrown when the token address is zero.\nerror ERC721MinterZeroTokenAddress();\n\n/// @notice Thrown when the token contract interface id does not supported.\nerror ERC721MinterUnsupportedContractType(address tokenContract);\n\n/// @notice Thrown when the maximum token ID is exceeded.\nerror ERC721MinterMaxTokenIdExceeded();\n"},"contracts/lib/minter/ERC721/facets/ERC721MinterFacet.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {ForwarderRegistryContextBase} from \"@animoca/ethereum-contracts/contracts/metatx/base/ForwarderRegistryContextBase.sol\";\nimport {IForwarderRegistry} from \"@animoca/ethereum-contracts/contracts/metatx/interfaces/IForwarderRegistry.sol\";\nimport {ProxyAdminStorage} from \"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyAdminStorage.sol\";\nimport {IERC721Mintable} from \"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\";\nimport {ERC721MinterBase} from \"../base/ERC721MinterBase.sol\";\nimport {ERC721MinterStorage} from \"../libraries/ERC721MinterStorage.sol\";\n\n/// @title ERC721 Minter (facet version).\n/// @dev This contract is to be used as a diamond facet (see ERC2535 Diamond Standard https://eips.ethereum.org/EIPS/eip-2535).\n/// @dev Note: This facet depends on {ProxyAdminFacet} and {InterfaceDetectionFacet}.\ncontract ERC721MinterFacet is ERC721MinterBase, ForwarderRegistryContextBase {\n    using ERC721MinterStorage for ERC721MinterStorage.Layout;\n    using ProxyAdminStorage for ProxyAdminStorage.Layout;\n\n    constructor(IForwarderRegistry forwarderRegistry) ForwarderRegistryContextBase(forwarderRegistry) {}\n\n    /// @notice Initializes the storage with the maximum token ID and the ERC721 token contract.\n    /// @notice Sets the proxy initialization phase to `1`.\n    /// @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\n    /// @dev Reverts with {NotProxyAdmin} if the sender is not the proxy admin.\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\n    /// @dev Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.\n    /// @dev Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.\n    /// @dev Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.\n    /// @param maxTokenId The maximum token ID that can be minted.\n    /// @param token The ERC721 token contract.\n    function initERC721MinterStorage(uint256 maxTokenId, IERC721Mintable token) external {\n        ProxyAdminStorage.layout().enforceIsProxyAdmin(_msgSender());\n        ERC721MinterStorage.layout().proxyInit(maxTokenId, token);\n    }\n}\n"},"contracts/lib/minter/ERC721/interfaces/IERC721Minter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @title ERC721 Minter interface for minting ERC721 tokens.\n/// @dev Note: The ERC-165 identifier for this interface is 0x4f859546.\ninterface IERC721Minter {\n    /// @notice Returns the current token ID.\n    /// @return tokenId The current token ID.\n    function currentTokenId() external view returns (uint256 tokenId);\n\n    /// @notice Returns the maximum token ID.\n    /// @return tokenId The maximum token ID.\n    function maxTokenId() external view returns (uint256 tokenId);\n\n    /// @notice Mints a token to the specified address.\n    /// @param to The address to receive the token.\n    function mint(address to) external;\n}\n"},"contracts/lib/minter/ERC721/libraries/ERC721MinterStorage.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n// solhint-disable-next-line max-line-length\nimport {ERC721MinterZeroMaxTokenId, ERC721MinterUnsupportedContractType, ERC721MinterMaxTokenIdExceeded, ERC721MinterZeroTokenAddress} from \"../errors/ERC721MinterErrors.sol\";\nimport {InterfaceDetectionStorage} from \"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\";\nimport {IERC165} from \"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\";\nimport {IERC721Mintable} from \"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\";\nimport {ProxyInitialization} from \"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\";\nimport {IERC721Minter} from \"../interfaces/IERC721Minter.sol\";\n\nlibrary ERC721MinterStorage {\n    using ERC721MinterStorage for ERC721MinterStorage.Layout;\n    using InterfaceDetectionStorage for InterfaceDetectionStorage.Layout;\n\n    struct Layout {\n        uint256 currentTokenId;\n        uint256 maxTokenId;\n        IERC721Mintable token;\n    }\n\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\"yura2100.token.ERC721.ERC721Minter.storage\")) - 1);\n    bytes32 internal constant PROXY_INIT_PHASE_SLOT = bytes32(uint256(keccak256(\"yura2100.token.ERC721.ERC721Minter.phase\")) - 1);\n\n    /// @notice Initializes the storage with the maximum token ID and the ERC721 token contract.\n    /// @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\n    /// @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\n    /// @dev Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.\n    /// @dev Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.\n    /// @dev Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.\n    /// @param maxTokenId The maximum token ID that can be minted.\n    /// @param token The ERC721 token contract.\n    function constructorInit(Layout storage s, uint256 maxTokenId, IERC721Mintable token) internal {\n        if (maxTokenId == 0) {\n            revert ERC721MinterZeroMaxTokenId();\n        }\n        if (address(token) == address(0)) {\n            revert ERC721MinterZeroTokenAddress();\n        }\n\n        if (!IERC165(address(token)).supportsInterface(type(IERC721Mintable).interfaceId)) {\n            revert ERC721MinterUnsupportedContractType(address(token));\n        }\n        s.maxTokenId = maxTokenId;\n        s.token = token;\n        InterfaceDetectionStorage.layout().setSupportedInterface(type(IERC721Minter).interfaceId, true);\n    }\n\n    /// @notice Initializes the storage with the maximum token ID and the ERC721 token contract.\n    /// @notice Sets the proxy initialization phase to `1`.\n    /// @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\n    /// @dev Note: This function should be called ONLY in the init function of a proxied contract.\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\n    /// @param maxTokenId The maximum token ID that can be minted.\n    /// @param token The ERC721 token contract.\n    function proxyInit(Layout storage s, uint256 maxTokenId, IERC721Mintable token) internal {\n        ProxyInitialization.setPhase(PROXY_INIT_PHASE_SLOT, 1);\n        s.constructorInit(maxTokenId, token);\n    }\n\n    /// @notice Mints a token to the specified address.\n    /// @dev Reverts with {ERC721MinterMaxTokenIdExceeded} if the current token ID exceeds the maximum token ID.\n    /// @param to The address to which the token will be minted.\n    function mint(Layout storage s, address to) internal {\n        uint256 nextId = s.currentTokenId + 1;\n        if (nextId > s.maxTokenId) {\n            revert ERC721MinterMaxTokenIdExceeded();\n        }\n        s.token.mint(to, nextId);\n        s.currentTokenId = nextId;\n    }\n\n    /// @notice Returns the current token ID.\n    /// @return tokenId The current token ID.\n    function currentId(Layout storage s) internal view returns (uint256 tokenId) {\n        return s.currentTokenId;\n    }\n\n    /// @notice Returns the maximum token ID.\n    /// @return tokenId The maximum token ID.\n    function maxId(Layout storage s) internal view returns (uint256 tokenId) {\n        return s.maxTokenId;\n    }\n\n    function layout() internal pure returns (Layout storage s) {\n        bytes32 position = LAYOUT_STORAGE_SLOT;\n        assembly {\n            s.slot := position\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":99999},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@animoca/ethereum-contracts/contracts/introspection/InterfaceDetection.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/InterfaceDetection.sol","exportedSymbols":{"IERC165":[46],"InterfaceDetection":[29],"InterfaceDetectionStorage":[147]},"id":30,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:0"},{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol","file":"./interfaces/IERC165.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":30,"sourceUnit":47,"src":"58:49:0","symbolAliases":[{"foreign":{"id":2,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"66:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol","file":"./libraries/InterfaceDetectionStorage.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":30,"sourceUnit":148,"src":"108:84:0","symbolAliases":[{"foreign":{"id":4,"name":"InterfaceDetectionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"116:25:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"IERC165","nameLocations":["425:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":46,"src":"425:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"425:7:0"}],"canonicalName":"InterfaceDetection","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"194:191:0","text":"@title ERC165 Interface Detection Standard (immutable or proxiable version).\n @dev This contract is to be used via inheritance in an immutable (non-proxied) or proxied implementation."},"fullyImplemented":true,"id":29,"linearizedBaseContracts":[29,46],"name":"InterfaceDetection","nameLocation":"403:18:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":12,"libraryName":{"id":9,"name":"InterfaceDetectionStorage","nameLocations":["445:25:0"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"445:25:0"},"nodeType":"UsingForDirective","src":"439:69:0","typeName":{"id":11,"nodeType":"UserDefinedTypeName","pathNode":{"id":10,"name":"InterfaceDetectionStorage.Layout","nameLocations":["475:25:0","501:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"475:32:0"},"referencedDeclaration":57,"src":"475:32:0","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$57_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"}}},{"baseFunctions":[45],"body":{"id":27,"nodeType":"Block","src":"618:89:0","statements":[{"expression":{"arguments":[{"id":24,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"688:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":20,"name":"InterfaceDetectionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"635:25:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InterfaceDetectionStorage_$147_$","typeString":"type(library InterfaceDetectionStorage)"}},"id":21,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"661:6:0","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":146,"src":"635:32:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$57_storage_ptr_$","typeString":"function () pure returns (struct InterfaceDetectionStorage.Layout storage pointer)"}},"id":22,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"635:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$57_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout storage pointer"}},"id":23,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"670:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":134,"src":"635:52:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$57_storage_ptr_$_t_bytes4_$returns$_t_bool_$attached_to$_t_struct$_Layout_$57_storage_ptr_$","typeString":"function (struct InterfaceDetectionStorage.Layout storage pointer,bytes4) view returns (bool)"}},"id":25,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"635:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":19,"id":26,"nodeType":"Return","src":"628:72:0"}]},"documentation":{"id":13,"nodeType":"StructuredDocumentation","src":"514:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":28,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"551:17:0","nodeType":"FunctionDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"mutability":"mutable","name":"interfaceId","nameLocation":"576:11:0","nodeType":"VariableDeclaration","scope":28,"src":"569:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":14,"name":"bytes4","nodeType":"ElementaryTypeName","src":"569:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"568:20:0"},"returnParameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":28,"src":"612:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"612:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"611:6:0"},"scope":29,"src":"542:165:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":30,"src":"385:324:0","usedErrors":[],"usedEvents":[]}],"src":"32:678:0"},"id":0},"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol","exportedSymbols":{"IllegalInterfaceId":[34]},"id":35,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":31,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:1"},{"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"58:68:1","text":"@notice Thrown when setting the illegal interfaceId 0xffffffff."},"errorSelector":"72c683bb","id":34,"name":"IllegalInterfaceId","nameLocation":"132:18:1","nodeType":"ErrorDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"150:2:1"},"src":"126:27:1"}],"src":"32:122:1"},"id":1},"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[46]},"id":47,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":36,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"58:173:2","text":"@title ERC165 Interface Detection Standard.\n @dev See https://eips.ethereum.org/EIPS/eip-165.\n @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7."},"fullyImplemented":false,"id":46,"linearizedBaseContracts":[46],"name":"IERC165","nameLocation":"241:7:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":38,"nodeType":"StructuredDocumentation","src":"255:340:2","text":"@notice Returns whether this contract implements a given interface.\n @dev Note: This function call must use less than 30 000 gas.\n @param interfaceId the interface identifier to test.\n @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported."},"functionSelector":"01ffc9a7","id":45,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"609:17:2","nodeType":"FunctionDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"interfaceId","nameLocation":"634:11:2","nodeType":"VariableDeclaration","scope":45,"src":"627:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":39,"name":"bytes4","nodeType":"ElementaryTypeName","src":"627:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"626:20:2"},"returnParameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"supported","nameLocation":"675:9:2","nodeType":"VariableDeclaration","scope":45,"src":"670:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":42,"name":"bool","nodeType":"ElementaryTypeName","src":"670:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"669:16:2"},"scope":46,"src":"600:86:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":47,"src":"231:457:2","usedErrors":[],"usedEvents":[]}],"src":"32:657:2"},"id":2},"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol","exportedSymbols":{"IERC165":[46],"IllegalInterfaceId":[34],"InterfaceDetectionStorage":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":48,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol","file":"./../errors/InterfaceDetectionErrors.sol","id":50,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":35,"src":"58:76:3","symbolAliases":[{"foreign":{"id":49,"name":"IllegalInterfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"66:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol","file":"./../interfaces/IERC165.sol","id":52,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":47,"src":"135:52:3","symbolAliases":[{"foreign":{"id":51,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"143:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"InterfaceDetectionStorage","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":147,"linearizedBaseContracts":[147],"name":"InterfaceDetectionStorage","nameLocation":"197:25:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"InterfaceDetectionStorage.Layout","id":57,"members":[{"constant":false,"id":56,"mutability":"mutable","name":"supportedInterfaces","nameLocation":"277:19:3","nodeType":"VariableDeclaration","scope":57,"src":"253:43:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"typeName":{"id":55,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":53,"name":"bytes4","nodeType":"ElementaryTypeName","src":"261:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"Mapping","src":"253:23:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":54,"name":"bool","nodeType":"ElementaryTypeName","src":"271:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"name":"Layout","nameLocation":"236:6:3","nodeType":"StructDefinition","scope":147,"src":"229:74:3","visibility":"public"},{"constant":true,"id":70,"mutability":"constant","name":"LAYOUT_STORAGE_SLOT","nameLocation":"335:19:3","nodeType":"VariableDeclaration","scope":147,"src":"309:136:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":58,"name":"bytes32","nodeType":"ElementaryTypeName","src":"309:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":68,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"hexValue":"616e696d6f63612e636f72652e696e74726f7370656374696f6e2e496e74657266616365446574656374696f6e2e73746f72616765","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"383:55:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ca9d3e17f264b0f3984e2634e94adb37fa3e6a8103f06aeae6fa59e21c769f5e","typeString":"literal_string \"animoca.core.introspection.InterfaceDetection.storage\""},"value":"animoca.core.introspection.InterfaceDetection.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ca9d3e17f264b0f3984e2634e94adb37fa3e6a8103f06aeae6fa59e21c769f5e","typeString":"literal_string \"animoca.core.introspection.InterfaceDetection.storage\""}],"id":63,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"373:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"373:66:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"365:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":61,"name":"uint256","nodeType":"ElementaryTypeName","src":"365:7:3","typeDescriptions":{}}},"id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"365:75:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":67,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"443:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"365:79:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":60,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"357:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":59,"name":"bytes32","nodeType":"ElementaryTypeName","src":"357:7:3","typeDescriptions":{}}},"id":69,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"357:88:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":true,"id":73,"mutability":"constant","name":"ILLEGAL_INTERFACE_ID","nameLocation":"477:20:3","nodeType":"VariableDeclaration","scope":147,"src":"452:58:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":71,"name":"bytes4","nodeType":"ElementaryTypeName","src":"452:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786666666666666666","id":72,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"500:10:3","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"visibility":"internal"},{"body":{"id":99,"nodeType":"Block","src":"867:141:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":84,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"881:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":85,"name":"ILLEGAL_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"896:20:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"881:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":90,"nodeType":"IfStatement","src":"877:68:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"IllegalInterfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"925:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"925:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"RevertStatement","src":"918:27:3"}},{"expression":{"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":91,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"955:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$57_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout storage pointer"}},"id":94,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"957:19:3","memberName":"supportedInterfaces","nodeType":"MemberAccess","referencedDeclaration":56,"src":"955:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":95,"indexExpression":{"id":93,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"977:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"955:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":96,"name":"supported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"992:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"955:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":98,"nodeType":"ExpressionStatement","src":"955:46:3"}]},"documentation":{"id":74,"nodeType":"StructuredDocumentation","src":"517:251:3","text":"@notice Sets or unsets an ERC165 interface.\n @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\n @param interfaceId the interface identifier.\n @param supported True to set the interface, false to unset it."},"id":100,"implemented":true,"kind":"function","modifiers":[],"name":"setSupportedInterface","nameLocation":"782:21:3","nodeType":"FunctionDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":77,"mutability":"mutable","name":"s","nameLocation":"819:1:3","nodeType":"VariableDeclaration","scope":100,"src":"804:16:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$57_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"},"typeName":{"id":76,"nodeType":"UserDefinedTypeName","pathNode":{"id":75,"name":"Layout","nameLocations":["804:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"804:6:3"},"referencedDeclaration":57,"src":"804:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$57_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"interfaceId","nameLocation":"829:11:3","nodeType":"VariableDeclaration","scope":100,"src":"822:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":78,"name":"bytes4","nodeType":"ElementaryTypeName","src":"822:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"supported","nameLocation":"847:9:3","nodeType":"VariableDeclaration","scope":100,"src":"842:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":80,"name":"bool","nodeType":"ElementaryTypeName","src":"842:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"803:54:3"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"867:0:3"},"scope":147,"src":"773:235:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":133,"nodeType":"Block","src":"1463:236:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":111,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"1477:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":112,"name":"ILLEGAL_INTERFACE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"1492:20:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1477:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":117,"nodeType":"IfStatement","src":"1473:78:3","trueBody":{"id":116,"nodeType":"Block","src":"1514:37:3","statements":[{"expression":{"hexValue":"66616c7365","id":114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1535:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":110,"id":115,"nodeType":"Return","src":"1528:12:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":118,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"1564:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":120,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1584:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$46_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$46_$","typeString":"type(contract IERC165)"}],"id":119,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1579:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1579:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$46","typeString":"type(contract IERC165)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1593:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1579:25:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1564:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":127,"nodeType":"IfStatement","src":"1560:82:3","trueBody":{"id":126,"nodeType":"Block","src":"1606:36:3","statements":[{"expression":{"hexValue":"74727565","id":124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1627:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":110,"id":125,"nodeType":"Return","src":"1620:11:3"}]}},{"expression":{"baseExpression":{"expression":{"id":128,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"1658:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$57_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout storage pointer"}},"id":129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1660:19:3","memberName":"supportedInterfaces","nodeType":"MemberAccess","referencedDeclaration":56,"src":"1658:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes4_$_t_bool_$","typeString":"mapping(bytes4 => bool)"}},"id":131,"indexExpression":{"id":130,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"1680:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1658:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":110,"id":132,"nodeType":"Return","src":"1651:41:3"}]},"documentation":{"id":101,"nodeType":"StructuredDocumentation","src":"1014:340:3","text":"@notice Returns whether this contract implements a given interface.\n @dev Note: This function call must use less than 30 000 gas.\n @param interfaceId The interface identifier to test.\n @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported."},"id":134,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1368:17:3","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"s","nameLocation":"1401:1:3","nodeType":"VariableDeclaration","scope":134,"src":"1386:16:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$57_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"},"typeName":{"id":103,"nodeType":"UserDefinedTypeName","pathNode":{"id":102,"name":"Layout","nameLocations":["1386:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"1386:6:3"},"referencedDeclaration":57,"src":"1386:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$57_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"interfaceId","nameLocation":"1411:11:3","nodeType":"VariableDeclaration","scope":134,"src":"1404:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":105,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1404:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1385:38:3"},"returnParameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"supported","nameLocation":"1452:9:3","nodeType":"VariableDeclaration","scope":134,"src":"1447:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":108,"name":"bool","nodeType":"ElementaryTypeName","src":"1447:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1446:16:3"},"scope":147,"src":"1359:340:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":145,"nodeType":"Block","src":"1764:115:3","statements":[{"assignments":[141],"declarations":[{"constant":false,"id":141,"mutability":"mutable","name":"position","nameLocation":"1782:8:3","nodeType":"VariableDeclaration","scope":145,"src":"1774:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1774:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":143,"initialValue":{"id":142,"name":"LAYOUT_STORAGE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"1793:19:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1774:38:3"},{"AST":{"nativeSrc":"1831:42:3","nodeType":"YulBlock","src":"1831:42:3","statements":[{"nativeSrc":"1845:18:3","nodeType":"YulAssignment","src":"1845:18:3","value":{"name":"position","nativeSrc":"1855:8:3","nodeType":"YulIdentifier","src":"1855:8:3"},"variableNames":[{"name":"s.slot","nativeSrc":"1845:6:3","nodeType":"YulIdentifier","src":"1845:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":141,"isOffset":false,"isSlot":false,"src":"1855:8:3","valueSize":1},{"declaration":138,"isOffset":false,"isSlot":true,"src":"1845:6:3","suffix":"slot","valueSize":1}],"id":144,"nodeType":"InlineAssembly","src":"1822:51:3"}]},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"layout","nameLocation":"1714:6:3","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[],"src":"1720:2:3"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"s","nameLocation":"1761:1:3","nodeType":"VariableDeclaration","scope":146,"src":"1746:16:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$57_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"},"typeName":{"id":137,"nodeType":"UserDefinedTypeName","pathNode":{"id":136,"name":"Layout","nameLocations":["1746:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"1746:6:3"},"referencedDeclaration":57,"src":"1746:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$57_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"}},"visibility":"internal"}],"src":"1745:18:3"},"scope":147,"src":"1705:174:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":148,"src":"189:1692:3","usedErrors":[],"usedEvents":[]}],"src":"32:1850:3"},"id":3},"@animoca/ethereum-contracts/contracts/metatx/base/ForwarderRegistryContextBase.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/metatx/base/ForwarderRegistryContextBase.sol","exportedSymbols":{"ERC2771Calldata":[310],"ForwarderRegistryContextBase":[267],"IForwarderRegistry":[281]},"id":268,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:4"},{"absolutePath":"@animoca/ethereum-contracts/contracts/metatx/interfaces/IForwarderRegistry.sol","file":"./../interfaces/IForwarderRegistry.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":268,"sourceUnit":282,"src":"58:74:4","symbolAliases":[{"foreign":{"id":150,"name":"IForwarderRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"66:18:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/metatx/libraries/ERC2771Calldata.sol","file":"./../libraries/ERC2771Calldata.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":268,"sourceUnit":311,"src":"133:67:4","symbolAliases":[{"foreign":{"id":152,"name":"ERC2771Calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"141:15:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"ForwarderRegistryContextBase","contractDependencies":[],"contractKind":"contract","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"202:243:4","text":"@title Meta-Transactions Forwarder Registry Context (proxiable version).\n @dev This contract is to be used via inheritance in a proxied implementation.\n @dev Derived from https://github.com/wighawag/universal-forwarder (MIT licence)"},"fullyImplemented":true,"id":267,"linearizedBaseContracts":[267],"name":"ForwarderRegistryContextBase","nameLocation":"463:28:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":157,"mutability":"immutable","name":"_FORWARDER_REGISTRY","nameLocation":"536:19:4","nodeType":"VariableDeclaration","scope":267,"src":"498:57:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"},"typeName":{"id":156,"nodeType":"UserDefinedTypeName","pathNode":{"id":155,"name":"IForwarderRegistry","nameLocations":["498:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":281,"src":"498:18:4"},"referencedDeclaration":281,"src":"498:18:4","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"}},"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"612:56:4","statements":[{"expression":{"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":163,"name":"_FORWARDER_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"622:19:4","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":164,"name":"forwarderRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"644:17:4","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"}},"src":"622:39:4","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"}},"id":166,"nodeType":"ExpressionStatement","src":"622:39:4"}]},"id":168,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"forwarderRegistry","nameLocation":"593:17:4","nodeType":"VariableDeclaration","scope":168,"src":"574:36:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"},"typeName":{"id":159,"nodeType":"UserDefinedTypeName","pathNode":{"id":158,"name":"IForwarderRegistry","nameLocations":["574:18:4"],"nodeType":"IdentifierPath","referencedDeclaration":281,"src":"574:18:4"},"referencedDeclaration":281,"src":"574:18:4","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"}},"visibility":"internal"}],"src":"573:38:4"},"returnParameters":{"id":162,"nodeType":"ParameterList","parameters":[],"src":"612:0:4"},"scope":267,"src":"562:106:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":217,"nodeType":"Block","src":"846:683:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":174,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1047:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1051:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1047:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":176,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"1061:2:4","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1064:6:4","memberName":"origin","nodeType":"MemberAccess","src":"1061:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1047:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":179,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1074:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1078:4:4","memberName":"data","nodeType":"MemberAccess","src":"1074:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1083:6:4","memberName":"length","nodeType":"MemberAccess","src":"1074:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3234","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1092:2:4","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"1074:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1047:47:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":189,"nodeType":"IfStatement","src":"1043:95:4","trueBody":{"id":188,"nodeType":"Block","src":"1096:42:4","statements":[{"expression":{"expression":{"id":185,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1117:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1121:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1117:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":173,"id":187,"nodeType":"Return","src":"1110:17:4"}]}},{"assignments":[191],"declarations":[{"constant":false,"id":191,"mutability":"mutable","name":"sender","nameLocation":"1156:6:4","nodeType":"VariableDeclaration","scope":217,"src":"1148:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":195,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":192,"name":"ERC2771Calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"1165:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771Calldata_$310_$","typeString":"type(library ERC2771Calldata)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:9:4","memberName":"msgSender","nodeType":"MemberAccess","referencedDeclaration":292,"src":"1165:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_address_$","typeString":"function () pure returns (address)"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1165:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1148:44:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":196,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1350:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1354:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1350:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":200,"name":"_FORWARDER_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"1372:19:4","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"}],"id":199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1364:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"1364:7:4","typeDescriptions":{}}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1364:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1350:42:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":205,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"1436:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":206,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1444:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1448:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1444:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":203,"name":"_FORWARDER_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"1396:19:4","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1416:19:4","memberName":"isApprovedForwarder","nodeType":"MemberAccess","referencedDeclaration":280,"src":"1396:39:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view external returns (bool)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1396:59:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1350:105:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":213,"nodeType":"IfStatement","src":"1346:149:4","trueBody":{"id":212,"nodeType":"Block","src":"1457:38:4","statements":[{"expression":{"id":210,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"1478:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":173,"id":211,"nodeType":"Return","src":"1471:13:4"}]}},{"expression":{"expression":{"id":214,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1512:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1516:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1512:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":173,"id":216,"nodeType":"Return","src":"1505:17:4"}]},"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"674:105:4","text":"@notice Returns the message sender depending on the ForwarderRegistry-based meta-transaction context."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"793:10:4","nodeType":"FunctionDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"803:2:4"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":218,"src":"837:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"836:9:4"},"scope":267,"src":"784:745:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":265,"nodeType":"Block","src":"1710:668:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":224,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1911:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1915:6:4","memberName":"sender","nodeType":"MemberAccess","src":"1911:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":226,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"1925:2:4","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:6:4","memberName":"origin","nodeType":"MemberAccess","src":"1925:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1911:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":229,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1938:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1942:4:4","memberName":"data","nodeType":"MemberAccess","src":"1938:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1947:6:4","memberName":"length","nodeType":"MemberAccess","src":"1938:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3234","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1956:2:4","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"1938:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1911:47:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":239,"nodeType":"IfStatement","src":"1907:93:4","trueBody":{"id":238,"nodeType":"Block","src":"1960:40:4","statements":[{"expression":{"expression":{"id":235,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1981:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1985:4:4","memberName":"data","nodeType":"MemberAccess","src":"1981:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":223,"id":237,"nodeType":"Return","src":"1974:15:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":240,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2161:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2165:6:4","memberName":"sender","nodeType":"MemberAccess","src":"2161:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":244,"name":"_FORWARDER_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2183:19:4","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"}],"id":243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2175:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"2175:7:4","typeDescriptions":{}}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2161:42:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":249,"name":"ERC2771Calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"2247:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771Calldata_$310_$","typeString":"type(library ERC2771Calldata)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2263:9:4","memberName":"msgSender","nodeType":"MemberAccess","referencedDeclaration":292,"src":"2247:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_address_$","typeString":"function () pure returns (address)"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":252,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2276:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2280:6:4","memberName":"sender","nodeType":"MemberAccess","src":"2276:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":247,"name":"_FORWARDER_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2207:19:4","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2227:19:4","memberName":"isApprovedForwarder","nodeType":"MemberAccess","referencedDeclaration":280,"src":"2207:39:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view external returns (bool)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2207:80:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2161:126:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":261,"nodeType":"IfStatement","src":"2157:189:4","trueBody":{"id":260,"nodeType":"Block","src":"2289:57:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":256,"name":"ERC2771Calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"2310:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771Calldata_$310_$","typeString":"type(library ERC2771Calldata)"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2326:7:4","memberName":"msgData","nodeType":"MemberAccess","referencedDeclaration":309,"src":"2310:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () pure returns (bytes calldata)"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2310:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":223,"id":259,"nodeType":"Return","src":"2303:32:4"}]}},{"expression":{"expression":{"id":262,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2363:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2367:4:4","memberName":"data","nodeType":"MemberAccess","src":"2363:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":223,"id":264,"nodeType":"Return","src":"2356:15:4"}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"1535:103:4","text":"@notice Returns the message data depending on the ForwarderRegistry-based meta-transaction context."},"id":266,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"1652:8:4","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"1660:2:4"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":266,"src":"1694:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":221,"name":"bytes","nodeType":"ElementaryTypeName","src":"1694:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1693:16:4"},"scope":267,"src":"1643:735:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":268,"src":"445:1935:4","usedErrors":[],"usedEvents":[]}],"src":"32:2349:4"},"id":4},"@animoca/ethereum-contracts/contracts/metatx/interfaces/IForwarderRegistry.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/metatx/interfaces/IForwarderRegistry.sol","exportedSymbols":{"IForwarderRegistry":[281]},"id":282,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":269,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IForwarderRegistry","contractDependencies":[],"contractKind":"interface","documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"58:143:5","text":"@title Universal Meta-Transactions Forwarder Registry.\n @dev Derived from https://github.com/wighawag/universal-forwarder (MIT licence)"},"fullyImplemented":false,"id":281,"linearizedBaseContracts":[281],"name":"IForwarderRegistry","nameLocation":"211:18:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"236:314:5","text":"@notice Checks whether an account is as an approved meta-transaction forwarder for a sender account.\n @param sender The sender account.\n @param forwarder The forwarder account.\n @return isApproved True if `forwarder` is an approved meta-transaction forwarder for `sender`, false otherwise."},"functionSelector":"8929a8ca","id":280,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForwarder","nameLocation":"564:19:5","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"sender","nameLocation":"592:6:5","nodeType":"VariableDeclaration","scope":280,"src":"584:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":272,"name":"address","nodeType":"ElementaryTypeName","src":"584:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"forwarder","nameLocation":"608:9:5","nodeType":"VariableDeclaration","scope":280,"src":"600:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"600:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"583:35:5"},"returnParameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"isApproved","nameLocation":"647:10:5","nodeType":"VariableDeclaration","scope":280,"src":"642:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":277,"name":"bool","nodeType":"ElementaryTypeName","src":"642:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"641:17:5"},"scope":281,"src":"555:104:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":282,"src":"201:460:5","usedErrors":[],"usedEvents":[]}],"src":"32:630:5"},"id":5},"@animoca/ethereum-contracts/contracts/metatx/libraries/ERC2771Calldata.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/metatx/libraries/ERC2771Calldata.sol","exportedSymbols":{"ERC2771Calldata":[310]},"id":311,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":283,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"ERC2771Calldata","contractDependencies":[],"contractKind":"library","documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"58:144:6","text":"@dev Derived from https://github.com/OpenZeppelin/openzeppelin-contracts (MIT licence)\n @dev See https://eips.ethereum.org/EIPS/eip-2771"},"fullyImplemented":true,"id":310,"linearizedBaseContracts":[310],"name":"ERC2771Calldata","nameLocation":"210:15:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":291,"nodeType":"Block","src":"398:105:6","statements":[{"AST":{"nativeSrc":"417:80:6","nodeType":"YulBlock","src":"417:80:6","statements":[{"nativeSrc":"431:56:6","nodeType":"YulAssignment","src":"431:56:6","value":{"arguments":[{"kind":"number","nativeSrc":"445:2:6","nodeType":"YulLiteral","src":"445:2:6","type":"","value":"96"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"466:12:6","nodeType":"YulIdentifier","src":"466:12:6"},"nativeSrc":"466:14:6","nodeType":"YulFunctionCall","src":"466:14:6"},{"kind":"number","nativeSrc":"482:2:6","nodeType":"YulLiteral","src":"482:2:6","type":"","value":"20"}],"functionName":{"name":"sub","nativeSrc":"462:3:6","nodeType":"YulIdentifier","src":"462:3:6"},"nativeSrc":"462:23:6","nodeType":"YulFunctionCall","src":"462:23:6"}],"functionName":{"name":"calldataload","nativeSrc":"449:12:6","nodeType":"YulIdentifier","src":"449:12:6"},"nativeSrc":"449:37:6","nodeType":"YulFunctionCall","src":"449:37:6"}],"functionName":{"name":"shr","nativeSrc":"441:3:6","nodeType":"YulIdentifier","src":"441:3:6"},"nativeSrc":"441:46:6","nodeType":"YulFunctionCall","src":"441:46:6"},"variableNames":[{"name":"sender","nativeSrc":"431:6:6","nodeType":"YulIdentifier","src":"431:6:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":288,"isOffset":false,"isSlot":false,"src":"431:6:6","valueSize":1}],"id":290,"nodeType":"InlineAssembly","src":"408:89:6"}]},"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"232:101:6","text":"@notice Returns the sender address appended at the end of the calldata, as specified in EIP-2771."},"id":292,"implemented":true,"kind":"function","modifiers":[],"name":"msgSender","nameLocation":"347:9:6","nodeType":"FunctionDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[],"src":"356:2:6"},"returnParameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"sender","nameLocation":"390:6:6","nodeType":"VariableDeclaration","scope":292,"src":"382:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"382:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"381:16:6"},"scope":310,"src":"338:165:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":308,"nodeType":"Block","src":"679:89:6","statements":[{"id":307,"nodeType":"UncheckedBlock","src":"689:73:6","statements":[{"expression":{"baseExpression":{"expression":{"id":298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"720:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"724:4:6","memberName":"data","nodeType":"MemberAccess","src":"720:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":300,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"730:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"734:4:6","memberName":"data","nodeType":"MemberAccess","src":"730:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:6","memberName":"length","nodeType":"MemberAccess","src":"730:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3230","id":303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:2:6","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"src":"730:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"720:31:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":297,"id":306,"nodeType":"Return","src":"713:38:6"}]}]},"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"509:102:6","text":"@notice Returns the calldata while omitting the appended sender address, as specified in EIP-2771."},"id":309,"implemented":true,"kind":"function","modifiers":[],"name":"msgData","nameLocation":"625:7:6","nodeType":"FunctionDefinition","parameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"632:2:6"},"returnParameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":296,"mutability":"mutable","name":"data","nameLocation":"673:4:6","nodeType":"VariableDeclaration","scope":309,"src":"658:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":295,"name":"bytes","nodeType":"ElementaryTypeName","src":"658:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"657:21:6"},"scope":310,"src":"616:152:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":311,"src":"202:568:6","usedErrors":[],"usedEvents":[]}],"src":"32:739:6"},"id":6},"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyAdminErrors.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyAdminErrors.sol","exportedSymbols":{"NoInitialProxyAdmin":[315],"NotProxyAdmin":[320]},"id":321,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":312,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:7"},{"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"58:54:7","text":"@notice Thrown when the initial admin is not set."},"errorSelector":"bf919560","id":315,"name":"NoInitialProxyAdmin","nameLocation":"118:19:7","nodeType":"ErrorDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"137:2:7"},"src":"112:28:7"},{"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"142:127:7","text":"@notice Thrown when an account is not the proxy admin but is required to.\n @param account The account that was checked."},"errorSelector":"673a31a1","id":320,"name":"NotProxyAdmin","nameLocation":"275:13:7","nodeType":"ErrorDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"account","nameLocation":"297:7:7","nodeType":"VariableDeclaration","scope":320,"src":"289:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"289:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"288:17:7"},"src":"269:37:7"}],"src":"32:275:7"},"id":7},"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol","exportedSymbols":{"InitializationPhaseAlreadyReached":[329]},"id":330,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":322,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:8"},{"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"58:179:8","text":"@notice Emitted when trying to set a phase value that has already been reached.\n @param currentPhase The current phase.\n @param newPhase The new phase trying to be set."},"errorSelector":"bf0c18ec","id":329,"name":"InitializationPhaseAlreadyReached","nameLocation":"243:33:8","nodeType":"ErrorDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"currentPhase","nameLocation":"285:12:8","nodeType":"VariableDeclaration","scope":329,"src":"277:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"277:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"newPhase","nameLocation":"307:8:8","nodeType":"VariableDeclaration","scope":329,"src":"299:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"299:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"276:40:8"},"src":"237:80:8"}],"src":"32:286:8"},"id":8},"@animoca/ethereum-contracts/contracts/proxy/events/ProxyAdminEvents.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/events/ProxyAdminEvents.sol","exportedSymbols":{"AdminChanged":[338]},"id":339,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":331,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:9"},{"anonymous":false,"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"58:130:9","text":"@notice Emitted when the proxy admin changes.\n @param previousAdmin the previous admin.\n @param newAdmin the new admin."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":338,"name":"AdminChanged","nameLocation":"194:12:9","nodeType":"EventDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"215:13:9","nodeType":"VariableDeclaration","scope":338,"src":"207:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"207:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":336,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"238:8:9","nodeType":"VariableDeclaration","scope":338,"src":"230:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":335,"name":"address","nodeType":"ElementaryTypeName","src":"230:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"206:41:9"},"src":"188:60:9"}],"src":"32:217:9"},"id":9},"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyAdminStorage.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyAdminStorage.sol","exportedSymbols":{"AdminChanged":[338],"NoInitialProxyAdmin":[315],"NotProxyAdmin":[320],"ProxyAdminStorage":[523],"ProxyInitialization":[570]},"id":524,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":340,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:10"},{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyAdminErrors.sol","file":"./../errors/ProxyAdminErrors.sol","id":343,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":524,"sourceUnit":321,"src":"58:84:10","symbolAliases":[{"foreign":{"id":341,"name":"NoInitialProxyAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"66:19:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":342,"name":"NotProxyAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"87:13:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/events/ProxyAdminEvents.sol","file":"./../events/ProxyAdminEvents.sol","id":345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":524,"sourceUnit":339,"src":"143:62:10","symbolAliases":[{"foreign":{"id":344,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"151:12:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol","file":"./ProxyInitialization.sol","id":347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":524,"sourceUnit":571,"src":"206:62:10","symbolAliases":[{"foreign":{"id":346,"name":"ProxyInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"214:19:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ProxyAdminStorage","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":523,"linearizedBaseContracts":[523],"name":"ProxyAdminStorage","nameLocation":"278:17:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":351,"libraryName":{"id":348,"name":"ProxyAdminStorage","nameLocations":["308:17:10"],"nodeType":"IdentifierPath","referencedDeclaration":523,"src":"308:17:10"},"nodeType":"UsingForDirective","src":"302:53:10","typeName":{"id":350,"nodeType":"UserDefinedTypeName","pathNode":{"id":349,"name":"ProxyAdminStorage.Layout","nameLocations":["330:17:10","348:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":354,"src":"330:24:10"},"referencedDeclaration":354,"src":"330:24:10","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout"}}},{"canonicalName":"ProxyAdminStorage.Layout","id":354,"members":[{"constant":false,"id":353,"mutability":"mutable","name":"admin","nameLocation":"393:5:10","nodeType":"VariableDeclaration","scope":354,"src":"385:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":352,"name":"address","nodeType":"ElementaryTypeName","src":"385:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Layout","nameLocation":"368:6:10","nodeType":"StructDefinition","scope":523,"src":"361:44:10","visibility":"public"},{"constant":true,"id":367,"mutability":"constant","name":"LAYOUT_STORAGE_SLOT","nameLocation":"562:19:10","nodeType":"VariableDeclaration","scope":523,"src":"536:102:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"536:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"hexValue":"656970313936372e70726f78792e61646d696e","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"610:21:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104","typeString":"literal_string \"eip1967.proxy.admin\""},"value":"eip1967.proxy.admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104","typeString":"literal_string \"eip1967.proxy.admin\""}],"id":360,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"600:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"600:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"592:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:10","typeDescriptions":{}}},"id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"592:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"636:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"592:45:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"584:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"584:7:10","typeDescriptions":{}}},"id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"584:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":true,"id":380,"mutability":"constant","name":"PROXY_INIT_PHASE_SLOT","nameLocation":"670:21:10","nodeType":"VariableDeclaration","scope":523,"src":"644:110:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"644:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"hexValue":"656970313936372e70726f78792e61646d696e2e7068617365","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"720:27:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c4214a2a0bb1b53325bec6bf1dc591abd32036bb3f39039f460ac4a3eb0f7298","typeString":"literal_string \"eip1967.proxy.admin.phase\""},"value":"eip1967.proxy.admin.phase"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c4214a2a0bb1b53325bec6bf1dc591abd32036bb3f39039f460ac4a3eb0f7298","typeString":"literal_string \"eip1967.proxy.admin.phase\""}],"id":373,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"710:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"710:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"702:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"702:7:10","typeDescriptions":{}}},"id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"702:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"702:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"694:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"694:7:10","typeDescriptions":{}}},"id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"694:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"body":{"id":413,"nodeType":"Block","src":"1213:162:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":389,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"1227:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1251:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1243:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:10","typeDescriptions":{}}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1227:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":398,"nodeType":"IfStatement","src":"1223:60:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":395,"name":"NoInitialProxyAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1262:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1262:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":397,"nodeType":"RevertStatement","src":"1255:28:10"}},{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":399,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"1293:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout storage pointer"}},"id":401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1295:5:10","memberName":"admin","nodeType":"MemberAccess","referencedDeclaration":353,"src":"1293:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":402,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"1303:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1293:22:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":404,"nodeType":"ExpressionStatement","src":"1293:22:10"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1351:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1343:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"1343:7:10","typeDescriptions":{}}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1343:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":410,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"1355:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":405,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"1330:12:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"1325:43:10"}]},"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"761:373:10","text":"@notice Initializes the storage with an initial admin (immutable version).\n @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\n @dev Reverts {NoInitialProxyAdmin} if `initialAdmin` is the zero address.\n @dev Emits an {AdminChanged} event.\n @param initialAdmin The initial payout wallet."},"id":414,"implemented":true,"kind":"function","modifiers":[],"name":"constructorInit","nameLocation":"1148:15:10","nodeType":"FunctionDefinition","parameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"s","nameLocation":"1179:1:10","nodeType":"VariableDeclaration","scope":414,"src":"1164:16:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout"},"typeName":{"id":383,"nodeType":"UserDefinedTypeName","pathNode":{"id":382,"name":"Layout","nameLocations":["1164:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":354,"src":"1164:6:10"},"referencedDeclaration":354,"src":"1164:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"initialAdmin","nameLocation":"1190:12:10","nodeType":"VariableDeclaration","scope":414,"src":"1182:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1163:40:10"},"returnParameters":{"id":388,"nodeType":"ParameterList","parameters":[],"src":"1213:0:10"},"scope":523,"src":"1139:236:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":436,"nodeType":"Block","src":"1990:112:10","statements":[{"expression":{"arguments":[{"id":426,"name":"PROXY_INIT_PHASE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"2029:21:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"31","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2052:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":423,"name":"ProxyInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"2000:19:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ProxyInitialization_$570_$","typeString":"type(library ProxyInitialization)"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2020:8:10","memberName":"setPhase","nodeType":"MemberAccess","referencedDeclaration":569,"src":"2000:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2000:54:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"2000:54:10"},{"expression":{"arguments":[{"id":433,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2082:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":430,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2064:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout storage pointer"}},"id":432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2066:15:10","memberName":"constructorInit","nodeType":"MemberAccess","referencedDeclaration":414,"src":"2064:17:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Layout_$354_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$354_storage_ptr_$","typeString":"function (struct ProxyAdminStorage.Layout storage pointer,address)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2064:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"2064:31:10"}]},"documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"1381:536:10","text":"@notice Initializes the storage with an initial admin (proxied version).\n @notice Sets the proxy initialization phase to `1`.\n @dev Note: This function should be called ONLY in the init function of a proxied contract.\n @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\n @dev Reverts {NoInitialProxyAdmin} if `initialAdmin` is the zero address.\n @dev Emits an {AdminChanged} event.\n @param initialAdmin The initial payout wallet."},"id":437,"implemented":true,"kind":"function","modifiers":[],"name":"proxyInit","nameLocation":"1931:9:10","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"s","nameLocation":"1956:1:10","nodeType":"VariableDeclaration","scope":437,"src":"1941:16:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout"},"typeName":{"id":417,"nodeType":"UserDefinedTypeName","pathNode":{"id":416,"name":"Layout","nameLocations":["1941:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":354,"src":"1941:6:10"},"referencedDeclaration":354,"src":"1941:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"initialAdmin","nameLocation":"1967:12:10","nodeType":"VariableDeclaration","scope":437,"src":"1959:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1940:40:10"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"1990:0:10"},"scope":523,"src":"1922:180:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":477,"nodeType":"Block","src":"2458:254:10","statements":[{"assignments":[449],"declarations":[{"constant":false,"id":449,"mutability":"mutable","name":"previousAdmin","nameLocation":"2476:13:10","nodeType":"VariableDeclaration","scope":477,"src":"2468:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"2468:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":452,"initialValue":{"expression":{"id":450,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"2492:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout storage pointer"}},"id":451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2494:5:10","memberName":"admin","nodeType":"MemberAccess","referencedDeclaration":353,"src":"2492:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2468:31:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":453,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"2513:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":454,"name":"previousAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2523:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2513:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":460,"nodeType":"IfStatement","src":"2509:57:10","trueBody":{"errorCall":{"arguments":[{"id":457,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"2559:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":456,"name":"NotProxyAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"2545:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2545:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"RevertStatement","src":"2538:28:10"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":461,"name":"previousAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2580:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":462,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2597:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2580:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":476,"nodeType":"IfStatement","src":"2576:130:10","trueBody":{"id":475,"nodeType":"Block","src":"2607:99:10","statements":[{"expression":{"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":464,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"2621:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout storage pointer"}},"id":466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2623:5:10","memberName":"admin","nodeType":"MemberAccess","referencedDeclaration":353,"src":"2621:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":467,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2631:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2621:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":469,"nodeType":"ExpressionStatement","src":"2621:18:10"},{"eventCall":{"arguments":[{"id":471,"name":"previousAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2671:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":472,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2686:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":470,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"2658:12:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2658:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"EmitStatement","src":"2653:42:10"}]}}]},"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"2108:258:10","text":"@notice Sets a new proxy admin.\n @dev Reverts with {NotProxyAdmin} if `sender` is not the proxy admin.\n @dev Emits an {AdminChanged} event if `newAdmin` is different from the current proxy admin.\n @param newAdmin The new proxy admin."},"id":478,"implemented":true,"kind":"function","modifiers":[],"name":"changeProxyAdmin","nameLocation":"2380:16:10","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"s","nameLocation":"2412:1:10","nodeType":"VariableDeclaration","scope":478,"src":"2397:16:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout"},"typeName":{"id":440,"nodeType":"UserDefinedTypeName","pathNode":{"id":439,"name":"Layout","nameLocations":["2397:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":354,"src":"2397:6:10"},"referencedDeclaration":354,"src":"2397:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"sender","nameLocation":"2423:6:10","nodeType":"VariableDeclaration","scope":478,"src":"2415:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":442,"name":"address","nodeType":"ElementaryTypeName","src":"2415:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"newAdmin","nameLocation":"2439:8:10","nodeType":"VariableDeclaration","scope":478,"src":"2431:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"2431:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2396:52:10"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[],"src":"2458:0:10"},"scope":523,"src":"2371:341:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"2870:31:10","statements":[{"expression":{"expression":{"id":487,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"2887:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout storage pointer"}},"id":488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2889:5:10","memberName":"admin","nodeType":"MemberAccess","referencedDeclaration":353,"src":"2887:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":486,"id":489,"nodeType":"Return","src":"2880:14:10"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"2718:71:10","text":"@notice Gets the proxy admin.\n @return admin The proxy admin"},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"proxyAdmin","nameLocation":"2803:10:10","nodeType":"FunctionDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"s","nameLocation":"2829:1:10","nodeType":"VariableDeclaration","scope":491,"src":"2814:16:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout"},"typeName":{"id":481,"nodeType":"UserDefinedTypeName","pathNode":{"id":480,"name":"Layout","nameLocations":["2814:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":354,"src":"2814:6:10"},"referencedDeclaration":354,"src":"2814:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout"}},"visibility":"internal"}],"src":"2813:18:10"},"returnParameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"admin","nameLocation":"2863:5:10","nodeType":"VariableDeclaration","scope":491,"src":"2855:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"2855:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2854:15:10"},"scope":523,"src":"2794:107:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":509,"nodeType":"Block","src":"3160:70:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":500,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3174:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":501,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3185:1:10","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout storage pointer"}},"id":502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3187:5:10","memberName":"admin","nodeType":"MemberAccess","referencedDeclaration":353,"src":"3185:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3174:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":508,"nodeType":"IfStatement","src":"3170:53:10","trueBody":{"errorCall":{"arguments":[{"id":505,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"3215:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":504,"name":"NotProxyAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"3201:13:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3201:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":507,"nodeType":"RevertStatement","src":"3194:29:10"}}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"2907:170:10","text":"@notice Ensures that an account is the proxy admin.\n @dev Reverts with {NotProxyAdmin} if `account` is not the proxy admin.\n @param account The account."},"id":510,"implemented":true,"kind":"function","modifiers":[],"name":"enforceIsProxyAdmin","nameLocation":"3091:19:10","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"s","nameLocation":"3126:1:10","nodeType":"VariableDeclaration","scope":510,"src":"3111:16:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout"},"typeName":{"id":494,"nodeType":"UserDefinedTypeName","pathNode":{"id":493,"name":"Layout","nameLocations":["3111:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":354,"src":"3111:6:10"},"referencedDeclaration":354,"src":"3111:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"account","nameLocation":"3137:7:10","nodeType":"VariableDeclaration","scope":510,"src":"3129:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"3129:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3110:35:10"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"3160:0:10"},"scope":523,"src":"3082:148:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":521,"nodeType":"Block","src":"3295:115:10","statements":[{"assignments":[517],"declarations":[{"constant":false,"id":517,"mutability":"mutable","name":"position","nameLocation":"3313:8:10","nodeType":"VariableDeclaration","scope":521,"src":"3305:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3305:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":519,"initialValue":{"id":518,"name":"LAYOUT_STORAGE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"3324:19:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3305:38:10"},{"AST":{"nativeSrc":"3362:42:10","nodeType":"YulBlock","src":"3362:42:10","statements":[{"nativeSrc":"3376:18:10","nodeType":"YulAssignment","src":"3376:18:10","value":{"name":"position","nativeSrc":"3386:8:10","nodeType":"YulIdentifier","src":"3386:8:10"},"variableNames":[{"name":"s.slot","nativeSrc":"3376:6:10","nodeType":"YulIdentifier","src":"3376:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":517,"isOffset":false,"isSlot":false,"src":"3386:8:10","valueSize":1},{"declaration":514,"isOffset":false,"isSlot":true,"src":"3376:6:10","suffix":"slot","valueSize":1}],"id":520,"nodeType":"InlineAssembly","src":"3353:51:10"}]},"id":522,"implemented":true,"kind":"function","modifiers":[],"name":"layout","nameLocation":"3245:6:10","nodeType":"FunctionDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"3251:2:10"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"s","nameLocation":"3292:1:10","nodeType":"VariableDeclaration","scope":522,"src":"3277:16:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout"},"typeName":{"id":513,"nodeType":"UserDefinedTypeName","pathNode":{"id":512,"name":"Layout","nameLocations":["3277:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":354,"src":"3277:6:10"},"referencedDeclaration":354,"src":"3277:6:10","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout"}},"visibility":"internal"}],"src":"3276:18:10"},"scope":523,"src":"3236:174:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":524,"src":"270:3142:10","usedErrors":[],"usedEvents":[]}],"src":"32:3381:10"},"id":10},"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol","exportedSymbols":{"InitializationPhaseAlreadyReached":[329],"ProxyInitialization":[570],"StorageSlot":[711]},"id":571,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":525,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:11"},{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol","file":"./../errors/ProxyInitializationErrors.sol","id":527,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":571,"sourceUnit":330,"src":"58:92:11","symbolAliases":[{"foreign":{"id":526,"name":"InitializationPhaseAlreadyReached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"66:33:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"@openzeppelin/contracts/utils/StorageSlot.sol","id":529,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":571,"sourceUnit":712,"src":"151:74:11","symbolAliases":[{"foreign":{"id":528,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"159:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ProxyInitialization","contractDependencies":[],"contractKind":"library","documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"227:92:11","text":"@notice Multiple calls protection for storage-modifying proxy initialization functions."},"fullyImplemented":true,"id":570,"linearizedBaseContracts":[570],"name":"ProxyInitialization","nameLocation":"327:19:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":568,"nodeType":"Block","src":"735:294:11","statements":[{"assignments":[542],"declarations":[{"constant":false,"id":542,"mutability":"mutable","name":"currentVersion","nameLocation":"777:14:11","nodeType":"VariableDeclaration","scope":568,"src":"745:46:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$616_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":541,"nodeType":"UserDefinedTypeName","pathNode":{"id":540,"name":"StorageSlot.Uint256Slot","nameLocations":["745:11:11","757:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"745:23:11"},"referencedDeclaration":616,"src":"745:23:11","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$616_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"id":547,"initialValue":{"arguments":[{"id":545,"name":"storageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"821:11:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":543,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"794:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$711_$","typeString":"type(library StorageSlot)"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"806:14:11","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":666,"src":"794:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$616_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"794:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$616_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"745:88:11"},{"assignments":[549],"declarations":[{"constant":false,"id":549,"mutability":"mutable","name":"currentPhase","nameLocation":"851:12:11","nodeType":"VariableDeclaration","scope":568,"src":"843:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"843:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":552,"initialValue":{"expression":{"id":550,"name":"currentVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"866:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$616_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"881:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":615,"src":"866:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"843:43:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":553,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"900:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":554,"name":"phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"916:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"900:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"896:88:11","trueBody":{"errorCall":{"arguments":[{"id":557,"name":"currentPhase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"964:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":558,"name":"phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"978:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":556,"name":"InitializationPhaseAlreadyReached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"930:33:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"930:54:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":560,"nodeType":"RevertStatement","src":"923:61:11"}},{"expression":{"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":562,"name":"currentVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"994:14:11","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$616_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1009:5:11","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":615,"src":"994:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":565,"name":"phase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":535,"src":"1017:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"994:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":567,"nodeType":"ExpressionStatement","src":"994:28:11"}]},"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"353:314:11","text":"@notice Sets the initialization phase during a storage-modifying proxy initialization function.\n @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\n @param storageSlot the storage slot where `phase` is stored.\n @param phase the initialization phase."},"id":569,"implemented":true,"kind":"function","modifiers":[],"name":"setPhase","nameLocation":"681:8:11","nodeType":"FunctionDefinition","parameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"storageSlot","nameLocation":"698:11:11","nodeType":"VariableDeclaration","scope":569,"src":"690:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"690:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"phase","nameLocation":"719:5:11","nodeType":"VariableDeclaration","scope":569,"src":"711:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"689:36:11"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"735:0:11"},"scope":570,"src":"672:357:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":571,"src":"319:712:11","usedErrors":[],"usedEvents":[]}],"src":"32:1000:11"},"id":11},"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol":{"ast":{"absolutePath":"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol","exportedSymbols":{"IERC721Mintable":[601]},"id":602,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":572,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Mintable","contractDependencies":[],"contractKind":"interface","documentation":{"id":573,"nodeType":"StructuredDocumentation","src":"58:201:12","text":"@title ERC721 Non-Fungible Token Standard, optional extension: Mintable.\n @dev See https://eips.ethereum.org/EIPS/eip-721\n @dev Note: The ERC-165 identifier for this interface is 0x8e773e13."},"fullyImplemented":false,"id":601,"linearizedBaseContracts":[601],"name":"IERC721Mintable","nameLocation":"269:15:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":574,"nodeType":"StructuredDocumentation","src":"291:311:12","text":"@notice Unsafely mints a token.\n @dev Reverts if `to` is the zero address.\n @dev Reverts if `tokenId` already exists.\n @dev Emits an {IERC721-Transfer} event from the zero address.\n @param to Address of the new token owner.\n @param tokenId Identifier of the token to mint."},"functionSelector":"40c10f19","id":581,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"616:4:12","nodeType":"FunctionDefinition","parameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"to","nameLocation":"629:2:12","nodeType":"VariableDeclaration","scope":581,"src":"621:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":575,"name":"address","nodeType":"ElementaryTypeName","src":"621:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"tokenId","nameLocation":"641:7:12","nodeType":"VariableDeclaration","scope":581,"src":"633:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"633:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"620:29:12"},"returnParameters":{"id":580,"nodeType":"ParameterList","parameters":[],"src":"658:0:12"},"scope":601,"src":"607:52:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":582,"nodeType":"StructuredDocumentation","src":"665:504:12","text":"@notice Safely mints a token.\n @dev Reverts if `to` is the zero address.\n @dev Reverts if `tokenId` already exists.\n @dev Reverts if `to` is a contract and the call to {IERC721Receiver-onERC721Received} fails, reverts or is rejected.\n @dev Emits an {IERC721-Transfer} event from the zero address.\n @param to Address of the new token owner.\n @param tokenId Identifier of the token to mint.\n @param data Optional data to pass along to the receiver call."},"functionSelector":"8832e6e3","id":591,"implemented":false,"kind":"function","modifiers":[],"name":"safeMint","nameLocation":"1183:8:12","nodeType":"FunctionDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"to","nameLocation":"1200:2:12","nodeType":"VariableDeclaration","scope":591,"src":"1192:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"1192:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":586,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:12","nodeType":"VariableDeclaration","scope":591,"src":"1204:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":588,"mutability":"mutable","name":"data","nameLocation":"1236:4:12","nodeType":"VariableDeclaration","scope":591,"src":"1221:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":587,"name":"bytes","nodeType":"ElementaryTypeName","src":"1221:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1191:50:12"},"returnParameters":{"id":590,"nodeType":"ParameterList","parameters":[],"src":"1250:0:12"},"scope":601,"src":"1174:77:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":592,"nodeType":"StructuredDocumentation","src":"1257:356:12","text":"@notice Unsafely mints a batch of tokens.\n @dev Reverts if `to` is the zero address.\n @dev Reverts if one of `tokenIds` already exists.\n @dev Emits an {IERC721-Transfer} event from the zero address for each of `tokenIds`.\n @param to Address of the new tokens owner.\n @param tokenIds Identifiers of the tokens to mint."},"functionSelector":"4684d7e9","id":600,"implemented":false,"kind":"function","modifiers":[],"name":"batchMint","nameLocation":"1627:9:12","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":594,"mutability":"mutable","name":"to","nameLocation":"1645:2:12","nodeType":"VariableDeclaration","scope":600,"src":"1637:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"1637:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"tokenIds","nameLocation":"1668:8:12","nodeType":"VariableDeclaration","scope":600,"src":"1649:27:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"1649:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":596,"nodeType":"ArrayTypeName","src":"1649:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1636:41:12"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"1686:0:12"},"scope":601,"src":"1618:69:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":602,"src":"259:1430:12","usedErrors":[],"usedEvents":[]}],"src":"32:1658:12"},"id":12},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[711]},"id":712,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":603,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"218:1201:13","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":711,"linearizedBaseContracts":[711],"name":"StorageSlot","nameLocation":"1428:11:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":607,"members":[{"constant":false,"id":606,"mutability":"mutable","name":"value","nameLocation":"1483:5:13","nodeType":"VariableDeclaration","scope":607,"src":"1475:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:13","nodeType":"StructDefinition","scope":711,"src":"1446:49:13","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":610,"members":[{"constant":false,"id":609,"mutability":"mutable","name":"value","nameLocation":"1535:5:13","nodeType":"VariableDeclaration","scope":610,"src":"1530:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":608,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:13","nodeType":"StructDefinition","scope":711,"src":"1501:46:13","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":613,"members":[{"constant":false,"id":612,"mutability":"mutable","name":"value","nameLocation":"1590:5:13","nodeType":"VariableDeclaration","scope":613,"src":"1582:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:13","nodeType":"StructDefinition","scope":711,"src":"1553:49:13","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":616,"members":[{"constant":false,"id":615,"mutability":"mutable","name":"value","nameLocation":"1645:5:13","nodeType":"VariableDeclaration","scope":616,"src":"1637:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:13","nodeType":"StructDefinition","scope":711,"src":"1608:49:13","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":619,"members":[{"constant":false,"id":618,"mutability":"mutable","name":"value","nameLocation":"1698:5:13","nodeType":"VariableDeclaration","scope":619,"src":"1691:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":617,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:13","nodeType":"StructDefinition","scope":711,"src":"1663:47:13","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":622,"members":[{"constant":false,"id":621,"mutability":"mutable","name":"value","nameLocation":"1749:5:13","nodeType":"VariableDeclaration","scope":622,"src":"1743:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":620,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:13","nodeType":"StructDefinition","scope":711,"src":"1716:45:13","visibility":"public"},{"body":{"id":632,"nodeType":"Block","src":"1943:106:13","statements":[{"AST":{"nativeSrc":"2005:38:13","nodeType":"YulBlock","src":"2005:38:13","statements":[{"nativeSrc":"2019:14:13","nodeType":"YulAssignment","src":"2019:14:13","value":{"name":"slot","nativeSrc":"2029:4:13","nodeType":"YulIdentifier","src":"2029:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2019:6:13","nodeType":"YulIdentifier","src":"2019:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":629,"isOffset":false,"isSlot":true,"src":"2019:6:13","suffix":"slot","valueSize":1},{"declaration":625,"isOffset":false,"isSlot":false,"src":"2029:4:13","valueSize":1}],"id":631,"nodeType":"InlineAssembly","src":"1996:47:13"}]},"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"1767:87:13","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":633,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:13","nodeType":"FunctionDefinition","parameters":{"id":626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"slot","nameLocation":"1891:4:13","nodeType":"VariableDeclaration","scope":633,"src":"1883:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":624,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:13"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"r","nameLocation":"1940:1:13","nodeType":"VariableDeclaration","scope":633,"src":"1920:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$607_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":628,"nodeType":"UserDefinedTypeName","pathNode":{"id":627,"name":"AddressSlot","nameLocations":["1920:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":607,"src":"1920:11:13"},"referencedDeclaration":607,"src":"1920:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$607_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:13"},"scope":711,"src":"1859:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":643,"nodeType":"Block","src":"2231:106:13","statements":[{"AST":{"nativeSrc":"2293:38:13","nodeType":"YulBlock","src":"2293:38:13","statements":[{"nativeSrc":"2307:14:13","nodeType":"YulAssignment","src":"2307:14:13","value":{"name":"slot","nativeSrc":"2317:4:13","nodeType":"YulIdentifier","src":"2317:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2307:6:13","nodeType":"YulIdentifier","src":"2307:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":640,"isOffset":false,"isSlot":true,"src":"2307:6:13","suffix":"slot","valueSize":1},{"declaration":636,"isOffset":false,"isSlot":false,"src":"2317:4:13","valueSize":1}],"id":642,"nodeType":"InlineAssembly","src":"2284:47:13"}]},"documentation":{"id":634,"nodeType":"StructuredDocumentation","src":"2055:87:13","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:13","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"slot","nameLocation":"2179:4:13","nodeType":"VariableDeclaration","scope":644,"src":"2171:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:13"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":640,"mutability":"mutable","name":"r","nameLocation":"2228:1:13","nodeType":"VariableDeclaration","scope":644,"src":"2208:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$610_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":639,"nodeType":"UserDefinedTypeName","pathNode":{"id":638,"name":"BooleanSlot","nameLocations":["2208:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":610,"src":"2208:11:13"},"referencedDeclaration":610,"src":"2208:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$610_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:13"},"scope":711,"src":"2147:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":654,"nodeType":"Block","src":"2519:106:13","statements":[{"AST":{"nativeSrc":"2581:38:13","nodeType":"YulBlock","src":"2581:38:13","statements":[{"nativeSrc":"2595:14:13","nodeType":"YulAssignment","src":"2595:14:13","value":{"name":"slot","nativeSrc":"2605:4:13","nodeType":"YulIdentifier","src":"2605:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2595:6:13","nodeType":"YulIdentifier","src":"2595:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":651,"isOffset":false,"isSlot":true,"src":"2595:6:13","suffix":"slot","valueSize":1},{"declaration":647,"isOffset":false,"isSlot":false,"src":"2605:4:13","valueSize":1}],"id":653,"nodeType":"InlineAssembly","src":"2572:47:13"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"2343:87:13","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":655,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:13","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"slot","nameLocation":"2467:4:13","nodeType":"VariableDeclaration","scope":655,"src":"2459:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:13"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"r","nameLocation":"2516:1:13","nodeType":"VariableDeclaration","scope":655,"src":"2496:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$613_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":650,"nodeType":"UserDefinedTypeName","pathNode":{"id":649,"name":"Bytes32Slot","nameLocations":["2496:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":613,"src":"2496:11:13"},"referencedDeclaration":613,"src":"2496:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$613_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:13"},"scope":711,"src":"2435:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":665,"nodeType":"Block","src":"2807:106:13","statements":[{"AST":{"nativeSrc":"2869:38:13","nodeType":"YulBlock","src":"2869:38:13","statements":[{"nativeSrc":"2883:14:13","nodeType":"YulAssignment","src":"2883:14:13","value":{"name":"slot","nativeSrc":"2893:4:13","nodeType":"YulIdentifier","src":"2893:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2883:6:13","nodeType":"YulIdentifier","src":"2883:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":662,"isOffset":false,"isSlot":true,"src":"2883:6:13","suffix":"slot","valueSize":1},{"declaration":658,"isOffset":false,"isSlot":false,"src":"2893:4:13","valueSize":1}],"id":664,"nodeType":"InlineAssembly","src":"2860:47:13"}]},"documentation":{"id":656,"nodeType":"StructuredDocumentation","src":"2631:87:13","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":666,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:13","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"slot","nameLocation":"2755:4:13","nodeType":"VariableDeclaration","scope":666,"src":"2747:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:13"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"r","nameLocation":"2804:1:13","nodeType":"VariableDeclaration","scope":666,"src":"2784:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$616_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":661,"nodeType":"UserDefinedTypeName","pathNode":{"id":660,"name":"Uint256Slot","nameLocations":["2784:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"2784:11:13"},"referencedDeclaration":616,"src":"2784:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$616_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:13"},"scope":711,"src":"2723:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":676,"nodeType":"Block","src":"3092:106:13","statements":[{"AST":{"nativeSrc":"3154:38:13","nodeType":"YulBlock","src":"3154:38:13","statements":[{"nativeSrc":"3168:14:13","nodeType":"YulAssignment","src":"3168:14:13","value":{"name":"slot","nativeSrc":"3178:4:13","nodeType":"YulIdentifier","src":"3178:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3168:6:13","nodeType":"YulIdentifier","src":"3168:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":673,"isOffset":false,"isSlot":true,"src":"3168:6:13","suffix":"slot","valueSize":1},{"declaration":669,"isOffset":false,"isSlot":false,"src":"3178:4:13","valueSize":1}],"id":675,"nodeType":"InlineAssembly","src":"3145:47:13"}]},"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"2919:86:13","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":677,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:13","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"slot","nameLocation":"3041:4:13","nodeType":"VariableDeclaration","scope":677,"src":"3033:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:13"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"r","nameLocation":"3089:1:13","nodeType":"VariableDeclaration","scope":677,"src":"3070:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$619_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":672,"nodeType":"UserDefinedTypeName","pathNode":{"id":671,"name":"StringSlot","nameLocations":["3070:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":619,"src":"3070:10:13"},"referencedDeclaration":619,"src":"3070:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$619_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:13"},"scope":711,"src":"3010:188:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":687,"nodeType":"Block","src":"3400:112:13","statements":[{"AST":{"nativeSrc":"3462:44:13","nodeType":"YulBlock","src":"3462:44:13","statements":[{"nativeSrc":"3476:20:13","nodeType":"YulAssignment","src":"3476:20:13","value":{"name":"store.slot","nativeSrc":"3486:10:13","nodeType":"YulIdentifier","src":"3486:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3476:6:13","nodeType":"YulIdentifier","src":"3476:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":684,"isOffset":false,"isSlot":true,"src":"3476:6:13","suffix":"slot","valueSize":1},{"declaration":680,"isOffset":false,"isSlot":true,"src":"3486:10:13","suffix":"slot","valueSize":1}],"id":686,"nodeType":"InlineAssembly","src":"3453:53:13"}]},"documentation":{"id":678,"nodeType":"StructuredDocumentation","src":"3204:101:13","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":688,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:13","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"store","nameLocation":"3348:5:13","nodeType":"VariableDeclaration","scope":688,"src":"3333:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":679,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:13"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"r","nameLocation":"3397:1:13","nodeType":"VariableDeclaration","scope":688,"src":"3378:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$619_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":683,"nodeType":"UserDefinedTypeName","pathNode":{"id":682,"name":"StringSlot","nameLocations":["3378:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":619,"src":"3378:10:13"},"referencedDeclaration":619,"src":"3378:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$619_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:13"},"scope":711,"src":"3310:202:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":698,"nodeType":"Block","src":"3688:106:13","statements":[{"AST":{"nativeSrc":"3750:38:13","nodeType":"YulBlock","src":"3750:38:13","statements":[{"nativeSrc":"3764:14:13","nodeType":"YulAssignment","src":"3764:14:13","value":{"name":"slot","nativeSrc":"3774:4:13","nodeType":"YulIdentifier","src":"3774:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3764:6:13","nodeType":"YulIdentifier","src":"3764:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":695,"isOffset":false,"isSlot":true,"src":"3764:6:13","suffix":"slot","valueSize":1},{"declaration":691,"isOffset":false,"isSlot":false,"src":"3774:4:13","valueSize":1}],"id":697,"nodeType":"InlineAssembly","src":"3741:47:13"}]},"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"3518:85:13","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":699,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:13","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"slot","nameLocation":"3638:4:13","nodeType":"VariableDeclaration","scope":699,"src":"3630:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":690,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:13"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"r","nameLocation":"3685:1:13","nodeType":"VariableDeclaration","scope":699,"src":"3667:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$622_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":694,"nodeType":"UserDefinedTypeName","pathNode":{"id":693,"name":"BytesSlot","nameLocations":["3667:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":622,"src":"3667:9:13"},"referencedDeclaration":622,"src":"3667:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$622_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:13"},"scope":711,"src":"3608:186:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":709,"nodeType":"Block","src":"3991:112:13","statements":[{"AST":{"nativeSrc":"4053:44:13","nodeType":"YulBlock","src":"4053:44:13","statements":[{"nativeSrc":"4067:20:13","nodeType":"YulAssignment","src":"4067:20:13","value":{"name":"store.slot","nativeSrc":"4077:10:13","nodeType":"YulIdentifier","src":"4077:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"4067:6:13","nodeType":"YulIdentifier","src":"4067:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":706,"isOffset":false,"isSlot":true,"src":"4067:6:13","suffix":"slot","valueSize":1},{"declaration":702,"isOffset":false,"isSlot":true,"src":"4077:10:13","suffix":"slot","valueSize":1}],"id":708,"nodeType":"InlineAssembly","src":"4044:53:13"}]},"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"3800:99:13","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":710,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:13","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"store","nameLocation":"3940:5:13","nodeType":"VariableDeclaration","scope":710,"src":"3926:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":701,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:13"},"returnParameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"r","nameLocation":"3988:1:13","nodeType":"VariableDeclaration","scope":710,"src":"3970:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$622_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":705,"nodeType":"UserDefinedTypeName","pathNode":{"id":704,"name":"BytesSlot","nameLocations":["3970:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":622,"src":"3970:9:13"},"referencedDeclaration":622,"src":"3970:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$622_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:13"},"scope":711,"src":"3904:199:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":712,"src":"1420:2685:13","usedErrors":[],"usedEvents":[]}],"src":"193:3913:13"},"id":13},"contracts/lib/minter/ERC721/ERC721Minter.sol":{"ast":{"absolutePath":"contracts/lib/minter/ERC721/ERC721Minter.sol","exportedSymbols":{"ERC721Minter":[750],"ERC721MinterBase":[805],"ERC721MinterStorage":[1156],"IERC721Mintable":[601],"InterfaceDetection":[29]},"id":751,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":713,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:14"},{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/InterfaceDetection.sol","file":"@animoca/ethereum-contracts/contracts/introspection/InterfaceDetection.sol","id":715,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":751,"sourceUnit":30,"src":"58:110:14","symbolAliases":[{"foreign":{"id":714,"name":"InterfaceDetection","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"66:18:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol","file":"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol","id":717,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":751,"sourceUnit":602,"src":"169:114:14","symbolAliases":[{"foreign":{"id":716,"name":"IERC721Mintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"177:15:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/lib/minter/ERC721/base/ERC721MinterBase.sol","file":"./base/ERC721MinterBase.sol","id":719,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":751,"sourceUnit":806,"src":"284:61:14","symbolAliases":[{"foreign":{"id":718,"name":"ERC721MinterBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"292:16:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/lib/minter/ERC721/libraries/ERC721MinterStorage.sol","file":"./libraries/ERC721MinterStorage.sol","id":721,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":751,"sourceUnit":1157,"src":"346:72:14","symbolAliases":[{"foreign":{"id":720,"name":"ERC721MinterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"354:19:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":723,"name":"ERC721MinterBase","nameLocations":["509:16:14"],"nodeType":"IdentifierPath","referencedDeclaration":805,"src":"509:16:14"},"id":724,"nodeType":"InheritanceSpecifier","src":"509:16:14"},{"baseName":{"id":725,"name":"InterfaceDetection","nameLocations":["527:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":29,"src":"527:18:14"},"id":726,"nodeType":"InheritanceSpecifier","src":"527:18:14"}],"canonicalName":"ERC721Minter","contractDependencies":[],"contractKind":"contract","documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"420:55:14","text":"@title ERC721 Minter contract (immutable version)."},"fullyImplemented":true,"id":750,"linearizedBaseContracts":[750,29,46,805,909],"name":"ERC721Minter","nameLocation":"493:12:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":730,"libraryName":{"id":727,"name":"ERC721MinterStorage","nameLocations":["558:19:14"],"nodeType":"IdentifierPath","referencedDeclaration":1156,"src":"558:19:14"},"nodeType":"UsingForDirective","src":"552:57:14","typeName":{"id":729,"nodeType":"UserDefinedTypeName","pathNode":{"id":728,"name":"ERC721MinterStorage.Layout","nameLocations":["582:19:14","602:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"582:26:14"},"referencedDeclaration":942,"src":"582:26:14","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"}}},{"body":{"id":748,"nodeType":"Block","src":"1186:80:14","statements":[{"expression":{"arguments":[{"id":744,"name":"maxTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"1241:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":745,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"1253:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":739,"name":"ERC721MinterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"1196:19:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721MinterStorage_$1156_$","typeString":"type(library ERC721MinterStorage)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1216:6:14","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":1155,"src":"1196:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$942_storage_ptr_$","typeString":"function () pure returns (struct ERC721MinterStorage.Layout storage pointer)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1196:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout storage pointer"}},"id":743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1225:15:14","memberName":"constructorInit","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"1196:44:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Layout_$942_storage_ptr_$_t_uint256_$_t_contract$_IERC721Mintable_$601_$returns$__$attached_to$_t_struct$_Layout_$942_storage_ptr_$","typeString":"function (struct ERC721MinterStorage.Layout storage pointer,uint256,contract IERC721Mintable)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1196:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":747,"nodeType":"ExpressionStatement","src":"1196:63:14"}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"615:511:14","text":"@notice Initializes the storage with the maximum token ID and the ERC721 token contract.\n @dev Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.\n @dev Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.\n @dev Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.\n @param maxTokenId The maximum token ID that can be minted.\n @param token The ERC721 token contract."},"id":749,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"maxTokenId","nameLocation":"1151:10:14","nodeType":"VariableDeclaration","scope":749,"src":"1143:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1143:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"token","nameLocation":"1179:5:14","nodeType":"VariableDeclaration","scope":749,"src":"1163:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"},"typeName":{"id":735,"nodeType":"UserDefinedTypeName","pathNode":{"id":734,"name":"IERC721Mintable","nameLocations":["1163:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":601,"src":"1163:15:14"},"referencedDeclaration":601,"src":"1163:15:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}},"visibility":"internal"}],"src":"1142:43:14"},"returnParameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"1186:0:14"},"scope":750,"src":"1131:135:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":751,"src":"475:793:14","usedErrors":[34,810,813,818,821],"usedEvents":[]}],"src":"32:1237:14"},"id":14},"contracts/lib/minter/ERC721/base/ERC721MinterBase.sol":{"ast":{"absolutePath":"contracts/lib/minter/ERC721/base/ERC721MinterBase.sol","exportedSymbols":{"ERC721MinterBase":[805],"ERC721MinterStorage":[1156],"IERC721Minter":[909]},"id":806,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":752,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:15"},{"absolutePath":"contracts/lib/minter/ERC721/interfaces/IERC721Minter.sol","file":"../interfaces/IERC721Minter.sol","id":754,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":806,"sourceUnit":910,"src":"58:62:15","symbolAliases":[{"foreign":{"id":753,"name":"IERC721Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"66:13:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/lib/minter/ERC721/libraries/ERC721MinterStorage.sol","file":"../libraries/ERC721MinterStorage.sol","id":756,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":806,"sourceUnit":1157,"src":"121:73:15","symbolAliases":[{"foreign":{"id":755,"name":"ERC721MinterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"129:19:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":758,"name":"IERC721Minter","nameLocations":["484:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":909,"src":"484:13:15"},"id":759,"nodeType":"InheritanceSpecifier","src":"484:13:15"}],"canonicalName":"ERC721MinterBase","contractDependencies":[],"contractKind":"contract","documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"196:250:15","text":"@title ERC721 Minter contract for minting ERC721 tokens with a maximum token ID limit.\n @dev This contract is to be used via inheritance in a proxied implementation.\n @dev Note: This contract requires ERC165 (Interface Detection Standard)."},"fullyImplemented":true,"id":805,"linearizedBaseContracts":[805,909],"name":"ERC721MinterBase","nameLocation":"464:16:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":763,"libraryName":{"id":760,"name":"ERC721MinterStorage","nameLocations":["510:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":1156,"src":"510:19:15"},"nodeType":"UsingForDirective","src":"504:57:15","typeName":{"id":762,"nodeType":"UserDefinedTypeName","pathNode":{"id":761,"name":"ERC721MinterStorage.Layout","nameLocations":["534:19:15","554:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"534:26:15"},"referencedDeclaration":942,"src":"534:26:15","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"}}},{"baseFunctions":[908],"body":{"id":777,"nodeType":"Block","src":"642:54:15","statements":[{"expression":{"arguments":[{"id":774,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"686:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":769,"name":"ERC721MinterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"652:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721MinterStorage_$1156_$","typeString":"type(library ERC721MinterStorage)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"672:6:15","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":1155,"src":"652:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$942_storage_ptr_$","typeString":"function () pure returns (struct ERC721MinterStorage.Layout storage pointer)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"652:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout storage pointer"}},"id":773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"681:4:15","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":1117,"src":"652:33:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Layout_$942_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$942_storage_ptr_$","typeString":"function (struct ERC721MinterStorage.Layout storage pointer,address)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"652:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":776,"nodeType":"ExpressionStatement","src":"652:37:15"}]},"documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"567:29:15","text":"@inheritdoc IERC721Minter"},"functionSelector":"6a627842","id":778,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"610:4:15","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"to","nameLocation":"623:2:15","nodeType":"VariableDeclaration","scope":778,"src":"615:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"615:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"614:12:15"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"642:0:15"},"scope":805,"src":"601:95:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[896],"body":{"id":790,"nodeType":"Block","src":"800:64:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":784,"name":"ERC721MinterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"817:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721MinterStorage_$1156_$","typeString":"type(library ERC721MinterStorage)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"837:6:15","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":1155,"src":"817:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$942_storage_ptr_$","typeString":"function () pure returns (struct ERC721MinterStorage.Layout storage pointer)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout storage pointer"}},"id":787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"846:9:15","memberName":"currentId","nodeType":"MemberAccess","referencedDeclaration":1130,"src":"817:38:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$942_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Layout_$942_storage_ptr_$","typeString":"function (struct ERC721MinterStorage.Layout storage pointer) view returns (uint256)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":783,"id":789,"nodeType":"Return","src":"810:47:15"}]},"documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"702:29:15","text":"@inheritdoc IERC721Minter"},"functionSelector":"009a9b7b","id":791,"implemented":true,"kind":"function","modifiers":[],"name":"currentTokenId","nameLocation":"745:14:15","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[],"src":"759:2:15"},"returnParameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"tokenId","nameLocation":"791:7:15","nodeType":"VariableDeclaration","scope":791,"src":"783:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"783:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"782:17:15"},"scope":805,"src":"736:128:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[902],"body":{"id":803,"nodeType":"Block","src":"964:60:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":797,"name":"ERC721MinterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"981:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721MinterStorage_$1156_$","typeString":"type(library ERC721MinterStorage)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1001:6:15","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":1155,"src":"981:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$942_storage_ptr_$","typeString":"function () pure returns (struct ERC721MinterStorage.Layout storage pointer)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"981:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout storage pointer"}},"id":800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1010:5:15","memberName":"maxId","nodeType":"MemberAccess","referencedDeclaration":1143,"src":"981:34:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$942_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Layout_$942_storage_ptr_$","typeString":"function (struct ERC721MinterStorage.Layout storage pointer) view returns (uint256)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"981:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":796,"id":802,"nodeType":"Return","src":"974:43:15"}]},"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"870:29:15","text":"@inheritdoc IERC721Minter"},"functionSelector":"91ba317a","id":804,"implemented":true,"kind":"function","modifiers":[],"name":"maxTokenId","nameLocation":"913:10:15","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[],"src":"923:2:15"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"tokenId","nameLocation":"955:7:15","nodeType":"VariableDeclaration","scope":804,"src":"947:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"947:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"946:17:15"},"scope":805,"src":"904:120:15","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":806,"src":"446:580:15","usedErrors":[821],"usedEvents":[]}],"src":"32:995:15"},"id":15},"contracts/lib/minter/ERC721/errors/ERC721MinterErrors.sol":{"ast":{"absolutePath":"contracts/lib/minter/ERC721/errors/ERC721MinterErrors.sol","exportedSymbols":{"ERC721MinterMaxTokenIdExceeded":[821],"ERC721MinterUnsupportedContractType":[818],"ERC721MinterZeroMaxTokenId":[810],"ERC721MinterZeroTokenAddress":[813]},"id":822,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":807,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:16"},{"documentation":{"id":808,"nodeType":"StructuredDocumentation","src":"58:46:16","text":"@notice Thrown when the token ID is zero."},"errorSelector":"c14cb6f5","id":810,"name":"ERC721MinterZeroMaxTokenId","nameLocation":"110:26:16","nodeType":"ErrorDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[],"src":"136:2:16"},"src":"104:35:16"},{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"141:51:16","text":"@notice Thrown when the token address is zero."},"errorSelector":"9e7ef708","id":813,"name":"ERC721MinterZeroTokenAddress","nameLocation":"198:28:16","nodeType":"ErrorDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[],"src":"226:2:16"},"src":"192:37:16"},{"documentation":{"id":814,"nodeType":"StructuredDocumentation","src":"231:76:16","text":"@notice Thrown when the token contract interface id does not supported."},"errorSelector":"dbca5b38","id":818,"name":"ERC721MinterUnsupportedContractType","nameLocation":"313:35:16","nodeType":"ErrorDefinition","parameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"tokenContract","nameLocation":"357:13:16","nodeType":"VariableDeclaration","scope":818,"src":"349:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:23:16"},"src":"307:65:16"},{"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"374:58:16","text":"@notice Thrown when the maximum token ID is exceeded."},"errorSelector":"4594a700","id":821,"name":"ERC721MinterMaxTokenIdExceeded","nameLocation":"438:30:16","nodeType":"ErrorDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[],"src":"468:2:16"},"src":"432:39:16"}],"src":"32:440:16"},"id":16},"contracts/lib/minter/ERC721/facets/ERC721MinterFacet.sol":{"ast":{"absolutePath":"contracts/lib/minter/ERC721/facets/ERC721MinterFacet.sol","exportedSymbols":{"ERC721MinterBase":[805],"ERC721MinterFacet":[887],"ERC721MinterStorage":[1156],"ForwarderRegistryContextBase":[267],"IERC721Mintable":[601],"IForwarderRegistry":[281],"ProxyAdminStorage":[523]},"id":888,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":823,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"@animoca/ethereum-contracts/contracts/metatx/base/ForwarderRegistryContextBase.sol","file":"@animoca/ethereum-contracts/contracts/metatx/base/ForwarderRegistryContextBase.sol","id":825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":888,"sourceUnit":268,"src":"58:128:17","symbolAliases":[{"foreign":{"id":824,"name":"ForwarderRegistryContextBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"66:28:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/metatx/interfaces/IForwarderRegistry.sol","file":"@animoca/ethereum-contracts/contracts/metatx/interfaces/IForwarderRegistry.sol","id":827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":888,"sourceUnit":282,"src":"187:114:17","symbolAliases":[{"foreign":{"id":826,"name":"IForwarderRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"195:18:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyAdminStorage.sol","file":"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyAdminStorage.sol","id":829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":888,"sourceUnit":524,"src":"302:110:17","symbolAliases":[{"foreign":{"id":828,"name":"ProxyAdminStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"310:17:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol","file":"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol","id":831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":888,"sourceUnit":602,"src":"413:114:17","symbolAliases":[{"foreign":{"id":830,"name":"IERC721Mintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"421:15:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/lib/minter/ERC721/base/ERC721MinterBase.sol","file":"../base/ERC721MinterBase.sol","id":833,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":888,"sourceUnit":806,"src":"528:62:17","symbolAliases":[{"foreign":{"id":832,"name":"ERC721MinterBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"536:16:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/lib/minter/ERC721/libraries/ERC721MinterStorage.sol","file":"../libraries/ERC721MinterStorage.sol","id":835,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":888,"sourceUnit":1157,"src":"591:73:17","symbolAliases":[{"foreign":{"id":834,"name":"ERC721MinterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"599:19:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":837,"name":"ERC721MinterBase","nameLocations":["952:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":805,"src":"952:16:17"},"id":838,"nodeType":"InheritanceSpecifier","src":"952:16:17"},{"baseName":{"id":839,"name":"ForwarderRegistryContextBase","nameLocations":["970:28:17"],"nodeType":"IdentifierPath","referencedDeclaration":267,"src":"970:28:17"},"id":840,"nodeType":"InheritanceSpecifier","src":"970:28:17"}],"canonicalName":"ERC721MinterFacet","contractDependencies":[],"contractKind":"contract","documentation":{"id":836,"nodeType":"StructuredDocumentation","src":"666:256:17","text":"@title ERC721 Minter (facet version).\n @dev This contract is to be used as a diamond facet (see ERC2535 Diamond Standard https://eips.ethereum.org/EIPS/eip-2535).\n @dev Note: This facet depends on {ProxyAdminFacet} and {InterfaceDetectionFacet}."},"fullyImplemented":true,"id":887,"linearizedBaseContracts":[887,267,805,909],"name":"ERC721MinterFacet","nameLocation":"931:17:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":844,"libraryName":{"id":841,"name":"ERC721MinterStorage","nameLocations":["1011:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":1156,"src":"1011:19:17"},"nodeType":"UsingForDirective","src":"1005:57:17","typeName":{"id":843,"nodeType":"UserDefinedTypeName","pathNode":{"id":842,"name":"ERC721MinterStorage.Layout","nameLocations":["1035:19:17","1055:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"1035:26:17"},"referencedDeclaration":942,"src":"1035:26:17","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"}}},{"global":false,"id":848,"libraryName":{"id":845,"name":"ProxyAdminStorage","nameLocations":["1073:17:17"],"nodeType":"IdentifierPath","referencedDeclaration":523,"src":"1073:17:17"},"nodeType":"UsingForDirective","src":"1067:53:17","typeName":{"id":847,"nodeType":"UserDefinedTypeName","pathNode":{"id":846,"name":"ProxyAdminStorage.Layout","nameLocations":["1095:17:17","1113:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":354,"src":"1095:24:17"},"referencedDeclaration":354,"src":"1095:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout"}}},{"body":{"id":857,"nodeType":"Block","src":"1224:2:17","statements":[]},"id":858,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":854,"name":"forwarderRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"1205:17:17","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"}}],"id":855,"kind":"baseConstructorSpecifier","modifierName":{"id":853,"name":"ForwarderRegistryContextBase","nameLocations":["1176:28:17"],"nodeType":"IdentifierPath","referencedDeclaration":267,"src":"1176:28:17"},"nodeType":"ModifierInvocation","src":"1176:47:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"forwarderRegistry","nameLocation":"1157:17:17","nodeType":"VariableDeclaration","scope":858,"src":"1138:36:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"},"typeName":{"id":850,"nodeType":"UserDefinedTypeName","pathNode":{"id":849,"name":"IForwarderRegistry","nameLocations":["1138:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":281,"src":"1138:18:17"},"referencedDeclaration":281,"src":"1138:18:17","typeDescriptions":{"typeIdentifier":"t_contract$_IForwarderRegistry_$281","typeString":"contract IForwarderRegistry"}},"visibility":"internal"}],"src":"1137:38:17"},"returnParameters":{"id":856,"nodeType":"ParameterList","parameters":[],"src":"1224:0:17"},"scope":887,"src":"1126:100:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":885,"nodeType":"Block","src":"2175:144:17","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":872,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"2232:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2232:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":867,"name":"ProxyAdminStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"2185:17:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ProxyAdminStorage_$523_$","typeString":"type(library ProxyAdminStorage)"}},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2203:6:17","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":522,"src":"2185:24:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$354_storage_ptr_$","typeString":"function () pure returns (struct ProxyAdminStorage.Layout storage pointer)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2185:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$354_storage_ptr","typeString":"struct ProxyAdminStorage.Layout storage pointer"}},"id":871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2212:19:17","memberName":"enforceIsProxyAdmin","nodeType":"MemberAccess","referencedDeclaration":510,"src":"2185:46:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Layout_$354_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Layout_$354_storage_ptr_$","typeString":"function (struct ProxyAdminStorage.Layout storage pointer,address) view"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2185:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":875,"nodeType":"ExpressionStatement","src":"2185:60:17"},{"expression":{"arguments":[{"id":881,"name":"maxTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"2294:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":882,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"2306:5:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":876,"name":"ERC721MinterStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"2255:19:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721MinterStorage_$1156_$","typeString":"type(library ERC721MinterStorage)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2275:6:17","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":1155,"src":"2255:26:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$942_storage_ptr_$","typeString":"function () pure returns (struct ERC721MinterStorage.Layout storage pointer)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2255:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout storage pointer"}},"id":880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2284:9:17","memberName":"proxyInit","nodeType":"MemberAccess","referencedDeclaration":1076,"src":"2255:38:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Layout_$942_storage_ptr_$_t_uint256_$_t_contract$_IERC721Mintable_$601_$returns$__$attached_to$_t_struct$_Layout_$942_storage_ptr_$","typeString":"function (struct ERC721MinterStorage.Layout storage pointer,uint256,contract IERC721Mintable)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2255:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"ExpressionStatement","src":"2255:57:17"}]},"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"1232:853:17","text":"@notice Initializes the storage with the maximum token ID and the ERC721 token contract.\n @notice Sets the proxy initialization phase to `1`.\n @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\n @dev Reverts with {NotProxyAdmin} if the sender is not the proxy admin.\n @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\n @dev Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.\n @dev Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.\n @dev Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.\n @param maxTokenId The maximum token ID that can be minted.\n @param token The ERC721 token contract."},"functionSelector":"52fca9c0","id":886,"implemented":true,"kind":"function","modifiers":[],"name":"initERC721MinterStorage","nameLocation":"2099:23:17","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"maxTokenId","nameLocation":"2131:10:17","nodeType":"VariableDeclaration","scope":886,"src":"2123:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2123:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"token","nameLocation":"2159:5:17","nodeType":"VariableDeclaration","scope":886,"src":"2143:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"},"typeName":{"id":863,"nodeType":"UserDefinedTypeName","pathNode":{"id":862,"name":"IERC721Mintable","nameLocations":["2143:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":601,"src":"2143:15:17"},"referencedDeclaration":601,"src":"2143:15:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}},"visibility":"internal"}],"src":"2122:43:17"},"returnParameters":{"id":866,"nodeType":"ParameterList","parameters":[],"src":"2175:0:17"},"scope":887,"src":"2090:229:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":888,"src":"922:1399:17","usedErrors":[34,320,329,810,813,818,821],"usedEvents":[]}],"src":"32:2290:17"},"id":17},"contracts/lib/minter/ERC721/interfaces/IERC721Minter.sol":{"ast":{"absolutePath":"contracts/lib/minter/ERC721/interfaces/IERC721Minter.sol","exportedSymbols":{"IERC721Minter":[909]},"id":910,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":889,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Minter","contractDependencies":[],"contractKind":"interface","documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"58:134:18","text":"@title ERC721 Minter interface for minting ERC721 tokens.\n @dev Note: The ERC-165 identifier for this interface is 0x4f859546."},"fullyImplemented":false,"id":909,"linearizedBaseContracts":[909],"name":"IERC721Minter","nameLocation":"202:13:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"222:87:18","text":"@notice Returns the current token ID.\n @return tokenId The current token ID."},"functionSelector":"009a9b7b","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"currentTokenId","nameLocation":"323:14:18","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"337:2:18"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"tokenId","nameLocation":"371:7:18","nodeType":"VariableDeclaration","scope":896,"src":"363:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"363:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"362:17:18"},"scope":909,"src":"314:66:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"386:87:18","text":"@notice Returns the maximum token ID.\n @return tokenId The maximum token ID."},"functionSelector":"91ba317a","id":902,"implemented":false,"kind":"function","modifiers":[],"name":"maxTokenId","nameLocation":"487:10:18","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"497:2:18"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"tokenId","nameLocation":"531:7:18","nodeType":"VariableDeclaration","scope":902,"src":"523:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"523:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"522:17:18"},"scope":909,"src":"478:62:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":903,"nodeType":"StructuredDocumentation","src":"546:103:18","text":"@notice Mints a token to the specified address.\n @param to The address to receive the token."},"functionSelector":"6a627842","id":908,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"663:4:18","nodeType":"FunctionDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"to","nameLocation":"676:2:18","nodeType":"VariableDeclaration","scope":908,"src":"668:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"667:12:18"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"688:0:18"},"scope":909,"src":"654:35:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":910,"src":"192:499:18","usedErrors":[],"usedEvents":[]}],"src":"32:660:18"},"id":18},"contracts/lib/minter/ERC721/libraries/ERC721MinterStorage.sol":{"ast":{"absolutePath":"contracts/lib/minter/ERC721/libraries/ERC721MinterStorage.sol","exportedSymbols":{"ERC721MinterMaxTokenIdExceeded":[821],"ERC721MinterStorage":[1156],"ERC721MinterUnsupportedContractType":[818],"ERC721MinterZeroMaxTokenId":[810],"ERC721MinterZeroTokenAddress":[813],"IERC165":[46],"IERC721Mintable":[601],"IERC721Minter":[909],"InterfaceDetectionStorage":[147],"ProxyInitialization":[570]},"id":1157,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":911,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:19"},{"absolutePath":"contracts/lib/minter/ERC721/errors/ERC721MinterErrors.sol","file":"../errors/ERC721MinterErrors.sol","id":916,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1157,"sourceUnit":822,"src":"103:175:19","symbolAliases":[{"foreign":{"id":912,"name":"ERC721MinterZeroMaxTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"111:26:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":913,"name":"ERC721MinterUnsupportedContractType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"139:35:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":914,"name":"ERC721MinterMaxTokenIdExceeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"176:30:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":915,"name":"ERC721MinterZeroTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"208:28:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol","file":"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol","id":918,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1157,"sourceUnit":148,"src":"279:134:19","symbolAliases":[{"foreign":{"id":917,"name":"InterfaceDetectionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"287:25:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol","file":"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol","id":920,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1157,"sourceUnit":47,"src":"414:99:19","symbolAliases":[{"foreign":{"id":919,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"422:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol","file":"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol","id":922,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1157,"sourceUnit":602,"src":"514:114:19","symbolAliases":[{"foreign":{"id":921,"name":"IERC721Mintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"522:15:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol","file":"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol","id":924,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1157,"sourceUnit":571,"src":"629:114:19","symbolAliases":[{"foreign":{"id":923,"name":"ProxyInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"637:19:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/lib/minter/ERC721/interfaces/IERC721Minter.sol","file":"../interfaces/IERC721Minter.sol","id":926,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1157,"sourceUnit":910,"src":"744:62:19","symbolAliases":[{"foreign":{"id":925,"name":"IERC721Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"752:13:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721MinterStorage","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1156,"linearizedBaseContracts":[1156],"name":"ERC721MinterStorage","nameLocation":"816:19:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":930,"libraryName":{"id":927,"name":"ERC721MinterStorage","nameLocations":["848:19:19"],"nodeType":"IdentifierPath","referencedDeclaration":1156,"src":"848:19:19"},"nodeType":"UsingForDirective","src":"842:57:19","typeName":{"id":929,"nodeType":"UserDefinedTypeName","pathNode":{"id":928,"name":"ERC721MinterStorage.Layout","nameLocations":["872:19:19","892:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"872:26:19"},"referencedDeclaration":942,"src":"872:26:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"}}},{"global":false,"id":934,"libraryName":{"id":931,"name":"InterfaceDetectionStorage","nameLocations":["910:25:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"910:25:19"},"nodeType":"UsingForDirective","src":"904:69:19","typeName":{"id":933,"nodeType":"UserDefinedTypeName","pathNode":{"id":932,"name":"InterfaceDetectionStorage.Layout","nameLocations":["940:25:19","966:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"940:32:19"},"referencedDeclaration":57,"src":"940:32:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$57_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout"}}},{"canonicalName":"ERC721MinterStorage.Layout","id":942,"members":[{"constant":false,"id":936,"mutability":"mutable","name":"currentTokenId","nameLocation":"1011:14:19","nodeType":"VariableDeclaration","scope":942,"src":"1003:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1003:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"maxTokenId","nameLocation":"1043:10:19","nodeType":"VariableDeclaration","scope":942,"src":"1035:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"1035:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"token","nameLocation":"1079:5:19","nodeType":"VariableDeclaration","scope":942,"src":"1063:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"},"typeName":{"id":940,"nodeType":"UserDefinedTypeName","pathNode":{"id":939,"name":"IERC721Mintable","nameLocations":["1063:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":601,"src":"1063:15:19"},"referencedDeclaration":601,"src":"1063:15:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}},"visibility":"internal"}],"name":"Layout","nameLocation":"986:6:19","nodeType":"StructDefinition","scope":1156,"src":"979:112:19","visibility":"public"},{"constant":true,"id":955,"mutability":"constant","name":"LAYOUT_STORAGE_SLOT","nameLocation":"1123:19:19","nodeType":"VariableDeclaration","scope":1156,"src":"1097:125:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1097:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"hexValue":"79757261323130302e746f6b656e2e4552433732312e4552433732314d696e7465722e73746f72616765","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1171:44:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_693bcdae20ebbf8c20ad73778252483eb64f50287e6e826c8678109643b49176","typeString":"literal_string \"yura2100.token.ERC721.ERC721Minter.storage\""},"value":"yura2100.token.ERC721.ERC721Minter.storage"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_693bcdae20ebbf8c20ad73778252483eb64f50287e6e826c8678109643b49176","typeString":"literal_string \"yura2100.token.ERC721.ERC721Minter.storage\""}],"id":948,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1161:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1161:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1153:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1153:7:19","typeDescriptions":{}}},"id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1153:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1220:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1153:68:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1145:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":944,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1145:7:19","typeDescriptions":{}}},"id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1145:77:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":true,"id":968,"mutability":"constant","name":"PROXY_INIT_PHASE_SLOT","nameLocation":"1254:21:19","nodeType":"VariableDeclaration","scope":1156,"src":"1228:125:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1228:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"hexValue":"79757261323130302e746f6b656e2e4552433732312e4552433732314d696e7465722e7068617365","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1304:42:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_45d439c902da5ba33f98e10a3a9e80a454ed74a1b14c49a6e476fcd1db4ddd6c","typeString":"literal_string \"yura2100.token.ERC721.ERC721Minter.phase\""},"value":"yura2100.token.ERC721.ERC721Minter.phase"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_45d439c902da5ba33f98e10a3a9e80a454ed74a1b14c49a6e476fcd1db4ddd6c","typeString":"literal_string \"yura2100.token.ERC721.ERC721Minter.phase\""}],"id":961,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1294:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1294:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1286:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:19","typeDescriptions":{}}},"id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1286:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1351:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1286:66:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1278:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":957,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1278:7:19","typeDescriptions":{}}},"id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1278:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"body":{"id":1048,"nodeType":"Block","src":"2167:543:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":980,"name":"maxTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"2181:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2195:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2181:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":987,"nodeType":"IfStatement","src":"2177:81:19","trueBody":{"id":986,"nodeType":"Block","src":"2198:60:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":983,"name":"ERC721MinterZeroMaxTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"2219:26:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2219:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":985,"nodeType":"RevertStatement","src":"2212:35:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":990,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"2279:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}],"id":989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2271:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"2271:7:19","typeDescriptions":{}}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2271:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2289:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"2289:7:19","typeDescriptions":{}}},"id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2289:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2271:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1001,"nodeType":"IfStatement","src":"2267:96:19","trueBody":{"id":1000,"nodeType":"Block","src":"2301:62:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":997,"name":"ERC721MinterZeroTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"2322:28:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2322:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":999,"nodeType":"RevertStatement","src":"2315:37:19"}]}},{"condition":{"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2377:77:19","subExpression":{"arguments":[{"expression":{"arguments":[{"id":1010,"name":"IERC721Mintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"2425:15:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Mintable_$601_$","typeString":"type(contract IERC721Mintable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Mintable_$601_$","typeString":"type(contract IERC721Mintable)"}],"id":1009,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2420:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Mintable_$601","typeString":"type(contract IERC721Mintable)"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2442:11:19","memberName":"interfaceId","nodeType":"MemberAccess","src":"2420:33:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"arguments":[{"arguments":[{"id":1005,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"2394:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}],"id":1004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2386:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"2386:7:19","typeDescriptions":{}}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2386:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1002,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"2378:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$46_$","typeString":"type(contract IERC165)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2378:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC165_$46","typeString":"contract IERC165"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2402:17:19","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":45,"src":"2378:41:19","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view external returns (bool)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2378:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1023,"nodeType":"IfStatement","src":"2373:166:19","trueBody":{"id":1022,"nodeType":"Block","src":"2456:83:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1018,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"2521:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}],"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2513:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"2513:7:19","typeDescriptions":{}}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2513:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1015,"name":"ERC721MinterUnsupportedContractType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"2477:35:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"RevertStatement","src":"2470:58:19"}]}},{"expression":{"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1024,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"2548:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout storage pointer"}},"id":1026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2550:10:19","memberName":"maxTokenId","nodeType":"MemberAccess","referencedDeclaration":938,"src":"2548:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1027,"name":"maxTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"2563:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2548:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1029,"nodeType":"ExpressionStatement","src":"2548:25:19"},{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1030,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":972,"src":"2583:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout storage pointer"}},"id":1032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2585:5:19","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":941,"src":"2583:7:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1033,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"2593:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}},"src":"2583:15:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}},"id":1035,"nodeType":"ExpressionStatement","src":"2583:15:19"},{"expression":{"arguments":[{"expression":{"arguments":[{"id":1042,"name":"IERC721Minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"2670:13:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Minter_$909_$","typeString":"type(contract IERC721Minter)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Minter_$909_$","typeString":"type(contract IERC721Minter)"}],"id":1041,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2665:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2665:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Minter_$909","typeString":"type(contract IERC721Minter)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2685:11:19","memberName":"interfaceId","nodeType":"MemberAccess","src":"2665:31:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"hexValue":"74727565","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2698:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1036,"name":"InterfaceDetectionStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"2608:25:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_InterfaceDetectionStorage_$147_$","typeString":"type(library InterfaceDetectionStorage)"}},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2634:6:19","memberName":"layout","nodeType":"MemberAccess","referencedDeclaration":146,"src":"2608:32:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Layout_$57_storage_ptr_$","typeString":"function () pure returns (struct InterfaceDetectionStorage.Layout storage pointer)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2608:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$57_storage_ptr","typeString":"struct InterfaceDetectionStorage.Layout storage pointer"}},"id":1040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2643:21:19","memberName":"setSupportedInterface","nodeType":"MemberAccess","referencedDeclaration":100,"src":"2608:56:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Layout_$57_storage_ptr_$_t_bytes4_$_t_bool_$returns$__$attached_to$_t_struct$_Layout_$57_storage_ptr_$","typeString":"function (struct InterfaceDetectionStorage.Layout storage pointer,bytes4,bool)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2608:95:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1047,"nodeType":"ExpressionStatement","src":"2608:95:19"}]},"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"1360:707:19","text":"@notice Initializes the storage with the maximum token ID and the ERC721 token contract.\n @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\n @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\n @dev Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.\n @dev Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.\n @dev Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.\n @param maxTokenId The maximum token ID that can be minted.\n @param token The ERC721 token contract."},"id":1049,"implemented":true,"kind":"function","modifiers":[],"name":"constructorInit","nameLocation":"2081:15:19","nodeType":"FunctionDefinition","parameters":{"id":978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":972,"mutability":"mutable","name":"s","nameLocation":"2112:1:19","nodeType":"VariableDeclaration","scope":1049,"src":"2097:16:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"},"typeName":{"id":971,"nodeType":"UserDefinedTypeName","pathNode":{"id":970,"name":"Layout","nameLocations":["2097:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"2097:6:19"},"referencedDeclaration":942,"src":"2097:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"maxTokenId","nameLocation":"2123:10:19","nodeType":"VariableDeclaration","scope":1049,"src":"2115:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"2115:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":977,"mutability":"mutable","name":"token","nameLocation":"2151:5:19","nodeType":"VariableDeclaration","scope":1049,"src":"2135:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"},"typeName":{"id":976,"nodeType":"UserDefinedTypeName","pathNode":{"id":975,"name":"IERC721Mintable","nameLocations":["2135:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":601,"src":"2135:15:19"},"referencedDeclaration":601,"src":"2135:15:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}},"visibility":"internal"}],"src":"2096:61:19"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[],"src":"2167:0:19"},"scope":1156,"src":"2072:638:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1075,"nodeType":"Block","src":"3378:117:19","statements":[{"expression":{"arguments":[{"id":1064,"name":"PROXY_INIT_PHASE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"3417:21:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"31","id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3440:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":1061,"name":"ProxyInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"3388:19:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ProxyInitialization_$570_$","typeString":"type(library ProxyInitialization)"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3408:8:19","memberName":"setPhase","nodeType":"MemberAccess","referencedDeclaration":569,"src":"3388:28:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$__$","typeString":"function (bytes32,uint256)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:54:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1067,"nodeType":"ExpressionStatement","src":"3388:54:19"},{"expression":{"arguments":[{"id":1071,"name":"maxTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"3470:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1072,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"3482:5:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}],"expression":{"id":1068,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"3452:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout storage pointer"}},"id":1070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3454:15:19","memberName":"constructorInit","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"3452:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Layout_$942_storage_ptr_$_t_uint256_$_t_contract$_IERC721Mintable_$601_$returns$__$attached_to$_t_struct$_Layout_$942_storage_ptr_$","typeString":"function (struct ERC721MinterStorage.Layout storage pointer,uint256,contract IERC721Mintable)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3452:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1074,"nodeType":"ExpressionStatement","src":"3452:36:19"}]},"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"2716:568:19","text":"@notice Initializes the storage with the maximum token ID and the ERC721 token contract.\n @notice Sets the proxy initialization phase to `1`.\n @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\n @dev Note: This function should be called ONLY in the init function of a proxied contract.\n @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\n @param maxTokenId The maximum token ID that can be minted.\n @param token The ERC721 token contract."},"id":1076,"implemented":true,"kind":"function","modifiers":[],"name":"proxyInit","nameLocation":"3298:9:19","nodeType":"FunctionDefinition","parameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"s","nameLocation":"3323:1:19","nodeType":"VariableDeclaration","scope":1076,"src":"3308:16:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"},"typeName":{"id":1052,"nodeType":"UserDefinedTypeName","pathNode":{"id":1051,"name":"Layout","nameLocations":["3308:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"3308:6:19"},"referencedDeclaration":942,"src":"3308:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"maxTokenId","nameLocation":"3334:10:19","nodeType":"VariableDeclaration","scope":1076,"src":"3326:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"token","nameLocation":"3362:5:19","nodeType":"VariableDeclaration","scope":1076,"src":"3346:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"},"typeName":{"id":1057,"nodeType":"UserDefinedTypeName","pathNode":{"id":1056,"name":"IERC721Mintable","nameLocations":["3346:15:19"],"nodeType":"IdentifierPath","referencedDeclaration":601,"src":"3346:15:19"},"referencedDeclaration":601,"src":"3346:15:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}},"visibility":"internal"}],"src":"3307:61:19"},"returnParameters":{"id":1060,"nodeType":"ParameterList","parameters":[],"src":"3378:0:19"},"scope":1156,"src":"3289:206:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1116,"nodeType":"Block","src":"3788:223:19","statements":[{"assignments":[1086],"declarations":[{"constant":false,"id":1086,"mutability":"mutable","name":"nextId","nameLocation":"3806:6:19","nodeType":"VariableDeclaration","scope":1116,"src":"3798:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"3798:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1091,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1087,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"3815:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout storage pointer"}},"id":1088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3817:14:19","memberName":"currentTokenId","nodeType":"MemberAccess","referencedDeclaration":936,"src":"3815:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3834:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3815:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3798:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1092,"name":"nextId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"3849:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1093,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"3858:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout storage pointer"}},"id":1094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3860:10:19","memberName":"maxTokenId","nodeType":"MemberAccess","referencedDeclaration":938,"src":"3858:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3849:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1100,"nodeType":"IfStatement","src":"3845:91:19","trueBody":{"id":1099,"nodeType":"Block","src":"3872:64:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1096,"name":"ERC721MinterMaxTokenIdExceeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"3893:30:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3893:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1098,"nodeType":"RevertStatement","src":"3886:39:19"}]}},{"expression":{"arguments":[{"id":1106,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"3958:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1107,"name":"nextId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"3962:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1101,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"3945:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout storage pointer"}},"id":1104,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3947:5:19","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":941,"src":"3945:7:19","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Mintable_$601","typeString":"contract IERC721Mintable"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3953:4:19","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":581,"src":"3945:12:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3945:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1109,"nodeType":"ExpressionStatement","src":"3945:24:19"},{"expression":{"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1110,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"3979:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout storage pointer"}},"id":1112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3981:14:19","memberName":"currentTokenId","nodeType":"MemberAccess","referencedDeclaration":936,"src":"3979:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1113,"name":"nextId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"3998:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3979:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1115,"nodeType":"ExpressionStatement","src":"3979:25:19"}]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"3501:229:19","text":"@notice Mints a token to the specified address.\n @dev Reverts with {ERC721MinterMaxTokenIdExceeded} if the current token ID exceeds the maximum token ID.\n @param to The address to which the token will be minted."},"id":1117,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"3744:4:19","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"s","nameLocation":"3764:1:19","nodeType":"VariableDeclaration","scope":1117,"src":"3749:16:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"},"typeName":{"id":1079,"nodeType":"UserDefinedTypeName","pathNode":{"id":1078,"name":"Layout","nameLocations":["3749:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"3749:6:19"},"referencedDeclaration":942,"src":"3749:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"to","nameLocation":"3775:2:19","nodeType":"VariableDeclaration","scope":1117,"src":"3767:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"3767:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3748:30:19"},"returnParameters":{"id":1084,"nodeType":"ParameterList","parameters":[],"src":"3788:0:19"},"scope":1156,"src":"3735:276:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1129,"nodeType":"Block","src":"4186:40:19","statements":[{"expression":{"expression":{"id":1126,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"4203:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout storage pointer"}},"id":1127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4205:14:19","memberName":"currentTokenId","nodeType":"MemberAccess","referencedDeclaration":936,"src":"4203:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1125,"id":1128,"nodeType":"Return","src":"4196:23:19"}]},"documentation":{"id":1118,"nodeType":"StructuredDocumentation","src":"4017:87:19","text":"@notice Returns the current token ID.\n @return tokenId The current token ID."},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"currentId","nameLocation":"4118:9:19","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"s","nameLocation":"4143:1:19","nodeType":"VariableDeclaration","scope":1130,"src":"4128:16:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"},"typeName":{"id":1120,"nodeType":"UserDefinedTypeName","pathNode":{"id":1119,"name":"Layout","nameLocations":["4128:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"4128:6:19"},"referencedDeclaration":942,"src":"4128:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"}},"visibility":"internal"}],"src":"4127:18:19"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"tokenId","nameLocation":"4177:7:19","nodeType":"VariableDeclaration","scope":1130,"src":"4169:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"4169:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4168:17:19"},"scope":1156,"src":"4109:117:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1142,"nodeType":"Block","src":"4397:36:19","statements":[{"expression":{"expression":{"id":1139,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"4414:1:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout storage pointer"}},"id":1140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4416:10:19","memberName":"maxTokenId","nodeType":"MemberAccess","referencedDeclaration":938,"src":"4414:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1138,"id":1141,"nodeType":"Return","src":"4407:19:19"}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"4232:87:19","text":"@notice Returns the maximum token ID.\n @return tokenId The maximum token ID."},"id":1143,"implemented":true,"kind":"function","modifiers":[],"name":"maxId","nameLocation":"4333:5:19","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"s","nameLocation":"4354:1:19","nodeType":"VariableDeclaration","scope":1143,"src":"4339:16:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"},"typeName":{"id":1133,"nodeType":"UserDefinedTypeName","pathNode":{"id":1132,"name":"Layout","nameLocations":["4339:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"4339:6:19"},"referencedDeclaration":942,"src":"4339:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"}},"visibility":"internal"}],"src":"4338:18:19"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"tokenId","nameLocation":"4388:7:19","nodeType":"VariableDeclaration","scope":1143,"src":"4380:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"4380:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4379:17:19"},"scope":1156,"src":"4324:109:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1154,"nodeType":"Block","src":"4498:115:19","statements":[{"assignments":[1150],"declarations":[{"constant":false,"id":1150,"mutability":"mutable","name":"position","nameLocation":"4516:8:19","nodeType":"VariableDeclaration","scope":1154,"src":"4508:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4508:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1152,"initialValue":{"id":1151,"name":"LAYOUT_STORAGE_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"4527:19:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4508:38:19"},{"AST":{"nativeSrc":"4565:42:19","nodeType":"YulBlock","src":"4565:42:19","statements":[{"nativeSrc":"4579:18:19","nodeType":"YulAssignment","src":"4579:18:19","value":{"name":"position","nativeSrc":"4589:8:19","nodeType":"YulIdentifier","src":"4589:8:19"},"variableNames":[{"name":"s.slot","nativeSrc":"4579:6:19","nodeType":"YulIdentifier","src":"4579:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1150,"isOffset":false,"isSlot":false,"src":"4589:8:19","valueSize":1},{"declaration":1147,"isOffset":false,"isSlot":true,"src":"4579:6:19","suffix":"slot","valueSize":1}],"id":1153,"nodeType":"InlineAssembly","src":"4556:51:19"}]},"id":1155,"implemented":true,"kind":"function","modifiers":[],"name":"layout","nameLocation":"4448:6:19","nodeType":"FunctionDefinition","parameters":{"id":1144,"nodeType":"ParameterList","parameters":[],"src":"4454:2:19"},"returnParameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"s","nameLocation":"4495:1:19","nodeType":"VariableDeclaration","scope":1155,"src":"4480:16:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"},"typeName":{"id":1146,"nodeType":"UserDefinedTypeName","pathNode":{"id":1145,"name":"Layout","nameLocations":["4480:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"4480:6:19"},"referencedDeclaration":942,"src":"4480:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Layout_$942_storage_ptr","typeString":"struct ERC721MinterStorage.Layout"}},"visibility":"internal"}],"src":"4479:18:19"},"scope":1156,"src":"4439:174:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1157,"src":"808:3807:19","usedErrors":[],"usedEvents":[]}],"src":"32:4584:19"},"id":19}},"contracts":{"@animoca/ethereum-contracts/contracts/introspection/InterfaceDetection.sol":{"InterfaceDetection":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This contract is to be used via inheritance in an immutable (non-proxied) or proxied implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Note: This function call must use less than 30 000 gas.","params":{"interfaceId":"the interface identifier to test."},"returns":{"_0":"True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported."}}},"title":"ERC165 Interface Detection Standard (immutable or proxiable version).","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is to be used via inheritance in an immutable (non-proxied) or proxied implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Note: This function call must use less than 30 000 gas.\",\"params\":{\"interfaceId\":\"the interface identifier to test.\"},\"returns\":{\"_0\":\"True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\"}}},\"title\":\"ERC165 Interface Detection Standard (immutable or proxiable version).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Returns whether this contract implements a given interface.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/introspection/InterfaceDetection.sol\":\"InterfaceDetection\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/introspection/InterfaceDetection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {IERC165} from \\\"./interfaces/IERC165.sol\\\";\\nimport {InterfaceDetectionStorage} from \\\"./libraries/InterfaceDetectionStorage.sol\\\";\\n\\n/// @title ERC165 Interface Detection Standard (immutable or proxiable version).\\n/// @dev This contract is to be used via inheritance in an immutable (non-proxied) or proxied implementation.\\nabstract contract InterfaceDetection is IERC165 {\\n    using InterfaceDetectionStorage for InterfaceDetectionStorage.Layout;\\n\\n    /// @inheritdoc IERC165\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool) {\\n        return InterfaceDetectionStorage.layout().supportsInterface(interfaceId);\\n    }\\n}\\n\",\"keccak256\":\"0xbe995fd26786ed4617ae37f07c1f7961ac3591e2f4e89b9fa353ad60fb11ab15\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Thrown when setting the illegal interfaceId 0xffffffff.\\nerror IllegalInterfaceId();\\n\",\"keccak256\":\"0xfc30a58bec3f7c1dd1c1b4604d668082c7c01696bb9cbf181a7812e9d0d318d5\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC165 Interface Detection Standard.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\\ninterface IERC165 {\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId the interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\\n}\\n\",\"keccak256\":\"0x569c0a59305d5e0eb9ea3ef6b9376f4771895caca1db902ca6397fa085ab82b4\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {IllegalInterfaceId} from \\\"./../errors/InterfaceDetectionErrors.sol\\\";\\nimport {IERC165} from \\\"./../interfaces/IERC165.sol\\\";\\n\\nlibrary InterfaceDetectionStorage {\\n    struct Layout {\\n        mapping(bytes4 => bool) supportedInterfaces;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.introspection.InterfaceDetection.storage\\\")) - 1);\\n\\n    bytes4 internal constant ILLEGAL_INTERFACE_ID = 0xffffffff;\\n\\n    /// @notice Sets or unsets an ERC165 interface.\\n    /// @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\\n    /// @param interfaceId the interface identifier.\\n    /// @param supported True to set the interface, false to unset it.\\n    function setSupportedInterface(Layout storage s, bytes4 interfaceId, bool supported) internal {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) revert IllegalInterfaceId();\\n        s.supportedInterfaces[interfaceId] = supported;\\n    }\\n\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId The interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(Layout storage s, bytes4 interfaceId) internal view returns (bool supported) {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) {\\n            return false;\\n        }\\n        if (interfaceId == type(IERC165).interfaceId) {\\n            return true;\\n        }\\n        return s.supportedInterfaces[interfaceId];\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x87944ecb71a120095067c66e9ab703ea25460e83f1f39ba0f9bd49a3481ad4dc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"supportsInterface(bytes4)":{"notice":"Returns whether this contract implements a given interface."}},"version":1}}},"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"supported","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-165.Note: The ERC-165 identifier for this interface is 0x01ffc9a7.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Note: This function call must use less than 30 000 gas.","params":{"interfaceId":"the interface identifier to test."},"returns":{"supported":"True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported."}}},"title":"ERC165 Interface Detection Standard.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-165.Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Note: This function call must use less than 30 000 gas.\",\"params\":{\"interfaceId\":\"the interface identifier to test.\"},\"returns\":{\"supported\":\"True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\"}}},\"title\":\"ERC165 Interface Detection Standard.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Returns whether this contract implements a given interface.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC165 Interface Detection Standard.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\\ninterface IERC165 {\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId the interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\\n}\\n\",\"keccak256\":\"0x569c0a59305d5e0eb9ea3ef6b9376f4771895caca1db902ca6397fa085ab82b4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"supportsInterface(bytes4)":{"notice":"Returns whether this contract implements a given interface."}},"version":1}}},"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol":{"InterfaceDetectionStorage":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c0c0dfd480c4e6d4103f13d28779e78659bb5d70eb8a6a76c59ac57d1f539eb964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xC0 0xDF 0xD4 DUP1 0xC4 0xE6 0xD4 LT EXTCODEHASH SGT 0xD2 DUP8 PUSH26 0xE78659BB5D70EB8A6A76C59AC57D1F539EB964736F6C63430008 XOR STOP CALLER ","sourceMap":"189:1692:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;189:1692:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c0c0dfd480c4e6d4103f13d28779e78659bb5d70eb8a6a76c59ac57d1f539eb964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xC0 0xDF 0xD4 DUP1 0xC4 0xE6 0xD4 LT EXTCODEHASH SGT 0xD2 DUP8 PUSH26 0xE78659BB5D70EB8A6A76C59AC57D1F539EB964736F6C63430008 XOR STOP CALLER ","sourceMap":"189:1692:3:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"layout()":"infinite","setSupportedInterface(struct InterfaceDetectionStorage.Layout storage pointer,bytes4,bool)":"infinite","supportsInterface(struct InterfaceDetectionStorage.Layout storage pointer,bytes4)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\":\"InterfaceDetectionStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Thrown when setting the illegal interfaceId 0xffffffff.\\nerror IllegalInterfaceId();\\n\",\"keccak256\":\"0xfc30a58bec3f7c1dd1c1b4604d668082c7c01696bb9cbf181a7812e9d0d318d5\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC165 Interface Detection Standard.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\\ninterface IERC165 {\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId the interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\\n}\\n\",\"keccak256\":\"0x569c0a59305d5e0eb9ea3ef6b9376f4771895caca1db902ca6397fa085ab82b4\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {IllegalInterfaceId} from \\\"./../errors/InterfaceDetectionErrors.sol\\\";\\nimport {IERC165} from \\\"./../interfaces/IERC165.sol\\\";\\n\\nlibrary InterfaceDetectionStorage {\\n    struct Layout {\\n        mapping(bytes4 => bool) supportedInterfaces;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.introspection.InterfaceDetection.storage\\\")) - 1);\\n\\n    bytes4 internal constant ILLEGAL_INTERFACE_ID = 0xffffffff;\\n\\n    /// @notice Sets or unsets an ERC165 interface.\\n    /// @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\\n    /// @param interfaceId the interface identifier.\\n    /// @param supported True to set the interface, false to unset it.\\n    function setSupportedInterface(Layout storage s, bytes4 interfaceId, bool supported) internal {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) revert IllegalInterfaceId();\\n        s.supportedInterfaces[interfaceId] = supported;\\n    }\\n\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId The interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(Layout storage s, bytes4 interfaceId) internal view returns (bool supported) {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) {\\n            return false;\\n        }\\n        if (interfaceId == type(IERC165).interfaceId) {\\n            return true;\\n        }\\n        return s.supportedInterfaces[interfaceId];\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x87944ecb71a120095067c66e9ab703ea25460e83f1f39ba0f9bd49a3481ad4dc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@animoca/ethereum-contracts/contracts/metatx/base/ForwarderRegistryContextBase.sol":{"ForwarderRegistryContextBase":{"abi":[],"devdoc":{"details":"This contract is to be used via inheritance in a proxied implementation.Derived from https://github.com/wighawag/universal-forwarder (MIT licence)","kind":"dev","methods":{},"title":"Meta-Transactions Forwarder Registry Context (proxiable version).","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This contract is to be used via inheritance in a proxied implementation.Derived from https://github.com/wighawag/universal-forwarder (MIT licence)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Meta-Transactions Forwarder Registry Context (proxiable version).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/metatx/base/ForwarderRegistryContextBase.sol\":\"ForwarderRegistryContextBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/metatx/base/ForwarderRegistryContextBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {IForwarderRegistry} from \\\"./../interfaces/IForwarderRegistry.sol\\\";\\nimport {ERC2771Calldata} from \\\"./../libraries/ERC2771Calldata.sol\\\";\\n\\n/// @title Meta-Transactions Forwarder Registry Context (proxiable version).\\n/// @dev This contract is to be used via inheritance in a proxied implementation.\\n/// @dev Derived from https://github.com/wighawag/universal-forwarder (MIT licence)\\nabstract contract ForwarderRegistryContextBase {\\n    IForwarderRegistry internal immutable _FORWARDER_REGISTRY;\\n\\n    constructor(IForwarderRegistry forwarderRegistry) {\\n        _FORWARDER_REGISTRY = forwarderRegistry;\\n    }\\n\\n    /// @notice Returns the message sender depending on the ForwarderRegistry-based meta-transaction context.\\n    function _msgSender() internal view virtual returns (address) {\\n        // Optimised path in case of an EOA-initiated direct tx to the contract or a call from a contract not complying with EIP-2771\\n        // solhint-disable-next-line avoid-tx-origin\\n        if (msg.sender == tx.origin || msg.data.length < 24) {\\n            return msg.sender;\\n        }\\n\\n        address sender = ERC2771Calldata.msgSender();\\n\\n        // Return the EIP-2771 calldata-appended sender address if the message was forwarded by the ForwarderRegistry or an approved forwarder\\n        if (msg.sender == address(_FORWARDER_REGISTRY) || _FORWARDER_REGISTRY.isApprovedForwarder(sender, msg.sender)) {\\n            return sender;\\n        }\\n\\n        return msg.sender;\\n    }\\n\\n    /// @notice Returns the message data depending on the ForwarderRegistry-based meta-transaction context.\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        // Optimised path in case of an EOA-initiated direct tx to the contract or a call from a contract not complying with EIP-2771\\n        // solhint-disable-next-line avoid-tx-origin\\n        if (msg.sender == tx.origin || msg.data.length < 24) {\\n            return msg.data;\\n        }\\n\\n        // Return the EIP-2771 calldata (minus the appended sender) if the message was forwarded by the ForwarderRegistry or an approved forwarder\\n        if (msg.sender == address(_FORWARDER_REGISTRY) || _FORWARDER_REGISTRY.isApprovedForwarder(ERC2771Calldata.msgSender(), msg.sender)) {\\n            return ERC2771Calldata.msgData();\\n        }\\n\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xd327167f42244c5d99d0ffbcefcb5883ea15cbfb0aa268d6f265bc6aadc19297\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/metatx/interfaces/IForwarderRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title Universal Meta-Transactions Forwarder Registry.\\n/// @dev Derived from https://github.com/wighawag/universal-forwarder (MIT licence)\\ninterface IForwarderRegistry {\\n    /// @notice Checks whether an account is as an approved meta-transaction forwarder for a sender account.\\n    /// @param sender The sender account.\\n    /// @param forwarder The forwarder account.\\n    /// @return isApproved True if `forwarder` is an approved meta-transaction forwarder for `sender`, false otherwise.\\n    function isApprovedForwarder(address sender, address forwarder) external view returns (bool isApproved);\\n}\\n\",\"keccak256\":\"0x9b4a8105af5713c207f7c2c94b24d88f33e5dcf49d03f356cc7c794ae67147d4\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/metatx/libraries/ERC2771Calldata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @dev Derived from https://github.com/OpenZeppelin/openzeppelin-contracts (MIT licence)\\n/// @dev See https://eips.ethereum.org/EIPS/eip-2771\\nlibrary ERC2771Calldata {\\n    /// @notice Returns the sender address appended at the end of the calldata, as specified in EIP-2771.\\n    function msgSender() internal pure returns (address sender) {\\n        assembly {\\n            sender := shr(96, calldataload(sub(calldatasize(), 20)))\\n        }\\n    }\\n\\n    /// @notice Returns the calldata while omitting the appended sender address, as specified in EIP-2771.\\n    function msgData() internal pure returns (bytes calldata data) {\\n        unchecked {\\n            return msg.data[:msg.data.length - 20];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb9d3b8a6aa97234fac6f955d447e77e066549743cab021db787e442227abd3bf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@animoca/ethereum-contracts/contracts/metatx/interfaces/IForwarderRegistry.sol":{"IForwarderRegistry":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"forwarder","type":"address"}],"name":"isApprovedForwarder","outputs":[{"internalType":"bool","name":"isApproved","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Derived from https://github.com/wighawag/universal-forwarder (MIT licence)","kind":"dev","methods":{"isApprovedForwarder(address,address)":{"params":{"forwarder":"The forwarder account.","sender":"The sender account."},"returns":{"isApproved":"True if `forwarder` is an approved meta-transaction forwarder for `sender`, false otherwise."}}},"title":"Universal Meta-Transactions Forwarder Registry.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"isApprovedForwarder(address,address)":"8929a8ca"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isApprovedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Derived from https://github.com/wighawag/universal-forwarder (MIT licence)\",\"kind\":\"dev\",\"methods\":{\"isApprovedForwarder(address,address)\":{\"params\":{\"forwarder\":\"The forwarder account.\",\"sender\":\"The sender account.\"},\"returns\":{\"isApproved\":\"True if `forwarder` is an approved meta-transaction forwarder for `sender`, false otherwise.\"}}},\"title\":\"Universal Meta-Transactions Forwarder Registry.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isApprovedForwarder(address,address)\":{\"notice\":\"Checks whether an account is as an approved meta-transaction forwarder for a sender account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/metatx/interfaces/IForwarderRegistry.sol\":\"IForwarderRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/metatx/interfaces/IForwarderRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title Universal Meta-Transactions Forwarder Registry.\\n/// @dev Derived from https://github.com/wighawag/universal-forwarder (MIT licence)\\ninterface IForwarderRegistry {\\n    /// @notice Checks whether an account is as an approved meta-transaction forwarder for a sender account.\\n    /// @param sender The sender account.\\n    /// @param forwarder The forwarder account.\\n    /// @return isApproved True if `forwarder` is an approved meta-transaction forwarder for `sender`, false otherwise.\\n    function isApprovedForwarder(address sender, address forwarder) external view returns (bool isApproved);\\n}\\n\",\"keccak256\":\"0x9b4a8105af5713c207f7c2c94b24d88f33e5dcf49d03f356cc7c794ae67147d4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"isApprovedForwarder(address,address)":{"notice":"Checks whether an account is as an approved meta-transaction forwarder for a sender account."}},"version":1}}},"@animoca/ethereum-contracts/contracts/metatx/libraries/ERC2771Calldata.sol":{"ERC2771Calldata":{"abi":[],"devdoc":{"details":"Derived from https://github.com/OpenZeppelin/openzeppelin-contracts (MIT licence)See https://eips.ethereum.org/EIPS/eip-2771","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e99ab67e667c6292137f0c4077010c513dcc6a146de58e28628648b6e072718464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SWAP11 0xB6 PUSH31 0x667C6292137F0C4077010C513DCC6A146DE58E28628648B6E072718464736F PUSH13 0x63430008180033000000000000 ","sourceMap":"202:568:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:568:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e99ab67e667c6292137f0c4077010c513dcc6a146de58e28628648b6e072718464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SWAP11 0xB6 PUSH31 0x667C6292137F0C4077010C513DCC6A146DE58E28628648B6E072718464736F PUSH13 0x63430008180033000000000000 ","sourceMap":"202:568:6:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"msgData()":"infinite","msgSender()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Derived from https://github.com/OpenZeppelin/openzeppelin-contracts (MIT licence)See https://eips.ethereum.org/EIPS/eip-2771\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/metatx/libraries/ERC2771Calldata.sol\":\"ERC2771Calldata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/metatx/libraries/ERC2771Calldata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @dev Derived from https://github.com/OpenZeppelin/openzeppelin-contracts (MIT licence)\\n/// @dev See https://eips.ethereum.org/EIPS/eip-2771\\nlibrary ERC2771Calldata {\\n    /// @notice Returns the sender address appended at the end of the calldata, as specified in EIP-2771.\\n    function msgSender() internal pure returns (address sender) {\\n        assembly {\\n            sender := shr(96, calldataload(sub(calldatasize(), 20)))\\n        }\\n    }\\n\\n    /// @notice Returns the calldata while omitting the appended sender address, as specified in EIP-2771.\\n    function msgData() internal pure returns (bytes calldata data) {\\n        unchecked {\\n            return msg.data[:msg.data.length - 20];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb9d3b8a6aa97234fac6f955d447e77e066549743cab021db787e442227abd3bf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyAdminStorage.sol":{"ProxyAdminStorage":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122051adba462f5772ec89b97220cf152165b38c0f7c15ad02bdb804f01439d0520b64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xAD 0xBA CHAINID 0x2F JUMPI PUSH19 0xEC89B97220CF152165B38C0F7C15AD02BDB804 CREATE EQ CODECOPY 0xD0 MSTORE SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"270:3142:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;270:3142:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122051adba462f5772ec89b97220cf152165b38c0f7c15ad02bdb804f01439d0520b64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xAD 0xBA CHAINID 0x2F JUMPI PUSH19 0xEC89B97220CF152165B38C0F7C15AD02BDB804 CREATE EQ CODECOPY 0xD0 MSTORE SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"270:3142:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"changeProxyAdmin(struct ProxyAdminStorage.Layout storage pointer,address,address)":"infinite","constructorInit(struct ProxyAdminStorage.Layout storage pointer,address)":"infinite","enforceIsProxyAdmin(struct ProxyAdminStorage.Layout storage pointer,address)":"infinite","layout()":"infinite","proxyAdmin(struct ProxyAdminStorage.Layout storage pointer)":"infinite","proxyInit(struct ProxyAdminStorage.Layout storage pointer,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyAdminStorage.sol\":\"ProxyAdminStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyAdminErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Thrown when the initial admin is not set.\\nerror NoInitialProxyAdmin();\\n\\n/// @notice Thrown when an account is not the proxy admin but is required to.\\n/// @param account The account that was checked.\\nerror NotProxyAdmin(address account);\\n\",\"keccak256\":\"0xd851b8ad5cb0328a5e7e12ff116e2e4f6c60520bf7c01371576e9ecf7a549491\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Emitted when trying to set a phase value that has already been reached.\\n/// @param currentPhase The current phase.\\n/// @param newPhase The new phase trying to be set.\\nerror InitializationPhaseAlreadyReached(uint256 currentPhase, uint256 newPhase);\\n\",\"keccak256\":\"0x04fd98d85db9c4a6947a8f33369455f9317f68fa9fccdc7ec7556a10cb2a1716\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/events/ProxyAdminEvents.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Emitted when the proxy admin changes.\\n/// @param previousAdmin the previous admin.\\n/// @param newAdmin the new admin.\\nevent AdminChanged(address previousAdmin, address newAdmin);\\n\",\"keccak256\":\"0x000d8f4db2c0917888fc21d83939aed42daaba7c7d18d1e81c9dd1ca25e8dbaa\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyAdminStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {NoInitialProxyAdmin, NotProxyAdmin} from \\\"./../errors/ProxyAdminErrors.sol\\\";\\nimport {AdminChanged} from \\\"./../events/ProxyAdminEvents.sol\\\";\\nimport {ProxyInitialization} from \\\"./ProxyInitialization.sol\\\";\\n\\nlibrary ProxyAdminStorage {\\n    using ProxyAdminStorage for ProxyAdminStorage.Layout;\\n\\n    struct Layout {\\n        address admin;\\n    }\\n\\n    // bytes32 public constant PROXYADMIN_STORAGE_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1);\\n    bytes32 internal constant PROXY_INIT_PHASE_SLOT = bytes32(uint256(keccak256(\\\"eip1967.proxy.admin.phase\\\")) - 1);\\n\\n    /// @notice Initializes the storage with an initial admin (immutable version).\\n    /// @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\\n    /// @dev Reverts {NoInitialProxyAdmin} if `initialAdmin` is the zero address.\\n    /// @dev Emits an {AdminChanged} event.\\n    /// @param initialAdmin The initial payout wallet.\\n    function constructorInit(Layout storage s, address initialAdmin) internal {\\n        if (initialAdmin == address(0)) revert NoInitialProxyAdmin();\\n        s.admin = initialAdmin;\\n        emit AdminChanged(address(0), initialAdmin);\\n    }\\n\\n    /// @notice Initializes the storage with an initial admin (proxied version).\\n    /// @notice Sets the proxy initialization phase to `1`.\\n    /// @dev Note: This function should be called ONLY in the init function of a proxied contract.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\\n    /// @dev Reverts {NoInitialProxyAdmin} if `initialAdmin` is the zero address.\\n    /// @dev Emits an {AdminChanged} event.\\n    /// @param initialAdmin The initial payout wallet.\\n    function proxyInit(Layout storage s, address initialAdmin) internal {\\n        ProxyInitialization.setPhase(PROXY_INIT_PHASE_SLOT, 1);\\n        s.constructorInit(initialAdmin);\\n    }\\n\\n    /// @notice Sets a new proxy admin.\\n    /// @dev Reverts with {NotProxyAdmin} if `sender` is not the proxy admin.\\n    /// @dev Emits an {AdminChanged} event if `newAdmin` is different from the current proxy admin.\\n    /// @param newAdmin The new proxy admin.\\n    function changeProxyAdmin(Layout storage s, address sender, address newAdmin) internal {\\n        address previousAdmin = s.admin;\\n        if (sender != previousAdmin) revert NotProxyAdmin(sender);\\n        if (previousAdmin != newAdmin) {\\n            s.admin = newAdmin;\\n            emit AdminChanged(previousAdmin, newAdmin);\\n        }\\n    }\\n\\n    /// @notice Gets the proxy admin.\\n    /// @return admin The proxy admin\\n    function proxyAdmin(Layout storage s) internal view returns (address admin) {\\n        return s.admin;\\n    }\\n\\n    /// @notice Ensures that an account is the proxy admin.\\n    /// @dev Reverts with {NotProxyAdmin} if `account` is not the proxy admin.\\n    /// @param account The account.\\n    function enforceIsProxyAdmin(Layout storage s, address account) internal view {\\n        if (account != s.admin) revert NotProxyAdmin(account);\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x68cd9bb3b74af29f186c87283d7efbdc58fea3aa8ab4f276ec53d5a012442b67\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {InitializationPhaseAlreadyReached} from \\\"./../errors/ProxyInitializationErrors.sol\\\";\\nimport {StorageSlot} from \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\n/// @notice Multiple calls protection for storage-modifying proxy initialization functions.\\nlibrary ProxyInitialization {\\n    /// @notice Sets the initialization phase during a storage-modifying proxy initialization function.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\\n    /// @param storageSlot the storage slot where `phase` is stored.\\n    /// @param phase the initialization phase.\\n    function setPhase(bytes32 storageSlot, uint256 phase) internal {\\n        StorageSlot.Uint256Slot storage currentVersion = StorageSlot.getUint256Slot(storageSlot);\\n        uint256 currentPhase = currentVersion.value;\\n        if (currentPhase >= phase) revert InitializationPhaseAlreadyReached(currentPhase, phase);\\n        currentVersion.value = phase;\\n    }\\n}\\n\",\"keccak256\":\"0x5bf72b121964b5122b12048165c8f6ef84cf2232015c52632539548c261f6e7d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol":{"ProxyInitialization":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c32ae6fb144cf2522146d0bb0e06527ef45be949d72328140e670a77bc6958ac64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0x2A 0xE6 0xFB EQ 0x4C CALLCODE MSTORE 0x21 CHAINID 0xD0 0xBB 0xE MOD MSTORE PUSH31 0xF45BE949D72328140E670A77BC6958AC64736F6C6343000818003300000000 ","sourceMap":"319:712:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;319:712:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c32ae6fb144cf2522146d0bb0e06527ef45be949d72328140e670a77bc6958ac64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0x2A 0xE6 0xFB EQ 0x4C CALLCODE MSTORE 0x21 CHAINID 0xD0 0xBB 0xE MOD MSTORE PUSH31 0xF45BE949D72328140E670A77BC6958AC64736F6C6343000818003300000000 ","sourceMap":"319:712:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"setPhase(bytes32,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Multiple calls protection for storage-modifying proxy initialization functions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\":\"ProxyInitialization\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Emitted when trying to set a phase value that has already been reached.\\n/// @param currentPhase The current phase.\\n/// @param newPhase The new phase trying to be set.\\nerror InitializationPhaseAlreadyReached(uint256 currentPhase, uint256 newPhase);\\n\",\"keccak256\":\"0x04fd98d85db9c4a6947a8f33369455f9317f68fa9fccdc7ec7556a10cb2a1716\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {InitializationPhaseAlreadyReached} from \\\"./../errors/ProxyInitializationErrors.sol\\\";\\nimport {StorageSlot} from \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\n/// @notice Multiple calls protection for storage-modifying proxy initialization functions.\\nlibrary ProxyInitialization {\\n    /// @notice Sets the initialization phase during a storage-modifying proxy initialization function.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\\n    /// @param storageSlot the storage slot where `phase` is stored.\\n    /// @param phase the initialization phase.\\n    function setPhase(bytes32 storageSlot, uint256 phase) internal {\\n        StorageSlot.Uint256Slot storage currentVersion = StorageSlot.getUint256Slot(storageSlot);\\n        uint256 currentPhase = currentVersion.value;\\n        if (currentPhase >= phase) revert InitializationPhaseAlreadyReached(currentPhase, phase);\\n        currentVersion.value = phase;\\n    }\\n}\\n\",\"keccak256\":\"0x5bf72b121964b5122b12048165c8f6ef84cf2232015c52632539548c261f6e7d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Multiple calls protection for storage-modifying proxy initialization functions.","version":1}}},"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol":{"IERC721Mintable":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"batchMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeMint","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721Note: The ERC-165 identifier for this interface is 0x8e773e13.","kind":"dev","methods":{"batchMint(address,uint256[])":{"details":"Reverts if `to` is the zero address.Reverts if one of `tokenIds` already exists.Emits an {IERC721-Transfer} event from the zero address for each of `tokenIds`.","params":{"to":"Address of the new tokens owner.","tokenIds":"Identifiers of the tokens to mint."}},"mint(address,uint256)":{"details":"Reverts if `to` is the zero address.Reverts if `tokenId` already exists.Emits an {IERC721-Transfer} event from the zero address.","params":{"to":"Address of the new token owner.","tokenId":"Identifier of the token to mint."}},"safeMint(address,uint256,bytes)":{"details":"Reverts if `to` is the zero address.Reverts if `tokenId` already exists.Reverts if `to` is a contract and the call to {IERC721Receiver-onERC721Received} fails, reverts or is rejected.Emits an {IERC721-Transfer} event from the zero address.","params":{"data":"Optional data to pass along to the receiver call.","to":"Address of the new token owner.","tokenId":"Identifier of the token to mint."}}},"title":"ERC721 Non-Fungible Token Standard, optional extension: Mintable.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"batchMint(address,uint256[])":"4684d7e9","mint(address,uint256)":"40c10f19","safeMint(address,uint256,bytes)":"8832e6e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721Note: The ERC-165 identifier for this interface is 0x8e773e13.\",\"kind\":\"dev\",\"methods\":{\"batchMint(address,uint256[])\":{\"details\":\"Reverts if `to` is the zero address.Reverts if one of `tokenIds` already exists.Emits an {IERC721-Transfer} event from the zero address for each of `tokenIds`.\",\"params\":{\"to\":\"Address of the new tokens owner.\",\"tokenIds\":\"Identifiers of the tokens to mint.\"}},\"mint(address,uint256)\":{\"details\":\"Reverts if `to` is the zero address.Reverts if `tokenId` already exists.Emits an {IERC721-Transfer} event from the zero address.\",\"params\":{\"to\":\"Address of the new token owner.\",\"tokenId\":\"Identifier of the token to mint.\"}},\"safeMint(address,uint256,bytes)\":{\"details\":\"Reverts if `to` is the zero address.Reverts if `tokenId` already exists.Reverts if `to` is a contract and the call to {IERC721Receiver-onERC721Received} fails, reverts or is rejected.Emits an {IERC721-Transfer} event from the zero address.\",\"params\":{\"data\":\"Optional data to pass along to the receiver call.\",\"to\":\"Address of the new token owner.\",\"tokenId\":\"Identifier of the token to mint.\"}}},\"title\":\"ERC721 Non-Fungible Token Standard, optional extension: Mintable.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchMint(address,uint256[])\":{\"notice\":\"Unsafely mints a batch of tokens.\"},\"mint(address,uint256)\":{\"notice\":\"Unsafely mints a token.\"},\"safeMint(address,uint256,bytes)\":{\"notice\":\"Safely mints a token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\":\"IERC721Mintable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC721 Non-Fungible Token Standard, optional extension: Mintable.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n/// @dev Note: The ERC-165 identifier for this interface is 0x8e773e13.\\ninterface IERC721Mintable {\\n    /// @notice Unsafely mints a token.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if `tokenId` already exists.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address.\\n    /// @param to Address of the new token owner.\\n    /// @param tokenId Identifier of the token to mint.\\n    function mint(address to, uint256 tokenId) external;\\n\\n    /// @notice Safely mints a token.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if `tokenId` already exists.\\n    /// @dev Reverts if `to` is a contract and the call to {IERC721Receiver-onERC721Received} fails, reverts or is rejected.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address.\\n    /// @param to Address of the new token owner.\\n    /// @param tokenId Identifier of the token to mint.\\n    /// @param data Optional data to pass along to the receiver call.\\n    function safeMint(address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /// @notice Unsafely mints a batch of tokens.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if one of `tokenIds` already exists.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address for each of `tokenIds`.\\n    /// @param to Address of the new tokens owner.\\n    /// @param tokenIds Identifiers of the tokens to mint.\\n    function batchMint(address to, uint256[] calldata tokenIds) external;\\n}\\n\",\"keccak256\":\"0x4636f14283fd145c15f085e968fd274df5b808738da83bc46ce98b360dec7dfb\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"batchMint(address,uint256[])":{"notice":"Unsafely mints a batch of tokens."},"mint(address,uint256)":{"notice":"Unsafely mints a token."},"safeMint(address,uint256,bytes)":{"notice":"Safely mints a token."}},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204da9532eb27e46010b75e0f62c99ea54c8a53f7b2526626fe65c8488c9629a3e64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xA9 MSTORE8 0x2E 0xB2 PUSH31 0x46010B75E0F62C99EA54C8A53F7B2526626FE65C8488C9629A3E64736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"1420:2685:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2685:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204da9532eb27e46010b75e0f62c99ea54c8a53f7b2526626fe65c8488c9629a3e64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xA9 MSTORE8 0x2E 0xB2 PUSH31 0x46010B75E0F62C99EA54C8A53F7B2526626FE65C8488C9629A3E64736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"1420:2685:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/lib/minter/ERC721/ERC721Minter.sol":{"ERC721Minter":{"abi":[{"inputs":[],"name":"ERC721MinterMaxTokenIdExceeded","type":"error"},{"inputs":[{"internalType":"address","name":"tokenContract","type":"address"}],"name":"ERC721MinterUnsupportedContractType","type":"error"},{"inputs":[],"name":"ERC721MinterZeroMaxTokenId","type":"error"},{"inputs":[],"name":"ERC721MinterZeroTokenAddress","type":"error"},{"inputs":[],"name":"IllegalInterfaceId","type":"error"},{"inputs":[],"name":"currentTokenId","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTokenId","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.","params":{"maxTokenId":"The maximum token ID that can be minted.","token":"The ERC721 token contract."}},"currentTokenId()":{"returns":{"tokenId":"The current token ID."}},"maxTokenId()":{"returns":{"tokenId":"The maximum token ID."}},"mint(address)":{"params":{"to":"The address to receive the token."}},"supportsInterface(bytes4)":{"details":"Note: This function call must use less than 30 000 gas.","params":{"interfaceId":"the interface identifier to test."},"returns":{"_0":"True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported."}}},"title":"ERC721 Minter contract (immutable version).","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"currentTokenId()":"009a9b7b","maxTokenId()":"91ba317a","mint(address)":"6a627842","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721MinterMaxTokenIdExceeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"ERC721MinterUnsupportedContractType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721MinterZeroMaxTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721MinterZeroTokenAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IllegalInterfaceId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"currentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.\",\"params\":{\"maxTokenId\":\"The maximum token ID that can be minted.\",\"token\":\"The ERC721 token contract.\"}},\"currentTokenId()\":{\"returns\":{\"tokenId\":\"The current token ID.\"}},\"maxTokenId()\":{\"returns\":{\"tokenId\":\"The maximum token ID.\"}},\"mint(address)\":{\"params\":{\"to\":\"The address to receive the token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Note: This function call must use less than 30 000 gas.\",\"params\":{\"interfaceId\":\"the interface identifier to test.\"},\"returns\":{\"_0\":\"True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\"}}},\"title\":\"ERC721 Minter contract (immutable version).\",\"version\":1},\"userdoc\":{\"errors\":{\"ERC721MinterMaxTokenIdExceeded()\":[{\"notice\":\"Thrown when the maximum token ID is exceeded.\"}],\"ERC721MinterUnsupportedContractType(address)\":[{\"notice\":\"Thrown when the token contract interface id does not supported.\"}],\"ERC721MinterZeroMaxTokenId()\":[{\"notice\":\"Thrown when the token ID is zero.\"}],\"ERC721MinterZeroTokenAddress()\":[{\"notice\":\"Thrown when the token address is zero.\"}],\"IllegalInterfaceId()\":[{\"notice\":\"Thrown when setting the illegal interfaceId 0xffffffff.\"}]},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initializes the storage with the maximum token ID and the ERC721 token contract.\"},\"currentTokenId()\":{\"notice\":\"Returns the current token ID.\"},\"maxTokenId()\":{\"notice\":\"Returns the maximum token ID.\"},\"mint(address)\":{\"notice\":\"Mints a token to the specified address.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Returns whether this contract implements a given interface.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/minter/ERC721/ERC721Minter.sol\":\"ERC721Minter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/introspection/InterfaceDetection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {IERC165} from \\\"./interfaces/IERC165.sol\\\";\\nimport {InterfaceDetectionStorage} from \\\"./libraries/InterfaceDetectionStorage.sol\\\";\\n\\n/// @title ERC165 Interface Detection Standard (immutable or proxiable version).\\n/// @dev This contract is to be used via inheritance in an immutable (non-proxied) or proxied implementation.\\nabstract contract InterfaceDetection is IERC165 {\\n    using InterfaceDetectionStorage for InterfaceDetectionStorage.Layout;\\n\\n    /// @inheritdoc IERC165\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool) {\\n        return InterfaceDetectionStorage.layout().supportsInterface(interfaceId);\\n    }\\n}\\n\",\"keccak256\":\"0xbe995fd26786ed4617ae37f07c1f7961ac3591e2f4e89b9fa353ad60fb11ab15\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Thrown when setting the illegal interfaceId 0xffffffff.\\nerror IllegalInterfaceId();\\n\",\"keccak256\":\"0xfc30a58bec3f7c1dd1c1b4604d668082c7c01696bb9cbf181a7812e9d0d318d5\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC165 Interface Detection Standard.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\\ninterface IERC165 {\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId the interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\\n}\\n\",\"keccak256\":\"0x569c0a59305d5e0eb9ea3ef6b9376f4771895caca1db902ca6397fa085ab82b4\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {IllegalInterfaceId} from \\\"./../errors/InterfaceDetectionErrors.sol\\\";\\nimport {IERC165} from \\\"./../interfaces/IERC165.sol\\\";\\n\\nlibrary InterfaceDetectionStorage {\\n    struct Layout {\\n        mapping(bytes4 => bool) supportedInterfaces;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.introspection.InterfaceDetection.storage\\\")) - 1);\\n\\n    bytes4 internal constant ILLEGAL_INTERFACE_ID = 0xffffffff;\\n\\n    /// @notice Sets or unsets an ERC165 interface.\\n    /// @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\\n    /// @param interfaceId the interface identifier.\\n    /// @param supported True to set the interface, false to unset it.\\n    function setSupportedInterface(Layout storage s, bytes4 interfaceId, bool supported) internal {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) revert IllegalInterfaceId();\\n        s.supportedInterfaces[interfaceId] = supported;\\n    }\\n\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId The interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(Layout storage s, bytes4 interfaceId) internal view returns (bool supported) {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) {\\n            return false;\\n        }\\n        if (interfaceId == type(IERC165).interfaceId) {\\n            return true;\\n        }\\n        return s.supportedInterfaces[interfaceId];\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x87944ecb71a120095067c66e9ab703ea25460e83f1f39ba0f9bd49a3481ad4dc\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Emitted when trying to set a phase value that has already been reached.\\n/// @param currentPhase The current phase.\\n/// @param newPhase The new phase trying to be set.\\nerror InitializationPhaseAlreadyReached(uint256 currentPhase, uint256 newPhase);\\n\",\"keccak256\":\"0x04fd98d85db9c4a6947a8f33369455f9317f68fa9fccdc7ec7556a10cb2a1716\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {InitializationPhaseAlreadyReached} from \\\"./../errors/ProxyInitializationErrors.sol\\\";\\nimport {StorageSlot} from \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\n/// @notice Multiple calls protection for storage-modifying proxy initialization functions.\\nlibrary ProxyInitialization {\\n    /// @notice Sets the initialization phase during a storage-modifying proxy initialization function.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\\n    /// @param storageSlot the storage slot where `phase` is stored.\\n    /// @param phase the initialization phase.\\n    function setPhase(bytes32 storageSlot, uint256 phase) internal {\\n        StorageSlot.Uint256Slot storage currentVersion = StorageSlot.getUint256Slot(storageSlot);\\n        uint256 currentPhase = currentVersion.value;\\n        if (currentPhase >= phase) revert InitializationPhaseAlreadyReached(currentPhase, phase);\\n        currentVersion.value = phase;\\n    }\\n}\\n\",\"keccak256\":\"0x5bf72b121964b5122b12048165c8f6ef84cf2232015c52632539548c261f6e7d\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC721 Non-Fungible Token Standard, optional extension: Mintable.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n/// @dev Note: The ERC-165 identifier for this interface is 0x8e773e13.\\ninterface IERC721Mintable {\\n    /// @notice Unsafely mints a token.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if `tokenId` already exists.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address.\\n    /// @param to Address of the new token owner.\\n    /// @param tokenId Identifier of the token to mint.\\n    function mint(address to, uint256 tokenId) external;\\n\\n    /// @notice Safely mints a token.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if `tokenId` already exists.\\n    /// @dev Reverts if `to` is a contract and the call to {IERC721Receiver-onERC721Received} fails, reverts or is rejected.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address.\\n    /// @param to Address of the new token owner.\\n    /// @param tokenId Identifier of the token to mint.\\n    /// @param data Optional data to pass along to the receiver call.\\n    function safeMint(address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /// @notice Unsafely mints a batch of tokens.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if one of `tokenIds` already exists.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address for each of `tokenIds`.\\n    /// @param to Address of the new tokens owner.\\n    /// @param tokenIds Identifiers of the tokens to mint.\\n    function batchMint(address to, uint256[] calldata tokenIds) external;\\n}\\n\",\"keccak256\":\"0x4636f14283fd145c15f085e968fd274df5b808738da83bc46ce98b360dec7dfb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/ERC721Minter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {InterfaceDetection} from \\\"@animoca/ethereum-contracts/contracts/introspection/InterfaceDetection.sol\\\";\\nimport {IERC721Mintable} from \\\"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\\\";\\nimport {ERC721MinterBase} from \\\"./base/ERC721MinterBase.sol\\\";\\nimport {ERC721MinterStorage} from \\\"./libraries/ERC721MinterStorage.sol\\\";\\n\\n/// @title ERC721 Minter contract (immutable version).\\nabstract contract ERC721Minter is ERC721MinterBase, InterfaceDetection {\\n    using ERC721MinterStorage for ERC721MinterStorage.Layout;\\n\\n    /// @notice Initializes the storage with the maximum token ID and the ERC721 token contract.\\n    /// @dev Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.\\n    /// @dev Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.\\n    /// @dev Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.\\n    /// @param maxTokenId The maximum token ID that can be minted.\\n    /// @param token The ERC721 token contract.\\n    constructor(uint256 maxTokenId, IERC721Mintable token) {\\n        ERC721MinterStorage.layout().constructorInit(maxTokenId, token);\\n    }\\n}\\n\",\"keccak256\":\"0xb69d71d4d00f9bc9cc0b1d98a6ee6098694a11f986f9664d4f793f6f09e925a3\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/base/ERC721MinterBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {IERC721Minter} from \\\"../interfaces/IERC721Minter.sol\\\";\\nimport {ERC721MinterStorage} from \\\"../libraries/ERC721MinterStorage.sol\\\";\\n\\n/// @title ERC721 Minter contract for minting ERC721 tokens with a maximum token ID limit.\\n/// @dev This contract is to be used via inheritance in a proxied implementation.\\n/// @dev Note: This contract requires ERC165 (Interface Detection Standard).\\nabstract contract ERC721MinterBase is IERC721Minter {\\n    using ERC721MinterStorage for ERC721MinterStorage.Layout;\\n\\n    /// @inheritdoc IERC721Minter\\n    function mint(address to) public virtual {\\n        ERC721MinterStorage.layout().mint(to);\\n    }\\n\\n    /// @inheritdoc IERC721Minter\\n    function currentTokenId() public view returns (uint256 tokenId) {\\n        return ERC721MinterStorage.layout().currentId();\\n    }\\n\\n    /// @inheritdoc IERC721Minter\\n    function maxTokenId() public view returns (uint256 tokenId) {\\n        return ERC721MinterStorage.layout().maxId();\\n    }\\n}\\n\",\"keccak256\":\"0x37eb1e23835153a1cb01f2cbc9adeadb2cec50c272c28762c03265076acd2b4b\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/errors/ERC721MinterErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Thrown when the token ID is zero.\\nerror ERC721MinterZeroMaxTokenId();\\n\\n/// @notice Thrown when the token address is zero.\\nerror ERC721MinterZeroTokenAddress();\\n\\n/// @notice Thrown when the token contract interface id does not supported.\\nerror ERC721MinterUnsupportedContractType(address tokenContract);\\n\\n/// @notice Thrown when the maximum token ID is exceeded.\\nerror ERC721MinterMaxTokenIdExceeded();\\n\",\"keccak256\":\"0x7626262f30f77f2d08fb90b9cd9e66689523fc1b6bb0f70da706949e4bf026c3\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/interfaces/IERC721Minter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC721 Minter interface for minting ERC721 tokens.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x4f859546.\\ninterface IERC721Minter {\\n    /// @notice Returns the current token ID.\\n    /// @return tokenId The current token ID.\\n    function currentTokenId() external view returns (uint256 tokenId);\\n\\n    /// @notice Returns the maximum token ID.\\n    /// @return tokenId The maximum token ID.\\n    function maxTokenId() external view returns (uint256 tokenId);\\n\\n    /// @notice Mints a token to the specified address.\\n    /// @param to The address to receive the token.\\n    function mint(address to) external;\\n}\\n\",\"keccak256\":\"0x5e903fc517cd0e8429fad955249edaf4d9e25a47c530872b0ab0ab1e505cc21b\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/libraries/ERC721MinterStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n// solhint-disable-next-line max-line-length\\nimport {ERC721MinterZeroMaxTokenId, ERC721MinterUnsupportedContractType, ERC721MinterMaxTokenIdExceeded, ERC721MinterZeroTokenAddress} from \\\"../errors/ERC721MinterErrors.sol\\\";\\nimport {InterfaceDetectionStorage} from \\\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\\\";\\nimport {IERC165} from \\\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\\\";\\nimport {IERC721Mintable} from \\\"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\\\";\\nimport {ProxyInitialization} from \\\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\\\";\\nimport {IERC721Minter} from \\\"../interfaces/IERC721Minter.sol\\\";\\n\\nlibrary ERC721MinterStorage {\\n    using ERC721MinterStorage for ERC721MinterStorage.Layout;\\n    using InterfaceDetectionStorage for InterfaceDetectionStorage.Layout;\\n\\n    struct Layout {\\n        uint256 currentTokenId;\\n        uint256 maxTokenId;\\n        IERC721Mintable token;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"yura2100.token.ERC721.ERC721Minter.storage\\\")) - 1);\\n    bytes32 internal constant PROXY_INIT_PHASE_SLOT = bytes32(uint256(keccak256(\\\"yura2100.token.ERC721.ERC721Minter.phase\\\")) - 1);\\n\\n    /// @notice Initializes the storage with the maximum token ID and the ERC721 token contract.\\n    /// @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\\n    /// @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\\n    /// @dev Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.\\n    /// @dev Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.\\n    /// @dev Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.\\n    /// @param maxTokenId The maximum token ID that can be minted.\\n    /// @param token The ERC721 token contract.\\n    function constructorInit(Layout storage s, uint256 maxTokenId, IERC721Mintable token) internal {\\n        if (maxTokenId == 0) {\\n            revert ERC721MinterZeroMaxTokenId();\\n        }\\n        if (address(token) == address(0)) {\\n            revert ERC721MinterZeroTokenAddress();\\n        }\\n\\n        if (!IERC165(address(token)).supportsInterface(type(IERC721Mintable).interfaceId)) {\\n            revert ERC721MinterUnsupportedContractType(address(token));\\n        }\\n        s.maxTokenId = maxTokenId;\\n        s.token = token;\\n        InterfaceDetectionStorage.layout().setSupportedInterface(type(IERC721Minter).interfaceId, true);\\n    }\\n\\n    /// @notice Initializes the storage with the maximum token ID and the ERC721 token contract.\\n    /// @notice Sets the proxy initialization phase to `1`.\\n    /// @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\\n    /// @dev Note: This function should be called ONLY in the init function of a proxied contract.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\\n    /// @param maxTokenId The maximum token ID that can be minted.\\n    /// @param token The ERC721 token contract.\\n    function proxyInit(Layout storage s, uint256 maxTokenId, IERC721Mintable token) internal {\\n        ProxyInitialization.setPhase(PROXY_INIT_PHASE_SLOT, 1);\\n        s.constructorInit(maxTokenId, token);\\n    }\\n\\n    /// @notice Mints a token to the specified address.\\n    /// @dev Reverts with {ERC721MinterMaxTokenIdExceeded} if the current token ID exceeds the maximum token ID.\\n    /// @param to The address to which the token will be minted.\\n    function mint(Layout storage s, address to) internal {\\n        uint256 nextId = s.currentTokenId + 1;\\n        if (nextId > s.maxTokenId) {\\n            revert ERC721MinterMaxTokenIdExceeded();\\n        }\\n        s.token.mint(to, nextId);\\n        s.currentTokenId = nextId;\\n    }\\n\\n    /// @notice Returns the current token ID.\\n    /// @return tokenId The current token ID.\\n    function currentId(Layout storage s) internal view returns (uint256 tokenId) {\\n        return s.currentTokenId;\\n    }\\n\\n    /// @notice Returns the maximum token ID.\\n    /// @return tokenId The maximum token ID.\\n    function maxId(Layout storage s) internal view returns (uint256 tokenId) {\\n        return s.maxTokenId;\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xeda0d8eac4ba8aa3ffd62fda5e840b18150a880f8d54b2bcc7f97589f62ff54e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"errors":{"ERC721MinterMaxTokenIdExceeded()":[{"notice":"Thrown when the maximum token ID is exceeded."}],"ERC721MinterUnsupportedContractType(address)":[{"notice":"Thrown when the token contract interface id does not supported."}],"ERC721MinterZeroMaxTokenId()":[{"notice":"Thrown when the token ID is zero."}],"ERC721MinterZeroTokenAddress()":[{"notice":"Thrown when the token address is zero."}],"IllegalInterfaceId()":[{"notice":"Thrown when setting the illegal interfaceId 0xffffffff."}]},"kind":"user","methods":{"constructor":{"notice":"Initializes the storage with the maximum token ID and the ERC721 token contract."},"currentTokenId()":{"notice":"Returns the current token ID."},"maxTokenId()":{"notice":"Returns the maximum token ID."},"mint(address)":{"notice":"Mints a token to the specified address."},"supportsInterface(bytes4)":{"notice":"Returns whether this contract implements a given interface."}},"version":1}}},"contracts/lib/minter/ERC721/base/ERC721MinterBase.sol":{"ERC721MinterBase":{"abi":[{"inputs":[],"name":"ERC721MinterMaxTokenIdExceeded","type":"error"},{"inputs":[],"name":"currentTokenId","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTokenId","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This contract is to be used via inheritance in a proxied implementation.Note: This contract requires ERC165 (Interface Detection Standard).","kind":"dev","methods":{"currentTokenId()":{"returns":{"tokenId":"The current token ID."}},"maxTokenId()":{"returns":{"tokenId":"The maximum token ID."}},"mint(address)":{"params":{"to":"The address to receive the token."}}},"title":"ERC721 Minter contract for minting ERC721 tokens with a maximum token ID limit.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"currentTokenId()":"009a9b7b","maxTokenId()":"91ba317a","mint(address)":"6a627842"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721MinterMaxTokenIdExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"currentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is to be used via inheritance in a proxied implementation.Note: This contract requires ERC165 (Interface Detection Standard).\",\"kind\":\"dev\",\"methods\":{\"currentTokenId()\":{\"returns\":{\"tokenId\":\"The current token ID.\"}},\"maxTokenId()\":{\"returns\":{\"tokenId\":\"The maximum token ID.\"}},\"mint(address)\":{\"params\":{\"to\":\"The address to receive the token.\"}}},\"title\":\"ERC721 Minter contract for minting ERC721 tokens with a maximum token ID limit.\",\"version\":1},\"userdoc\":{\"errors\":{\"ERC721MinterMaxTokenIdExceeded()\":[{\"notice\":\"Thrown when the maximum token ID is exceeded.\"}]},\"kind\":\"user\",\"methods\":{\"currentTokenId()\":{\"notice\":\"Returns the current token ID.\"},\"maxTokenId()\":{\"notice\":\"Returns the maximum token ID.\"},\"mint(address)\":{\"notice\":\"Mints a token to the specified address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/minter/ERC721/base/ERC721MinterBase.sol\":\"ERC721MinterBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Thrown when setting the illegal interfaceId 0xffffffff.\\nerror IllegalInterfaceId();\\n\",\"keccak256\":\"0xfc30a58bec3f7c1dd1c1b4604d668082c7c01696bb9cbf181a7812e9d0d318d5\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC165 Interface Detection Standard.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\\ninterface IERC165 {\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId the interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\\n}\\n\",\"keccak256\":\"0x569c0a59305d5e0eb9ea3ef6b9376f4771895caca1db902ca6397fa085ab82b4\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {IllegalInterfaceId} from \\\"./../errors/InterfaceDetectionErrors.sol\\\";\\nimport {IERC165} from \\\"./../interfaces/IERC165.sol\\\";\\n\\nlibrary InterfaceDetectionStorage {\\n    struct Layout {\\n        mapping(bytes4 => bool) supportedInterfaces;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.introspection.InterfaceDetection.storage\\\")) - 1);\\n\\n    bytes4 internal constant ILLEGAL_INTERFACE_ID = 0xffffffff;\\n\\n    /// @notice Sets or unsets an ERC165 interface.\\n    /// @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\\n    /// @param interfaceId the interface identifier.\\n    /// @param supported True to set the interface, false to unset it.\\n    function setSupportedInterface(Layout storage s, bytes4 interfaceId, bool supported) internal {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) revert IllegalInterfaceId();\\n        s.supportedInterfaces[interfaceId] = supported;\\n    }\\n\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId The interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(Layout storage s, bytes4 interfaceId) internal view returns (bool supported) {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) {\\n            return false;\\n        }\\n        if (interfaceId == type(IERC165).interfaceId) {\\n            return true;\\n        }\\n        return s.supportedInterfaces[interfaceId];\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x87944ecb71a120095067c66e9ab703ea25460e83f1f39ba0f9bd49a3481ad4dc\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Emitted when trying to set a phase value that has already been reached.\\n/// @param currentPhase The current phase.\\n/// @param newPhase The new phase trying to be set.\\nerror InitializationPhaseAlreadyReached(uint256 currentPhase, uint256 newPhase);\\n\",\"keccak256\":\"0x04fd98d85db9c4a6947a8f33369455f9317f68fa9fccdc7ec7556a10cb2a1716\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {InitializationPhaseAlreadyReached} from \\\"./../errors/ProxyInitializationErrors.sol\\\";\\nimport {StorageSlot} from \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\n/// @notice Multiple calls protection for storage-modifying proxy initialization functions.\\nlibrary ProxyInitialization {\\n    /// @notice Sets the initialization phase during a storage-modifying proxy initialization function.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\\n    /// @param storageSlot the storage slot where `phase` is stored.\\n    /// @param phase the initialization phase.\\n    function setPhase(bytes32 storageSlot, uint256 phase) internal {\\n        StorageSlot.Uint256Slot storage currentVersion = StorageSlot.getUint256Slot(storageSlot);\\n        uint256 currentPhase = currentVersion.value;\\n        if (currentPhase >= phase) revert InitializationPhaseAlreadyReached(currentPhase, phase);\\n        currentVersion.value = phase;\\n    }\\n}\\n\",\"keccak256\":\"0x5bf72b121964b5122b12048165c8f6ef84cf2232015c52632539548c261f6e7d\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC721 Non-Fungible Token Standard, optional extension: Mintable.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n/// @dev Note: The ERC-165 identifier for this interface is 0x8e773e13.\\ninterface IERC721Mintable {\\n    /// @notice Unsafely mints a token.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if `tokenId` already exists.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address.\\n    /// @param to Address of the new token owner.\\n    /// @param tokenId Identifier of the token to mint.\\n    function mint(address to, uint256 tokenId) external;\\n\\n    /// @notice Safely mints a token.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if `tokenId` already exists.\\n    /// @dev Reverts if `to` is a contract and the call to {IERC721Receiver-onERC721Received} fails, reverts or is rejected.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address.\\n    /// @param to Address of the new token owner.\\n    /// @param tokenId Identifier of the token to mint.\\n    /// @param data Optional data to pass along to the receiver call.\\n    function safeMint(address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /// @notice Unsafely mints a batch of tokens.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if one of `tokenIds` already exists.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address for each of `tokenIds`.\\n    /// @param to Address of the new tokens owner.\\n    /// @param tokenIds Identifiers of the tokens to mint.\\n    function batchMint(address to, uint256[] calldata tokenIds) external;\\n}\\n\",\"keccak256\":\"0x4636f14283fd145c15f085e968fd274df5b808738da83bc46ce98b360dec7dfb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/base/ERC721MinterBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {IERC721Minter} from \\\"../interfaces/IERC721Minter.sol\\\";\\nimport {ERC721MinterStorage} from \\\"../libraries/ERC721MinterStorage.sol\\\";\\n\\n/// @title ERC721 Minter contract for minting ERC721 tokens with a maximum token ID limit.\\n/// @dev This contract is to be used via inheritance in a proxied implementation.\\n/// @dev Note: This contract requires ERC165 (Interface Detection Standard).\\nabstract contract ERC721MinterBase is IERC721Minter {\\n    using ERC721MinterStorage for ERC721MinterStorage.Layout;\\n\\n    /// @inheritdoc IERC721Minter\\n    function mint(address to) public virtual {\\n        ERC721MinterStorage.layout().mint(to);\\n    }\\n\\n    /// @inheritdoc IERC721Minter\\n    function currentTokenId() public view returns (uint256 tokenId) {\\n        return ERC721MinterStorage.layout().currentId();\\n    }\\n\\n    /// @inheritdoc IERC721Minter\\n    function maxTokenId() public view returns (uint256 tokenId) {\\n        return ERC721MinterStorage.layout().maxId();\\n    }\\n}\\n\",\"keccak256\":\"0x37eb1e23835153a1cb01f2cbc9adeadb2cec50c272c28762c03265076acd2b4b\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/errors/ERC721MinterErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Thrown when the token ID is zero.\\nerror ERC721MinterZeroMaxTokenId();\\n\\n/// @notice Thrown when the token address is zero.\\nerror ERC721MinterZeroTokenAddress();\\n\\n/// @notice Thrown when the token contract interface id does not supported.\\nerror ERC721MinterUnsupportedContractType(address tokenContract);\\n\\n/// @notice Thrown when the maximum token ID is exceeded.\\nerror ERC721MinterMaxTokenIdExceeded();\\n\",\"keccak256\":\"0x7626262f30f77f2d08fb90b9cd9e66689523fc1b6bb0f70da706949e4bf026c3\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/interfaces/IERC721Minter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC721 Minter interface for minting ERC721 tokens.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x4f859546.\\ninterface IERC721Minter {\\n    /// @notice Returns the current token ID.\\n    /// @return tokenId The current token ID.\\n    function currentTokenId() external view returns (uint256 tokenId);\\n\\n    /// @notice Returns the maximum token ID.\\n    /// @return tokenId The maximum token ID.\\n    function maxTokenId() external view returns (uint256 tokenId);\\n\\n    /// @notice Mints a token to the specified address.\\n    /// @param to The address to receive the token.\\n    function mint(address to) external;\\n}\\n\",\"keccak256\":\"0x5e903fc517cd0e8429fad955249edaf4d9e25a47c530872b0ab0ab1e505cc21b\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/libraries/ERC721MinterStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n// solhint-disable-next-line max-line-length\\nimport {ERC721MinterZeroMaxTokenId, ERC721MinterUnsupportedContractType, ERC721MinterMaxTokenIdExceeded, ERC721MinterZeroTokenAddress} from \\\"../errors/ERC721MinterErrors.sol\\\";\\nimport {InterfaceDetectionStorage} from \\\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\\\";\\nimport {IERC165} from \\\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\\\";\\nimport {IERC721Mintable} from \\\"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\\\";\\nimport {ProxyInitialization} from \\\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\\\";\\nimport {IERC721Minter} from \\\"../interfaces/IERC721Minter.sol\\\";\\n\\nlibrary ERC721MinterStorage {\\n    using ERC721MinterStorage for ERC721MinterStorage.Layout;\\n    using InterfaceDetectionStorage for InterfaceDetectionStorage.Layout;\\n\\n    struct Layout {\\n        uint256 currentTokenId;\\n        uint256 maxTokenId;\\n        IERC721Mintable token;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"yura2100.token.ERC721.ERC721Minter.storage\\\")) - 1);\\n    bytes32 internal constant PROXY_INIT_PHASE_SLOT = bytes32(uint256(keccak256(\\\"yura2100.token.ERC721.ERC721Minter.phase\\\")) - 1);\\n\\n    /// @notice Initializes the storage with the maximum token ID and the ERC721 token contract.\\n    /// @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\\n    /// @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\\n    /// @dev Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.\\n    /// @dev Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.\\n    /// @dev Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.\\n    /// @param maxTokenId The maximum token ID that can be minted.\\n    /// @param token The ERC721 token contract.\\n    function constructorInit(Layout storage s, uint256 maxTokenId, IERC721Mintable token) internal {\\n        if (maxTokenId == 0) {\\n            revert ERC721MinterZeroMaxTokenId();\\n        }\\n        if (address(token) == address(0)) {\\n            revert ERC721MinterZeroTokenAddress();\\n        }\\n\\n        if (!IERC165(address(token)).supportsInterface(type(IERC721Mintable).interfaceId)) {\\n            revert ERC721MinterUnsupportedContractType(address(token));\\n        }\\n        s.maxTokenId = maxTokenId;\\n        s.token = token;\\n        InterfaceDetectionStorage.layout().setSupportedInterface(type(IERC721Minter).interfaceId, true);\\n    }\\n\\n    /// @notice Initializes the storage with the maximum token ID and the ERC721 token contract.\\n    /// @notice Sets the proxy initialization phase to `1`.\\n    /// @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\\n    /// @dev Note: This function should be called ONLY in the init function of a proxied contract.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\\n    /// @param maxTokenId The maximum token ID that can be minted.\\n    /// @param token The ERC721 token contract.\\n    function proxyInit(Layout storage s, uint256 maxTokenId, IERC721Mintable token) internal {\\n        ProxyInitialization.setPhase(PROXY_INIT_PHASE_SLOT, 1);\\n        s.constructorInit(maxTokenId, token);\\n    }\\n\\n    /// @notice Mints a token to the specified address.\\n    /// @dev Reverts with {ERC721MinterMaxTokenIdExceeded} if the current token ID exceeds the maximum token ID.\\n    /// @param to The address to which the token will be minted.\\n    function mint(Layout storage s, address to) internal {\\n        uint256 nextId = s.currentTokenId + 1;\\n        if (nextId > s.maxTokenId) {\\n            revert ERC721MinterMaxTokenIdExceeded();\\n        }\\n        s.token.mint(to, nextId);\\n        s.currentTokenId = nextId;\\n    }\\n\\n    /// @notice Returns the current token ID.\\n    /// @return tokenId The current token ID.\\n    function currentId(Layout storage s) internal view returns (uint256 tokenId) {\\n        return s.currentTokenId;\\n    }\\n\\n    /// @notice Returns the maximum token ID.\\n    /// @return tokenId The maximum token ID.\\n    function maxId(Layout storage s) internal view returns (uint256 tokenId) {\\n        return s.maxTokenId;\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xeda0d8eac4ba8aa3ffd62fda5e840b18150a880f8d54b2bcc7f97589f62ff54e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"errors":{"ERC721MinterMaxTokenIdExceeded()":[{"notice":"Thrown when the maximum token ID is exceeded."}]},"kind":"user","methods":{"currentTokenId()":{"notice":"Returns the current token ID."},"maxTokenId()":{"notice":"Returns the maximum token ID."},"mint(address)":{"notice":"Mints a token to the specified address."}},"version":1}}},"contracts/lib/minter/ERC721/facets/ERC721MinterFacet.sol":{"ERC721MinterFacet":{"abi":[{"inputs":[{"internalType":"contract IForwarderRegistry","name":"forwarderRegistry","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ERC721MinterMaxTokenIdExceeded","type":"error"},{"inputs":[{"internalType":"address","name":"tokenContract","type":"address"}],"name":"ERC721MinterUnsupportedContractType","type":"error"},{"inputs":[],"name":"ERC721MinterZeroMaxTokenId","type":"error"},{"inputs":[],"name":"ERC721MinterZeroTokenAddress","type":"error"},{"inputs":[],"name":"IllegalInterfaceId","type":"error"},{"inputs":[{"internalType":"uint256","name":"currentPhase","type":"uint256"},{"internalType":"uint256","name":"newPhase","type":"uint256"}],"name":"InitializationPhaseAlreadyReached","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"NotProxyAdmin","type":"error"},{"inputs":[],"name":"currentTokenId","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"maxTokenId","type":"uint256"},{"internalType":"contract IERC721Mintable","name":"token","type":"address"}],"name":"initERC721MinterStorage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"maxTokenId","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This contract is to be used as a diamond facet (see ERC2535 Diamond Standard https://eips.ethereum.org/EIPS/eip-2535).Note: This facet depends on {ProxyAdminFacet} and {InterfaceDetectionFacet}.","errors":{"InitializationPhaseAlreadyReached(uint256,uint256)":[{"params":{"currentPhase":"The current phase.","newPhase":"The new phase trying to be set."}}],"NotProxyAdmin(address)":[{"params":{"account":"The account that was checked."}}]},"kind":"dev","methods":{"currentTokenId()":{"returns":{"tokenId":"The current token ID."}},"initERC721MinterStorage(uint256,address)":{"details":"Reverts with {NotProxyAdmin} if the sender is not the proxy admin.Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.","params":{"maxTokenId":"The maximum token ID that can be minted.","token":"The ERC721 token contract."}},"maxTokenId()":{"returns":{"tokenId":"The maximum token ID."}},"mint(address)":{"params":{"to":"The address to receive the token."}}},"title":"ERC721 Minter (facet version).","version":1},"evm":{"bytecode":{"functionDebugData":{"@_168":{"entryPoint":null,"id":168,"parameterSlots":1,"returnSlots":0},"@_858":{"entryPoint":null,"id":858,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_contract$_IForwarderRegistry_$281_fromMemory":{"entryPoint":64,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:332:20","nodeType":"YulBlock","src":"0:332:20","statements":[{"nativeSrc":"6:3:20","nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nativeSrc":"121:209:20","nodeType":"YulBlock","src":"121:209:20","statements":[{"body":{"nativeSrc":"167:16:20","nodeType":"YulBlock","src":"167:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"176:1:20","nodeType":"YulLiteral","src":"176:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"179:1:20","nodeType":"YulLiteral","src":"179:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"169:6:20","nodeType":"YulIdentifier","src":"169:6:20"},"nativeSrc":"169:12:20","nodeType":"YulFunctionCall","src":"169:12:20"},"nativeSrc":"169:12:20","nodeType":"YulExpressionStatement","src":"169:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"142:7:20","nodeType":"YulIdentifier","src":"142:7:20"},{"name":"headStart","nativeSrc":"151:9:20","nodeType":"YulIdentifier","src":"151:9:20"}],"functionName":{"name":"sub","nativeSrc":"138:3:20","nodeType":"YulIdentifier","src":"138:3:20"},"nativeSrc":"138:23:20","nodeType":"YulFunctionCall","src":"138:23:20"},{"kind":"number","nativeSrc":"163:2:20","nodeType":"YulLiteral","src":"163:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"134:3:20","nodeType":"YulIdentifier","src":"134:3:20"},"nativeSrc":"134:32:20","nodeType":"YulFunctionCall","src":"134:32:20"},"nativeSrc":"131:52:20","nodeType":"YulIf","src":"131:52:20"},{"nativeSrc":"192:29:20","nodeType":"YulVariableDeclaration","src":"192:29:20","value":{"arguments":[{"name":"headStart","nativeSrc":"211:9:20","nodeType":"YulIdentifier","src":"211:9:20"}],"functionName":{"name":"mload","nativeSrc":"205:5:20","nodeType":"YulIdentifier","src":"205:5:20"},"nativeSrc":"205:16:20","nodeType":"YulFunctionCall","src":"205:16:20"},"variables":[{"name":"value","nativeSrc":"196:5:20","nodeType":"YulTypedName","src":"196:5:20","type":""}]},{"body":{"nativeSrc":"284:16:20","nodeType":"YulBlock","src":"284:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"293:1:20","nodeType":"YulLiteral","src":"293:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"296:1:20","nodeType":"YulLiteral","src":"296:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"286:6:20","nodeType":"YulIdentifier","src":"286:6:20"},"nativeSrc":"286:12:20","nodeType":"YulFunctionCall","src":"286:12:20"},"nativeSrc":"286:12:20","nodeType":"YulExpressionStatement","src":"286:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"243:5:20","nodeType":"YulIdentifier","src":"243:5:20"},{"arguments":[{"name":"value","nativeSrc":"254:5:20","nodeType":"YulIdentifier","src":"254:5:20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"269:3:20","nodeType":"YulLiteral","src":"269:3:20","type":"","value":"160"},{"kind":"number","nativeSrc":"274:1:20","nodeType":"YulLiteral","src":"274:1:20","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"265:3:20","nodeType":"YulIdentifier","src":"265:3:20"},"nativeSrc":"265:11:20","nodeType":"YulFunctionCall","src":"265:11:20"},{"kind":"number","nativeSrc":"278:1:20","nodeType":"YulLiteral","src":"278:1:20","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"261:3:20","nodeType":"YulIdentifier","src":"261:3:20"},"nativeSrc":"261:19:20","nodeType":"YulFunctionCall","src":"261:19:20"}],"functionName":{"name":"and","nativeSrc":"250:3:20","nodeType":"YulIdentifier","src":"250:3:20"},"nativeSrc":"250:31:20","nodeType":"YulFunctionCall","src":"250:31:20"}],"functionName":{"name":"eq","nativeSrc":"240:2:20","nodeType":"YulIdentifier","src":"240:2:20"},"nativeSrc":"240:42:20","nodeType":"YulFunctionCall","src":"240:42:20"}],"functionName":{"name":"iszero","nativeSrc":"233:6:20","nodeType":"YulIdentifier","src":"233:6:20"},"nativeSrc":"233:50:20","nodeType":"YulFunctionCall","src":"233:50:20"},"nativeSrc":"230:70:20","nodeType":"YulIf","src":"230:70:20"},{"nativeSrc":"309:15:20","nodeType":"YulAssignment","src":"309:15:20","value":{"name":"value","nativeSrc":"319:5:20","nodeType":"YulIdentifier","src":"319:5:20"},"variableNames":[{"name":"value0","nativeSrc":"309:6:20","nodeType":"YulIdentifier","src":"309:6:20"}]}]},"name":"abi_decode_tuple_t_contract$_IForwarderRegistry_$281_fromMemory","nativeSrc":"14:316:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"87:9:20","nodeType":"YulTypedName","src":"87:9:20","type":""},{"name":"dataEnd","nativeSrc":"98:7:20","nodeType":"YulTypedName","src":"98:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"110:6:20","nodeType":"YulTypedName","src":"110:6:20","type":""}],"src":"14:316:20"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_IForwarderRegistry_$281_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5060405161095838038061095883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516108c661009260003960008181610181015261020901526108c66000f3fe608060405234801561001057600080fd5b506004361061004b5760003560e01c80629a9b7b1461005057806352fca9c01461006a5780636a6278421461007f57806391ba317a14610092575b600080fd5b61005861009a565b60405190815260200160405180910390f35b61007d6100783660046107c5565b6100b0565b005b61007d61008d3660046107f5565b6100e1565b6100586100f6565b60006100ab6100a761010a565b5490565b905090565b6100c96100bb61013e565b6100c3610285565b906102b3565b6100dd82826100d661010a565b9190610323565b5050565b6100f3816100ed61010a565b90610368565b50565b60006100ab61010361010a565b6001015490565b60008061013860017f693bcdae20ebbf8c20ad73778252483eb64f50287e6e826c8678109643b49176610848565b92915050565b60003332148061014e5750601836105b1561015857503390565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633148061027457506040517f8929a8ca00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301523360248301527f00000000000000000000000000000000000000000000000000000000000000001690638929a8ca90604401602060405180830381865afa158015610250573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610274919061085b565b1561027e57919050565b3391505090565b60008061013860017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104610848565b815473ffffffffffffffffffffffffffffffffffffffff8281169116146100dd576040517f673a31a100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024015b60405180910390fd5b61035861035160017f45d439c902da5ba33f98e10a3a9e80a454ed74a1b14c49a6e476fcd1db4ddd6c610848565b600161044b565b610363838383610497565b505050565b815460009061037890600161087d565b905082600101548111156103b8576040517f4594a70000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028301546040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b15801561042e57600080fd5b505af1158015610442573d6000803e3d6000fd5b50505092555050565b81548290828110610492576040517fbf0c18ec000000000000000000000000000000000000000000000000000000008152600481018290526024810184905260440161031a565b505550565b816000036104d1576040517fc14cb6f500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811661051e576040517f9e7ef70800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f8e773e1300000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8216906301ffc9a790602401602060405180830381865afa1580156105a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cc919061085b565b61061a576040517fdbca5b3800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240161031a565b60018381018390556002840180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416179055610363907ffb42d2430000000000000000000000000000000000000000000000000000000090610692610699565b91906106c7565b60008061013860017fca9d3e17f264b0f3984e2634e94adb37fa3e6a8103f06aeae6fa59e21c769f5e610848565b7c01000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083160161073f576040517f72c683bb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffff00000000000000000000000000000000000000000000000000000000919091166000908152602092909252604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b73ffffffffffffffffffffffffffffffffffffffff811681146100f357600080fd5b600080604083850312156107d857600080fd5b8235915060208301356107ea816107a3565b809150509250929050565b60006020828403121561080757600080fd5b8135610812816107a3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561013857610138610819565b60006020828403121561086d57600080fd5b8151801515811461081257600080fd5b808201808211156101385761013861081956fea264697066735822122081b040df5d5267727deb4ee7162e337cc8875d2228acfb0e37801b91fb4cb6d564736f6c63430008180033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x958 CODESIZE SUB DUP1 PUSH2 0x958 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x8C6 PUSH2 0x92 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x181 ADD MSTORE PUSH2 0x209 ADD MSTORE PUSH2 0x8C6 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x9A9B7B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x52FCA9C0 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x91BA317A EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x58 PUSH2 0x9A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D PUSH2 0x78 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH2 0x8D CALLDATASIZE PUSH1 0x4 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0xE1 JUMP JUMPDEST PUSH2 0x58 PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB PUSH2 0xA7 PUSH2 0x10A JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xBB PUSH2 0x13E JUMP JUMPDEST PUSH2 0xC3 PUSH2 0x285 JUMP JUMPDEST SWAP1 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0xDD DUP3 DUP3 PUSH2 0xD6 PUSH2 0x10A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x323 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF3 DUP2 PUSH2 0xED PUSH2 0x10A JUMP JUMPDEST SWAP1 PUSH2 0x368 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB PUSH2 0x103 PUSH2 0x10A JUMP JUMPDEST PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x138 PUSH1 0x1 PUSH32 0x693BCDAE20EBBF8C20AD73778252483EB64F50287E6E826C8678109643B49176 PUSH2 0x848 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER ORIGIN EQ DUP1 PUSH2 0x14E JUMPI POP PUSH1 0x18 CALLDATASIZE LT JUMPDEST ISZERO PUSH2 0x158 JUMPI POP CALLER SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC CALLDATASIZE ADD CALLDATALOAD PUSH1 0x60 SHR PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x274 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0x8929A8CA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x8929A8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x250 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST ISZERO PUSH2 0x27E JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST CALLER SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x138 PUSH1 0x1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6104 PUSH2 0x848 JUMP JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0xDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x673A31A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x358 PUSH2 0x351 PUSH1 0x1 PUSH32 0x45D439C902DA5BA33F98E10A3A9E80A454ED74A1B14C49A6E476FCD1DB4DDD6C PUSH2 0x848 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x44B JUMP JUMPDEST PUSH2 0x363 DUP4 DUP4 DUP4 PUSH2 0x497 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x378 SWAP1 PUSH1 0x1 PUSH2 0x87D JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4594A70000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x442 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP SWAP3 SSTORE POP POP JUMP JUMPDEST DUP2 SLOAD DUP3 SWAP1 DUP3 DUP2 LT PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBF0C18EC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x31A JUMP JUMPDEST POP SSTORE POP JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC14CB6F500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x51E JUMPI PUSH1 0x40 MLOAD PUSH32 0x9E7EF70800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x8E773E1300000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0xDBCA5B3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31A JUMP JUMPDEST PUSH1 0x1 DUP4 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP5 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH2 0x363 SWAP1 PUSH32 0xFB42D24300000000000000000000000000000000000000000000000000000000 SWAP1 PUSH2 0x692 PUSH2 0x699 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x138 PUSH1 0x1 PUSH32 0xCA9D3E17F264B0F3984E2634E94ADB37FA3E6A8103F06AEAE6FA59E21C769F5E PUSH2 0x848 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH32 0x72C683BB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x7EA DUP2 PUSH2 0x7A3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x812 DUP2 PUSH2 0x7A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x138 JUMPI PUSH2 0x138 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x138 JUMPI PUSH2 0x138 PUSH2 0x819 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xB0 BLOCKHASH 0xDF TSTORE MSTORE PUSH8 0x727DEB4EE7162E33 PUSH29 0xC8875D2228ACFB0E37801B91FB4CB6D564736F6C634300081800330000 ","sourceMap":"922:1399:17:-:0;;;1126:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;622:39:4;;;922:1399:17;;14:316:20;110:6;163:2;151:9;142:7;138:23;134:32;131:52;;;179:1;176;169:12;131:52;205:16;;-1:-1:-1;;;;;250:31:20;;240:42;;230:70;;296:1;293;286:12;230:70;319:5;14:316;-1:-1:-1;;;14:316:20:o;:::-;922:1399:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_msgSender_218":{"entryPoint":318,"id":218,"parameterSlots":0,"returnSlots":1},"@constructorInit_1049":{"entryPoint":1175,"id":1049,"parameterSlots":3,"returnSlots":0},"@currentId_1130":{"entryPoint":null,"id":1130,"parameterSlots":1,"returnSlots":1},"@currentTokenId_791":{"entryPoint":154,"id":791,"parameterSlots":0,"returnSlots":1},"@enforceIsProxyAdmin_510":{"entryPoint":691,"id":510,"parameterSlots":2,"returnSlots":0},"@getUint256Slot_666":{"entryPoint":null,"id":666,"parameterSlots":1,"returnSlots":1},"@initERC721MinterStorage_886":{"entryPoint":176,"id":886,"parameterSlots":2,"returnSlots":0},"@layout_1155":{"entryPoint":266,"id":1155,"parameterSlots":0,"returnSlots":1},"@layout_146":{"entryPoint":1689,"id":146,"parameterSlots":0,"returnSlots":1},"@layout_522":{"entryPoint":645,"id":522,"parameterSlots":0,"returnSlots":1},"@maxId_1143":{"entryPoint":null,"id":1143,"parameterSlots":1,"returnSlots":1},"@maxTokenId_804":{"entryPoint":246,"id":804,"parameterSlots":0,"returnSlots":1},"@mint_1117":{"entryPoint":872,"id":1117,"parameterSlots":2,"returnSlots":0},"@mint_778":{"entryPoint":225,"id":778,"parameterSlots":1,"returnSlots":0},"@msgSender_292":{"entryPoint":null,"id":292,"parameterSlots":0,"returnSlots":1},"@proxyInit_1076":{"entryPoint":803,"id":1076,"parameterSlots":3,"returnSlots":0},"@setPhase_569":{"entryPoint":1099,"id":569,"parameterSlots":2,"returnSlots":0},"@setSupportedInterface_100":{"entryPoint":1735,"id":100,"parameterSlots":3,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":2037,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":2139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_contract$_IERC721Mintable_$601":{"entryPoint":1989,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2173,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2120,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2073,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_contract_IERC721Mintable":{"entryPoint":1955,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3103:20","nodeType":"YulBlock","src":"0:3103:20","statements":[{"nativeSrc":"6:3:20","nodeType":"YulBlock","src":"6:3:20","statements":[]},{"body":{"nativeSrc":"115:76:20","nodeType":"YulBlock","src":"115:76:20","statements":[{"nativeSrc":"125:26:20","nodeType":"YulAssignment","src":"125:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"137:9:20","nodeType":"YulIdentifier","src":"137:9:20"},{"kind":"number","nativeSrc":"148:2:20","nodeType":"YulLiteral","src":"148:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"133:3:20","nodeType":"YulIdentifier","src":"133:3:20"},"nativeSrc":"133:18:20","nodeType":"YulFunctionCall","src":"133:18:20"},"variableNames":[{"name":"tail","nativeSrc":"125:4:20","nodeType":"YulIdentifier","src":"125:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"167:9:20","nodeType":"YulIdentifier","src":"167:9:20"},{"name":"value0","nativeSrc":"178:6:20","nodeType":"YulIdentifier","src":"178:6:20"}],"functionName":{"name":"mstore","nativeSrc":"160:6:20","nodeType":"YulIdentifier","src":"160:6:20"},"nativeSrc":"160:25:20","nodeType":"YulFunctionCall","src":"160:25:20"},"nativeSrc":"160:25:20","nodeType":"YulExpressionStatement","src":"160:25:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"14:177:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"84:9:20","nodeType":"YulTypedName","src":"84:9:20","type":""},{"name":"value0","nativeSrc":"95:6:20","nodeType":"YulTypedName","src":"95:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"106:4:20","nodeType":"YulTypedName","src":"106:4:20","type":""}],"src":"14:177:20"},{"body":{"nativeSrc":"258:109:20","nodeType":"YulBlock","src":"258:109:20","statements":[{"body":{"nativeSrc":"345:16:20","nodeType":"YulBlock","src":"345:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"354:1:20","nodeType":"YulLiteral","src":"354:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"357:1:20","nodeType":"YulLiteral","src":"357:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"347:6:20","nodeType":"YulIdentifier","src":"347:6:20"},"nativeSrc":"347:12:20","nodeType":"YulFunctionCall","src":"347:12:20"},"nativeSrc":"347:12:20","nodeType":"YulExpressionStatement","src":"347:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"281:5:20","nodeType":"YulIdentifier","src":"281:5:20"},{"arguments":[{"name":"value","nativeSrc":"292:5:20","nodeType":"YulIdentifier","src":"292:5:20"},{"kind":"number","nativeSrc":"299:42:20","nodeType":"YulLiteral","src":"299:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"288:3:20","nodeType":"YulIdentifier","src":"288:3:20"},"nativeSrc":"288:54:20","nodeType":"YulFunctionCall","src":"288:54:20"}],"functionName":{"name":"eq","nativeSrc":"278:2:20","nodeType":"YulIdentifier","src":"278:2:20"},"nativeSrc":"278:65:20","nodeType":"YulFunctionCall","src":"278:65:20"}],"functionName":{"name":"iszero","nativeSrc":"271:6:20","nodeType":"YulIdentifier","src":"271:6:20"},"nativeSrc":"271:73:20","nodeType":"YulFunctionCall","src":"271:73:20"},"nativeSrc":"268:93:20","nodeType":"YulIf","src":"268:93:20"}]},"name":"validator_revert_contract_IERC721Mintable","nativeSrc":"196:171:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"247:5:20","nodeType":"YulTypedName","src":"247:5:20","type":""}],"src":"196:171:20"},{"body":{"nativeSrc":"482:245:20","nodeType":"YulBlock","src":"482:245:20","statements":[{"body":{"nativeSrc":"528:16:20","nodeType":"YulBlock","src":"528:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"537:1:20","nodeType":"YulLiteral","src":"537:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"540:1:20","nodeType":"YulLiteral","src":"540:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"530:6:20","nodeType":"YulIdentifier","src":"530:6:20"},"nativeSrc":"530:12:20","nodeType":"YulFunctionCall","src":"530:12:20"},"nativeSrc":"530:12:20","nodeType":"YulExpressionStatement","src":"530:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"503:7:20","nodeType":"YulIdentifier","src":"503:7:20"},{"name":"headStart","nativeSrc":"512:9:20","nodeType":"YulIdentifier","src":"512:9:20"}],"functionName":{"name":"sub","nativeSrc":"499:3:20","nodeType":"YulIdentifier","src":"499:3:20"},"nativeSrc":"499:23:20","nodeType":"YulFunctionCall","src":"499:23:20"},{"kind":"number","nativeSrc":"524:2:20","nodeType":"YulLiteral","src":"524:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"495:3:20","nodeType":"YulIdentifier","src":"495:3:20"},"nativeSrc":"495:32:20","nodeType":"YulFunctionCall","src":"495:32:20"},"nativeSrc":"492:52:20","nodeType":"YulIf","src":"492:52:20"},{"nativeSrc":"553:33:20","nodeType":"YulAssignment","src":"553:33:20","value":{"arguments":[{"name":"headStart","nativeSrc":"576:9:20","nodeType":"YulIdentifier","src":"576:9:20"}],"functionName":{"name":"calldataload","nativeSrc":"563:12:20","nodeType":"YulIdentifier","src":"563:12:20"},"nativeSrc":"563:23:20","nodeType":"YulFunctionCall","src":"563:23:20"},"variableNames":[{"name":"value0","nativeSrc":"553:6:20","nodeType":"YulIdentifier","src":"553:6:20"}]},{"nativeSrc":"595:45:20","nodeType":"YulVariableDeclaration","src":"595:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"625:9:20","nodeType":"YulIdentifier","src":"625:9:20"},{"kind":"number","nativeSrc":"636:2:20","nodeType":"YulLiteral","src":"636:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"621:3:20","nodeType":"YulIdentifier","src":"621:3:20"},"nativeSrc":"621:18:20","nodeType":"YulFunctionCall","src":"621:18:20"}],"functionName":{"name":"calldataload","nativeSrc":"608:12:20","nodeType":"YulIdentifier","src":"608:12:20"},"nativeSrc":"608:32:20","nodeType":"YulFunctionCall","src":"608:32:20"},"variables":[{"name":"value","nativeSrc":"599:5:20","nodeType":"YulTypedName","src":"599:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"691:5:20","nodeType":"YulIdentifier","src":"691:5:20"}],"functionName":{"name":"validator_revert_contract_IERC721Mintable","nativeSrc":"649:41:20","nodeType":"YulIdentifier","src":"649:41:20"},"nativeSrc":"649:48:20","nodeType":"YulFunctionCall","src":"649:48:20"},"nativeSrc":"649:48:20","nodeType":"YulExpressionStatement","src":"649:48:20"},{"nativeSrc":"706:15:20","nodeType":"YulAssignment","src":"706:15:20","value":{"name":"value","nativeSrc":"716:5:20","nodeType":"YulIdentifier","src":"716:5:20"},"variableNames":[{"name":"value1","nativeSrc":"706:6:20","nodeType":"YulIdentifier","src":"706:6:20"}]}]},"name":"abi_decode_tuple_t_uint256t_contract$_IERC721Mintable_$601","nativeSrc":"372:355:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"440:9:20","nodeType":"YulTypedName","src":"440:9:20","type":""},{"name":"dataEnd","nativeSrc":"451:7:20","nodeType":"YulTypedName","src":"451:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"463:6:20","nodeType":"YulTypedName","src":"463:6:20","type":""},{"name":"value1","nativeSrc":"471:6:20","nodeType":"YulTypedName","src":"471:6:20","type":""}],"src":"372:355:20"},{"body":{"nativeSrc":"802:194:20","nodeType":"YulBlock","src":"802:194:20","statements":[{"body":{"nativeSrc":"848:16:20","nodeType":"YulBlock","src":"848:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"857:1:20","nodeType":"YulLiteral","src":"857:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"860:1:20","nodeType":"YulLiteral","src":"860:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"850:6:20","nodeType":"YulIdentifier","src":"850:6:20"},"nativeSrc":"850:12:20","nodeType":"YulFunctionCall","src":"850:12:20"},"nativeSrc":"850:12:20","nodeType":"YulExpressionStatement","src":"850:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"823:7:20","nodeType":"YulIdentifier","src":"823:7:20"},{"name":"headStart","nativeSrc":"832:9:20","nodeType":"YulIdentifier","src":"832:9:20"}],"functionName":{"name":"sub","nativeSrc":"819:3:20","nodeType":"YulIdentifier","src":"819:3:20"},"nativeSrc":"819:23:20","nodeType":"YulFunctionCall","src":"819:23:20"},{"kind":"number","nativeSrc":"844:2:20","nodeType":"YulLiteral","src":"844:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"815:3:20","nodeType":"YulIdentifier","src":"815:3:20"},"nativeSrc":"815:32:20","nodeType":"YulFunctionCall","src":"815:32:20"},"nativeSrc":"812:52:20","nodeType":"YulIf","src":"812:52:20"},{"nativeSrc":"873:36:20","nodeType":"YulVariableDeclaration","src":"873:36:20","value":{"arguments":[{"name":"headStart","nativeSrc":"899:9:20","nodeType":"YulIdentifier","src":"899:9:20"}],"functionName":{"name":"calldataload","nativeSrc":"886:12:20","nodeType":"YulIdentifier","src":"886:12:20"},"nativeSrc":"886:23:20","nodeType":"YulFunctionCall","src":"886:23:20"},"variables":[{"name":"value","nativeSrc":"877:5:20","nodeType":"YulTypedName","src":"877:5:20","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"960:5:20","nodeType":"YulIdentifier","src":"960:5:20"}],"functionName":{"name":"validator_revert_contract_IERC721Mintable","nativeSrc":"918:41:20","nodeType":"YulIdentifier","src":"918:41:20"},"nativeSrc":"918:48:20","nodeType":"YulFunctionCall","src":"918:48:20"},"nativeSrc":"918:48:20","nodeType":"YulExpressionStatement","src":"918:48:20"},{"nativeSrc":"975:15:20","nodeType":"YulAssignment","src":"975:15:20","value":{"name":"value","nativeSrc":"985:5:20","nodeType":"YulIdentifier","src":"985:5:20"},"variableNames":[{"name":"value0","nativeSrc":"975:6:20","nodeType":"YulIdentifier","src":"975:6:20"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"732:264:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"768:9:20","nodeType":"YulTypedName","src":"768:9:20","type":""},{"name":"dataEnd","nativeSrc":"779:7:20","nodeType":"YulTypedName","src":"779:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"791:6:20","nodeType":"YulTypedName","src":"791:6:20","type":""}],"src":"732:264:20"},{"body":{"nativeSrc":"1033:152:20","nodeType":"YulBlock","src":"1033:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1050:1:20","nodeType":"YulLiteral","src":"1050:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1053:77:20","nodeType":"YulLiteral","src":"1053:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1043:6:20","nodeType":"YulIdentifier","src":"1043:6:20"},"nativeSrc":"1043:88:20","nodeType":"YulFunctionCall","src":"1043:88:20"},"nativeSrc":"1043:88:20","nodeType":"YulExpressionStatement","src":"1043:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1147:1:20","nodeType":"YulLiteral","src":"1147:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"1150:4:20","nodeType":"YulLiteral","src":"1150:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"1140:6:20","nodeType":"YulIdentifier","src":"1140:6:20"},"nativeSrc":"1140:15:20","nodeType":"YulFunctionCall","src":"1140:15:20"},"nativeSrc":"1140:15:20","nodeType":"YulExpressionStatement","src":"1140:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1171:1:20","nodeType":"YulLiteral","src":"1171:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1174:4:20","nodeType":"YulLiteral","src":"1174:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1164:6:20","nodeType":"YulIdentifier","src":"1164:6:20"},"nativeSrc":"1164:15:20","nodeType":"YulFunctionCall","src":"1164:15:20"},"nativeSrc":"1164:15:20","nodeType":"YulExpressionStatement","src":"1164:15:20"}]},"name":"panic_error_0x11","nativeSrc":"1001:184:20","nodeType":"YulFunctionDefinition","src":"1001:184:20"},{"body":{"nativeSrc":"1239:79:20","nodeType":"YulBlock","src":"1239:79:20","statements":[{"nativeSrc":"1249:17:20","nodeType":"YulAssignment","src":"1249:17:20","value":{"arguments":[{"name":"x","nativeSrc":"1261:1:20","nodeType":"YulIdentifier","src":"1261:1:20"},{"name":"y","nativeSrc":"1264:1:20","nodeType":"YulIdentifier","src":"1264:1:20"}],"functionName":{"name":"sub","nativeSrc":"1257:3:20","nodeType":"YulIdentifier","src":"1257:3:20"},"nativeSrc":"1257:9:20","nodeType":"YulFunctionCall","src":"1257:9:20"},"variableNames":[{"name":"diff","nativeSrc":"1249:4:20","nodeType":"YulIdentifier","src":"1249:4:20"}]},{"body":{"nativeSrc":"1290:22:20","nodeType":"YulBlock","src":"1290:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"1292:16:20","nodeType":"YulIdentifier","src":"1292:16:20"},"nativeSrc":"1292:18:20","nodeType":"YulFunctionCall","src":"1292:18:20"},"nativeSrc":"1292:18:20","nodeType":"YulExpressionStatement","src":"1292:18:20"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"1281:4:20","nodeType":"YulIdentifier","src":"1281:4:20"},{"name":"x","nativeSrc":"1287:1:20","nodeType":"YulIdentifier","src":"1287:1:20"}],"functionName":{"name":"gt","nativeSrc":"1278:2:20","nodeType":"YulIdentifier","src":"1278:2:20"},"nativeSrc":"1278:11:20","nodeType":"YulFunctionCall","src":"1278:11:20"},"nativeSrc":"1275:37:20","nodeType":"YulIf","src":"1275:37:20"}]},"name":"checked_sub_t_uint256","nativeSrc":"1190:128:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"1221:1:20","nodeType":"YulTypedName","src":"1221:1:20","type":""},{"name":"y","nativeSrc":"1224:1:20","nodeType":"YulTypedName","src":"1224:1:20","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"1230:4:20","nodeType":"YulTypedName","src":"1230:4:20","type":""}],"src":"1190:128:20"},{"body":{"nativeSrc":"1452:198:20","nodeType":"YulBlock","src":"1452:198:20","statements":[{"nativeSrc":"1462:26:20","nodeType":"YulAssignment","src":"1462:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"1474:9:20","nodeType":"YulIdentifier","src":"1474:9:20"},{"kind":"number","nativeSrc":"1485:2:20","nodeType":"YulLiteral","src":"1485:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1470:3:20","nodeType":"YulIdentifier","src":"1470:3:20"},"nativeSrc":"1470:18:20","nodeType":"YulFunctionCall","src":"1470:18:20"},"variableNames":[{"name":"tail","nativeSrc":"1462:4:20","nodeType":"YulIdentifier","src":"1462:4:20"}]},{"nativeSrc":"1497:52:20","nodeType":"YulVariableDeclaration","src":"1497:52:20","value":{"kind":"number","nativeSrc":"1507:42:20","nodeType":"YulLiteral","src":"1507:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"1501:2:20","nodeType":"YulTypedName","src":"1501:2:20","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1565:9:20","nodeType":"YulIdentifier","src":"1565:9:20"},{"arguments":[{"name":"value0","nativeSrc":"1580:6:20","nodeType":"YulIdentifier","src":"1580:6:20"},{"name":"_1","nativeSrc":"1588:2:20","nodeType":"YulIdentifier","src":"1588:2:20"}],"functionName":{"name":"and","nativeSrc":"1576:3:20","nodeType":"YulIdentifier","src":"1576:3:20"},"nativeSrc":"1576:15:20","nodeType":"YulFunctionCall","src":"1576:15:20"}],"functionName":{"name":"mstore","nativeSrc":"1558:6:20","nodeType":"YulIdentifier","src":"1558:6:20"},"nativeSrc":"1558:34:20","nodeType":"YulFunctionCall","src":"1558:34:20"},"nativeSrc":"1558:34:20","nodeType":"YulExpressionStatement","src":"1558:34:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1612:9:20","nodeType":"YulIdentifier","src":"1612:9:20"},{"kind":"number","nativeSrc":"1623:2:20","nodeType":"YulLiteral","src":"1623:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1608:3:20","nodeType":"YulIdentifier","src":"1608:3:20"},"nativeSrc":"1608:18:20","nodeType":"YulFunctionCall","src":"1608:18:20"},{"arguments":[{"name":"value1","nativeSrc":"1632:6:20","nodeType":"YulIdentifier","src":"1632:6:20"},{"name":"_1","nativeSrc":"1640:2:20","nodeType":"YulIdentifier","src":"1640:2:20"}],"functionName":{"name":"and","nativeSrc":"1628:3:20","nodeType":"YulIdentifier","src":"1628:3:20"},"nativeSrc":"1628:15:20","nodeType":"YulFunctionCall","src":"1628:15:20"}],"functionName":{"name":"mstore","nativeSrc":"1601:6:20","nodeType":"YulIdentifier","src":"1601:6:20"},"nativeSrc":"1601:43:20","nodeType":"YulFunctionCall","src":"1601:43:20"},"nativeSrc":"1601:43:20","nodeType":"YulExpressionStatement","src":"1601:43:20"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"1323:327:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1413:9:20","nodeType":"YulTypedName","src":"1413:9:20","type":""},{"name":"value1","nativeSrc":"1424:6:20","nodeType":"YulTypedName","src":"1424:6:20","type":""},{"name":"value0","nativeSrc":"1432:6:20","nodeType":"YulTypedName","src":"1432:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1443:4:20","nodeType":"YulTypedName","src":"1443:4:20","type":""}],"src":"1323:327:20"},{"body":{"nativeSrc":"1733:199:20","nodeType":"YulBlock","src":"1733:199:20","statements":[{"body":{"nativeSrc":"1779:16:20","nodeType":"YulBlock","src":"1779:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1788:1:20","nodeType":"YulLiteral","src":"1788:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1791:1:20","nodeType":"YulLiteral","src":"1791:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1781:6:20","nodeType":"YulIdentifier","src":"1781:6:20"},"nativeSrc":"1781:12:20","nodeType":"YulFunctionCall","src":"1781:12:20"},"nativeSrc":"1781:12:20","nodeType":"YulExpressionStatement","src":"1781:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1754:7:20","nodeType":"YulIdentifier","src":"1754:7:20"},{"name":"headStart","nativeSrc":"1763:9:20","nodeType":"YulIdentifier","src":"1763:9:20"}],"functionName":{"name":"sub","nativeSrc":"1750:3:20","nodeType":"YulIdentifier","src":"1750:3:20"},"nativeSrc":"1750:23:20","nodeType":"YulFunctionCall","src":"1750:23:20"},{"kind":"number","nativeSrc":"1775:2:20","nodeType":"YulLiteral","src":"1775:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1746:3:20","nodeType":"YulIdentifier","src":"1746:3:20"},"nativeSrc":"1746:32:20","nodeType":"YulFunctionCall","src":"1746:32:20"},"nativeSrc":"1743:52:20","nodeType":"YulIf","src":"1743:52:20"},{"nativeSrc":"1804:29:20","nodeType":"YulVariableDeclaration","src":"1804:29:20","value":{"arguments":[{"name":"headStart","nativeSrc":"1823:9:20","nodeType":"YulIdentifier","src":"1823:9:20"}],"functionName":{"name":"mload","nativeSrc":"1817:5:20","nodeType":"YulIdentifier","src":"1817:5:20"},"nativeSrc":"1817:16:20","nodeType":"YulFunctionCall","src":"1817:16:20"},"variables":[{"name":"value","nativeSrc":"1808:5:20","nodeType":"YulTypedName","src":"1808:5:20","type":""}]},{"body":{"nativeSrc":"1886:16:20","nodeType":"YulBlock","src":"1886:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1895:1:20","nodeType":"YulLiteral","src":"1895:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1898:1:20","nodeType":"YulLiteral","src":"1898:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1888:6:20","nodeType":"YulIdentifier","src":"1888:6:20"},"nativeSrc":"1888:12:20","nodeType":"YulFunctionCall","src":"1888:12:20"},"nativeSrc":"1888:12:20","nodeType":"YulExpressionStatement","src":"1888:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1855:5:20","nodeType":"YulIdentifier","src":"1855:5:20"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1876:5:20","nodeType":"YulIdentifier","src":"1876:5:20"}],"functionName":{"name":"iszero","nativeSrc":"1869:6:20","nodeType":"YulIdentifier","src":"1869:6:20"},"nativeSrc":"1869:13:20","nodeType":"YulFunctionCall","src":"1869:13:20"}],"functionName":{"name":"iszero","nativeSrc":"1862:6:20","nodeType":"YulIdentifier","src":"1862:6:20"},"nativeSrc":"1862:21:20","nodeType":"YulFunctionCall","src":"1862:21:20"}],"functionName":{"name":"eq","nativeSrc":"1852:2:20","nodeType":"YulIdentifier","src":"1852:2:20"},"nativeSrc":"1852:32:20","nodeType":"YulFunctionCall","src":"1852:32:20"}],"functionName":{"name":"iszero","nativeSrc":"1845:6:20","nodeType":"YulIdentifier","src":"1845:6:20"},"nativeSrc":"1845:40:20","nodeType":"YulFunctionCall","src":"1845:40:20"},"nativeSrc":"1842:60:20","nodeType":"YulIf","src":"1842:60:20"},{"nativeSrc":"1911:15:20","nodeType":"YulAssignment","src":"1911:15:20","value":{"name":"value","nativeSrc":"1921:5:20","nodeType":"YulIdentifier","src":"1921:5:20"},"variableNames":[{"name":"value0","nativeSrc":"1911:6:20","nodeType":"YulIdentifier","src":"1911:6:20"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"1655:277:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1699:9:20","nodeType":"YulTypedName","src":"1699:9:20","type":""},{"name":"dataEnd","nativeSrc":"1710:7:20","nodeType":"YulTypedName","src":"1710:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1722:6:20","nodeType":"YulTypedName","src":"1722:6:20","type":""}],"src":"1655:277:20"},{"body":{"nativeSrc":"2038:125:20","nodeType":"YulBlock","src":"2038:125:20","statements":[{"nativeSrc":"2048:26:20","nodeType":"YulAssignment","src":"2048:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2060:9:20","nodeType":"YulIdentifier","src":"2060:9:20"},{"kind":"number","nativeSrc":"2071:2:20","nodeType":"YulLiteral","src":"2071:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2056:3:20","nodeType":"YulIdentifier","src":"2056:3:20"},"nativeSrc":"2056:18:20","nodeType":"YulFunctionCall","src":"2056:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2048:4:20","nodeType":"YulIdentifier","src":"2048:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2090:9:20","nodeType":"YulIdentifier","src":"2090:9:20"},{"arguments":[{"name":"value0","nativeSrc":"2105:6:20","nodeType":"YulIdentifier","src":"2105:6:20"},{"kind":"number","nativeSrc":"2113:42:20","nodeType":"YulLiteral","src":"2113:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2101:3:20","nodeType":"YulIdentifier","src":"2101:3:20"},"nativeSrc":"2101:55:20","nodeType":"YulFunctionCall","src":"2101:55:20"}],"functionName":{"name":"mstore","nativeSrc":"2083:6:20","nodeType":"YulIdentifier","src":"2083:6:20"},"nativeSrc":"2083:74:20","nodeType":"YulFunctionCall","src":"2083:74:20"},"nativeSrc":"2083:74:20","nodeType":"YulExpressionStatement","src":"2083:74:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1937:226:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2007:9:20","nodeType":"YulTypedName","src":"2007:9:20","type":""},{"name":"value0","nativeSrc":"2018:6:20","nodeType":"YulTypedName","src":"2018:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2029:4:20","nodeType":"YulTypedName","src":"2029:4:20","type":""}],"src":"1937:226:20"},{"body":{"nativeSrc":"2216:77:20","nodeType":"YulBlock","src":"2216:77:20","statements":[{"nativeSrc":"2226:16:20","nodeType":"YulAssignment","src":"2226:16:20","value":{"arguments":[{"name":"x","nativeSrc":"2237:1:20","nodeType":"YulIdentifier","src":"2237:1:20"},{"name":"y","nativeSrc":"2240:1:20","nodeType":"YulIdentifier","src":"2240:1:20"}],"functionName":{"name":"add","nativeSrc":"2233:3:20","nodeType":"YulIdentifier","src":"2233:3:20"},"nativeSrc":"2233:9:20","nodeType":"YulFunctionCall","src":"2233:9:20"},"variableNames":[{"name":"sum","nativeSrc":"2226:3:20","nodeType":"YulIdentifier","src":"2226:3:20"}]},{"body":{"nativeSrc":"2265:22:20","nodeType":"YulBlock","src":"2265:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"2267:16:20","nodeType":"YulIdentifier","src":"2267:16:20"},"nativeSrc":"2267:18:20","nodeType":"YulFunctionCall","src":"2267:18:20"},"nativeSrc":"2267:18:20","nodeType":"YulExpressionStatement","src":"2267:18:20"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"2257:1:20","nodeType":"YulIdentifier","src":"2257:1:20"},{"name":"sum","nativeSrc":"2260:3:20","nodeType":"YulIdentifier","src":"2260:3:20"}],"functionName":{"name":"gt","nativeSrc":"2254:2:20","nodeType":"YulIdentifier","src":"2254:2:20"},"nativeSrc":"2254:10:20","nodeType":"YulFunctionCall","src":"2254:10:20"},"nativeSrc":"2251:36:20","nodeType":"YulIf","src":"2251:36:20"}]},"name":"checked_add_t_uint256","nativeSrc":"2168:125:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"2199:1:20","nodeType":"YulTypedName","src":"2199:1:20","type":""},{"name":"y","nativeSrc":"2202:1:20","nodeType":"YulTypedName","src":"2202:1:20","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"2208:3:20","nodeType":"YulTypedName","src":"2208:3:20","type":""}],"src":"2168:125:20"},{"body":{"nativeSrc":"2427:168:20","nodeType":"YulBlock","src":"2427:168:20","statements":[{"nativeSrc":"2437:26:20","nodeType":"YulAssignment","src":"2437:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2449:9:20","nodeType":"YulIdentifier","src":"2449:9:20"},{"kind":"number","nativeSrc":"2460:2:20","nodeType":"YulLiteral","src":"2460:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2445:3:20","nodeType":"YulIdentifier","src":"2445:3:20"},"nativeSrc":"2445:18:20","nodeType":"YulFunctionCall","src":"2445:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2437:4:20","nodeType":"YulIdentifier","src":"2437:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2479:9:20","nodeType":"YulIdentifier","src":"2479:9:20"},{"arguments":[{"name":"value0","nativeSrc":"2494:6:20","nodeType":"YulIdentifier","src":"2494:6:20"},{"kind":"number","nativeSrc":"2502:42:20","nodeType":"YulLiteral","src":"2502:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2490:3:20","nodeType":"YulIdentifier","src":"2490:3:20"},"nativeSrc":"2490:55:20","nodeType":"YulFunctionCall","src":"2490:55:20"}],"functionName":{"name":"mstore","nativeSrc":"2472:6:20","nodeType":"YulIdentifier","src":"2472:6:20"},"nativeSrc":"2472:74:20","nodeType":"YulFunctionCall","src":"2472:74:20"},"nativeSrc":"2472:74:20","nodeType":"YulExpressionStatement","src":"2472:74:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2566:9:20","nodeType":"YulIdentifier","src":"2566:9:20"},{"kind":"number","nativeSrc":"2577:2:20","nodeType":"YulLiteral","src":"2577:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2562:3:20","nodeType":"YulIdentifier","src":"2562:3:20"},"nativeSrc":"2562:18:20","nodeType":"YulFunctionCall","src":"2562:18:20"},{"name":"value1","nativeSrc":"2582:6:20","nodeType":"YulIdentifier","src":"2582:6:20"}],"functionName":{"name":"mstore","nativeSrc":"2555:6:20","nodeType":"YulIdentifier","src":"2555:6:20"},"nativeSrc":"2555:34:20","nodeType":"YulFunctionCall","src":"2555:34:20"},"nativeSrc":"2555:34:20","nodeType":"YulExpressionStatement","src":"2555:34:20"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"2298:297:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2388:9:20","nodeType":"YulTypedName","src":"2388:9:20","type":""},{"name":"value1","nativeSrc":"2399:6:20","nodeType":"YulTypedName","src":"2399:6:20","type":""},{"name":"value0","nativeSrc":"2407:6:20","nodeType":"YulTypedName","src":"2407:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2418:4:20","nodeType":"YulTypedName","src":"2418:4:20","type":""}],"src":"2298:297:20"},{"body":{"nativeSrc":"2729:119:20","nodeType":"YulBlock","src":"2729:119:20","statements":[{"nativeSrc":"2739:26:20","nodeType":"YulAssignment","src":"2739:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2751:9:20","nodeType":"YulIdentifier","src":"2751:9:20"},{"kind":"number","nativeSrc":"2762:2:20","nodeType":"YulLiteral","src":"2762:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2747:3:20","nodeType":"YulIdentifier","src":"2747:3:20"},"nativeSrc":"2747:18:20","nodeType":"YulFunctionCall","src":"2747:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2739:4:20","nodeType":"YulIdentifier","src":"2739:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2781:9:20","nodeType":"YulIdentifier","src":"2781:9:20"},{"name":"value0","nativeSrc":"2792:6:20","nodeType":"YulIdentifier","src":"2792:6:20"}],"functionName":{"name":"mstore","nativeSrc":"2774:6:20","nodeType":"YulIdentifier","src":"2774:6:20"},"nativeSrc":"2774:25:20","nodeType":"YulFunctionCall","src":"2774:25:20"},"nativeSrc":"2774:25:20","nodeType":"YulExpressionStatement","src":"2774:25:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2819:9:20","nodeType":"YulIdentifier","src":"2819:9:20"},{"kind":"number","nativeSrc":"2830:2:20","nodeType":"YulLiteral","src":"2830:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2815:3:20","nodeType":"YulIdentifier","src":"2815:3:20"},"nativeSrc":"2815:18:20","nodeType":"YulFunctionCall","src":"2815:18:20"},{"name":"value1","nativeSrc":"2835:6:20","nodeType":"YulIdentifier","src":"2835:6:20"}],"functionName":{"name":"mstore","nativeSrc":"2808:6:20","nodeType":"YulIdentifier","src":"2808:6:20"},"nativeSrc":"2808:34:20","nodeType":"YulFunctionCall","src":"2808:34:20"},"nativeSrc":"2808:34:20","nodeType":"YulExpressionStatement","src":"2808:34:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"2600:248:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2690:9:20","nodeType":"YulTypedName","src":"2690:9:20","type":""},{"name":"value1","nativeSrc":"2701:6:20","nodeType":"YulTypedName","src":"2701:6:20","type":""},{"name":"value0","nativeSrc":"2709:6:20","nodeType":"YulTypedName","src":"2709:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2720:4:20","nodeType":"YulTypedName","src":"2720:4:20","type":""}],"src":"2600:248:20"},{"body":{"nativeSrc":"2952:149:20","nodeType":"YulBlock","src":"2952:149:20","statements":[{"nativeSrc":"2962:26:20","nodeType":"YulAssignment","src":"2962:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2974:9:20","nodeType":"YulIdentifier","src":"2974:9:20"},{"kind":"number","nativeSrc":"2985:2:20","nodeType":"YulLiteral","src":"2985:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2970:3:20","nodeType":"YulIdentifier","src":"2970:3:20"},"nativeSrc":"2970:18:20","nodeType":"YulFunctionCall","src":"2970:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2962:4:20","nodeType":"YulIdentifier","src":"2962:4:20"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3004:9:20","nodeType":"YulIdentifier","src":"3004:9:20"},{"arguments":[{"name":"value0","nativeSrc":"3019:6:20","nodeType":"YulIdentifier","src":"3019:6:20"},{"kind":"number","nativeSrc":"3027:66:20","nodeType":"YulLiteral","src":"3027:66:20","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"3015:3:20","nodeType":"YulIdentifier","src":"3015:3:20"},"nativeSrc":"3015:79:20","nodeType":"YulFunctionCall","src":"3015:79:20"}],"functionName":{"name":"mstore","nativeSrc":"2997:6:20","nodeType":"YulIdentifier","src":"2997:6:20"},"nativeSrc":"2997:98:20","nodeType":"YulFunctionCall","src":"2997:98:20"},"nativeSrc":"2997:98:20","nodeType":"YulExpressionStatement","src":"2997:98:20"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nativeSrc":"2853:248:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2921:9:20","nodeType":"YulTypedName","src":"2921:9:20","type":""},{"name":"value0","nativeSrc":"2932:6:20","nodeType":"YulTypedName","src":"2932:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2943:4:20","nodeType":"YulTypedName","src":"2943:4:20","type":""}],"src":"2853:248:20"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_contract_IERC721Mintable(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_contract$_IERC721Mintable_$601(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_contract_IERC721Mintable(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC721Mintable(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n}","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"157":[{"length":32,"start":385},{"length":32,"start":521}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061004b5760003560e01c80629a9b7b1461005057806352fca9c01461006a5780636a6278421461007f57806391ba317a14610092575b600080fd5b61005861009a565b60405190815260200160405180910390f35b61007d6100783660046107c5565b6100b0565b005b61007d61008d3660046107f5565b6100e1565b6100586100f6565b60006100ab6100a761010a565b5490565b905090565b6100c96100bb61013e565b6100c3610285565b906102b3565b6100dd82826100d661010a565b9190610323565b5050565b6100f3816100ed61010a565b90610368565b50565b60006100ab61010361010a565b6001015490565b60008061013860017f693bcdae20ebbf8c20ad73778252483eb64f50287e6e826c8678109643b49176610848565b92915050565b60003332148061014e5750601836105b1561015857503390565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1633148061027457506040517f8929a8ca00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301523360248301527f00000000000000000000000000000000000000000000000000000000000000001690638929a8ca90604401602060405180830381865afa158015610250573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610274919061085b565b1561027e57919050565b3391505090565b60008061013860017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104610848565b815473ffffffffffffffffffffffffffffffffffffffff8281169116146100dd576040517f673a31a100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024015b60405180910390fd5b61035861035160017f45d439c902da5ba33f98e10a3a9e80a454ed74a1b14c49a6e476fcd1db4ddd6c610848565b600161044b565b610363838383610497565b505050565b815460009061037890600161087d565b905082600101548111156103b8576040517f4594a70000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028301546040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b15801561042e57600080fd5b505af1158015610442573d6000803e3d6000fd5b50505092555050565b81548290828110610492576040517fbf0c18ec000000000000000000000000000000000000000000000000000000008152600481018290526024810184905260440161031a565b505550565b816000036104d1576040517fc14cb6f500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811661051e576040517f9e7ef70800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527f8e773e1300000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8216906301ffc9a790602401602060405180830381865afa1580156105a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cc919061085b565b61061a576040517fdbca5b3800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240161031a565b60018381018390556002840180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416179055610363907ffb42d2430000000000000000000000000000000000000000000000000000000090610692610699565b91906106c7565b60008061013860017fca9d3e17f264b0f3984e2634e94adb37fa3e6a8103f06aeae6fa59e21c769f5e610848565b7c01000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083160161073f576040517f72c683bb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fffffffff00000000000000000000000000000000000000000000000000000000919091166000908152602092909252604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b73ffffffffffffffffffffffffffffffffffffffff811681146100f357600080fd5b600080604083850312156107d857600080fd5b8235915060208301356107ea816107a3565b809150509250929050565b60006020828403121561080757600080fd5b8135610812816107a3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561013857610138610819565b60006020828403121561086d57600080fd5b8151801515811461081257600080fd5b808201808211156101385761013861081956fea264697066735822122081b040df5d5267727deb4ee7162e337cc8875d2228acfb0e37801b91fb4cb6d564736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x9A9B7B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x52FCA9C0 EQ PUSH2 0x6A JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x91BA317A EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x58 PUSH2 0x9A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D PUSH2 0x78 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0xB0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH2 0x8D CALLDATASIZE PUSH1 0x4 PUSH2 0x7F5 JUMP JUMPDEST PUSH2 0xE1 JUMP JUMPDEST PUSH2 0x58 PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB PUSH2 0xA7 PUSH2 0x10A JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xBB PUSH2 0x13E JUMP JUMPDEST PUSH2 0xC3 PUSH2 0x285 JUMP JUMPDEST SWAP1 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0xDD DUP3 DUP3 PUSH2 0xD6 PUSH2 0x10A JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x323 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xF3 DUP2 PUSH2 0xED PUSH2 0x10A JUMP JUMPDEST SWAP1 PUSH2 0x368 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB PUSH2 0x103 PUSH2 0x10A JUMP JUMPDEST PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x138 PUSH1 0x1 PUSH32 0x693BCDAE20EBBF8C20AD73778252483EB64F50287E6E826C8678109643B49176 PUSH2 0x848 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER ORIGIN EQ DUP1 PUSH2 0x14E JUMPI POP PUSH1 0x18 CALLDATASIZE LT JUMPDEST ISZERO PUSH2 0x158 JUMPI POP CALLER SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEC CALLDATASIZE ADD CALLDATALOAD PUSH1 0x60 SHR PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ DUP1 PUSH2 0x274 JUMPI POP PUSH1 0x40 MLOAD PUSH32 0x8929A8CA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x8929A8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x250 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST ISZERO PUSH2 0x27E JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST CALLER SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x138 PUSH1 0x1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6104 PUSH2 0x848 JUMP JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND SWAP2 AND EQ PUSH2 0xDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x673A31A100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x358 PUSH2 0x351 PUSH1 0x1 PUSH32 0x45D439C902DA5BA33F98E10A3A9E80A454ED74A1B14C49A6E476FCD1DB4DDD6C PUSH2 0x848 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x44B JUMP JUMPDEST PUSH2 0x363 DUP4 DUP4 DUP4 PUSH2 0x497 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x378 SWAP1 PUSH1 0x1 PUSH2 0x87D JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4594A70000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x442 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP SWAP3 SSTORE POP POP JUMP JUMPDEST DUP2 SLOAD DUP3 SWAP1 DUP3 DUP2 LT PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBF0C18EC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x31A JUMP JUMPDEST POP SSTORE POP JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC14CB6F500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x51E JUMPI PUSH1 0x40 MLOAD PUSH32 0x9E7EF70800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0x8E773E1300000000000000000000000000000000000000000000000000000000 PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH32 0xDBCA5B3800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x31A JUMP JUMPDEST PUSH1 0x1 DUP4 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 DUP5 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH2 0x363 SWAP1 PUSH32 0xFB42D24300000000000000000000000000000000000000000000000000000000 SWAP1 PUSH2 0x692 PUSH2 0x699 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x6C7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x138 PUSH1 0x1 PUSH32 0xCA9D3E17F264B0F3984E2634E94ADB37FA3E6A8103F06AEAE6FA59E21C769F5E PUSH2 0x848 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH32 0x72C683BB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x7EA DUP2 PUSH2 0x7A3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x807 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x812 DUP2 PUSH2 0x7A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x138 JUMPI PUSH2 0x138 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x812 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x138 JUMPI PUSH2 0x138 PUSH2 0x819 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xB0 BLOCKHASH 0xDF TSTORE MSTORE PUSH8 0x727DEB4EE7162E33 PUSH29 0xC8875D2228ACFB0E37801B91FB4CB6D564736F6C634300081800330000 ","sourceMap":"922:1399:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;736:128:15;;;:::i;:::-;;;160:25:20;;;148:2;133:18;736:128:15;;;;;;;2090:229:17;;;;;;:::i;:::-;;:::i;:::-;;601:95:15;;;;;;:::i;:::-;;:::i;904:120::-;;;:::i;736:128::-;783:15;817:40;:28;:26;:28::i;:::-;4203:16:19;;4109:117;817:40:15;810:47;;736:128;:::o;2090:229:17:-;2185:60;2232:12;:10;:12::i;:::-;2185:26;:24;:26::i;:::-;:46;;:60::i;:::-;2255:57;2294:10;2306:5;2255:28;:26;:28::i;:::-;:38;:57;:38;:57::i;:::-;2090:229;;:::o;601:95:15:-;652:37;686:2;652:28;:26;:28::i;:::-;:33;;:37::i;:::-;601:95;:::o;904:120::-;947:15;981:36;:28;:26;:28::i;:::-;4414:12:19;;;;4324:109;4439:174;4480:16;;1153:68;1220:1;1161:55;1153:68;:::i;:::-;1145:77;4439:174;-1:-1:-1;;4439:174:19:o;784:745:4:-;837:7;1047:10;1061:9;1047:23;;:47;;-1:-1:-1;1092:2:4;1074:8;:20;1047:47;1043:95;;;-1:-1:-1;1117:10:4;;784:745::o;1043:95::-;462:23:6;466:14;462:23;449:37;445:2;441:46;1372:19:4;1350:42;;:10;:42;;:105;;-1:-1:-1;1396:59:4;;;;;:39;1576:15:20;;;1396:59:4;;;1558:34:20;1444:10:4;1608:18:20;;;1601:43;1396:19:4;:39;;;;1470:18:20;;1396:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1346:149;;;1478:6;784:745;-1:-1:-1;784:745:4:o;1346:149::-;1512:10;1505:17;;;784:745;:::o;3236:174:10:-;3277:16;;592:45;636:1;600:32;592:45;:::i;3082:148::-;3185:7;;;3174:18;;;3185:7;;3174:18;3170:53;;3201:22;;;;;2113:42:20;2101:55;;3201:22:10;;;2083:74:20;2056:18;;3201:22:10;;;;;;;;3289:206:19;3388:54;1286:66;1351:1;1294:53;1286:66;:::i;:::-;3440:1;3388:28;:54::i;:::-;3452:36;:1;3470:10;3482:5;3452:17;:36::i;:::-;3289:206;;;:::o;3735:276::-;3815:16;;3798:14;;3815:20;;3834:1;3815:20;:::i;:::-;3798:37;;3858:1;:12;;;3849:6;:21;3845:91;;;3893:32;;;;;;;;;;;;;;3845:91;3945:7;;;;:24;;;;;:7;2490:55:20;;;3945:24:19;;;2472:74:20;2562:18;;;2555:34;;;3945:7:19;;;;:12;;2445:18:20;;3945:24:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3979:25:19;;-1:-1:-1;;3735:276:19:o;672:357:11:-;866:20;;821:11;;900:21;;;896:88;;930:54;;;;;;;;2774:25:20;;;2815:18;;;2808:34;;;2747:18;;930:54:11;2600:248:20;896:88:11;-1:-1:-1;994:28:11;-1:-1:-1;672:357:11:o;2072:638:19:-;2181:10;2195:1;2181:15;2177:81;;2219:28;;;;;;;;;;;;;;2177:81;2271:28;;;2267:96;;2322:30;;;;;;;;;;;;;;2267:96;2378:76;;;;;2420:33;2378:76;;;2997:98:20;2378:41:19;;;;;;2970:18:20;;2378:76:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2373:166;;2477:51;;;;;2113:42:20;2101:55;;2477:51:19;;;2083:74:20;2056:18;;2477:51:19;1937:226:20;2373:166:19;2548:12;;;;:25;;;2583:7;;;:15;;;;;;;;;;2608:95;;2665:31;;2608:34;:32;:34::i;:::-;:56;:95;:56;:95::i;1705:174:3:-;1746:16;;365:79;443:1;373:66;365:79;:::i;773:235::-;881:35;896:20;881:35;;;877:68;;925:20;;;;;;;;;;;;;;877:68;955:34;;;;;:21;:34;;;;;;;;;;;;:46;;;;;;;;;;;;;773:235::o;196:171:20:-;299:42;292:5;288:54;281:5;278:65;268:93;;357:1;354;347:12;372:355;463:6;471;524:2;512:9;503:7;499:23;495:32;492:52;;;540:1;537;530:12;492:52;576:9;563:23;553:33;;636:2;625:9;621:18;608:32;649:48;691:5;649:48;:::i;:::-;716:5;706:15;;;372:355;;;;;:::o;732:264::-;791:6;844:2;832:9;823:7;819:23;815:32;812:52;;;860:1;857;850:12;812:52;899:9;886:23;918:48;960:5;918:48;:::i;:::-;985:5;732:264;-1:-1:-1;;;732:264:20:o;1001:184::-;1053:77;1050:1;1043:88;1150:4;1147:1;1140:15;1174:4;1171:1;1164:15;1190:128;1257:9;;;1278:11;;;1275:37;;;1292:18;;:::i;1655:277::-;1722:6;1775:2;1763:9;1754:7;1750:23;1746:32;1743:52;;;1791:1;1788;1781:12;1743:52;1823:9;1817:16;1876:5;1869:13;1862:21;1855:5;1852:32;1842:60;;1898:1;1895;1888:12;2168:125;2233:9;;;2254:10;;;2251:36;;;2267:18;;:::i"},"gasEstimates":{"creation":{"codeDepositCost":"449200","executionCost":"infinite","totalCost":"infinite"},"external":{"currentTokenId()":"infinite","initERC721MinterStorage(uint256,address)":"infinite","maxTokenId()":"infinite","mint(address)":"infinite"}},"methodIdentifiers":{"currentTokenId()":"009a9b7b","initERC721MinterStorage(uint256,address)":"52fca9c0","maxTokenId()":"91ba317a","mint(address)":"6a627842"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IForwarderRegistry\",\"name\":\"forwarderRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC721MinterMaxTokenIdExceeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"ERC721MinterUnsupportedContractType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721MinterZeroMaxTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721MinterZeroTokenAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IllegalInterfaceId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentPhase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPhase\",\"type\":\"uint256\"}],\"name\":\"InitializationPhaseAlreadyReached\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"NotProxyAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"currentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxTokenId\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC721Mintable\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"initERC721MinterStorage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is to be used as a diamond facet (see ERC2535 Diamond Standard https://eips.ethereum.org/EIPS/eip-2535).Note: This facet depends on {ProxyAdminFacet} and {InterfaceDetectionFacet}.\",\"errors\":{\"InitializationPhaseAlreadyReached(uint256,uint256)\":[{\"params\":{\"currentPhase\":\"The current phase.\",\"newPhase\":\"The new phase trying to be set.\"}}],\"NotProxyAdmin(address)\":[{\"params\":{\"account\":\"The account that was checked.\"}}]},\"kind\":\"dev\",\"methods\":{\"currentTokenId()\":{\"returns\":{\"tokenId\":\"The current token ID.\"}},\"initERC721MinterStorage(uint256,address)\":{\"details\":\"Reverts with {NotProxyAdmin} if the sender is not the proxy admin.Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.\",\"params\":{\"maxTokenId\":\"The maximum token ID that can be minted.\",\"token\":\"The ERC721 token contract.\"}},\"maxTokenId()\":{\"returns\":{\"tokenId\":\"The maximum token ID.\"}},\"mint(address)\":{\"params\":{\"to\":\"The address to receive the token.\"}}},\"title\":\"ERC721 Minter (facet version).\",\"version\":1},\"userdoc\":{\"errors\":{\"ERC721MinterMaxTokenIdExceeded()\":[{\"notice\":\"Thrown when the maximum token ID is exceeded.\"}],\"ERC721MinterUnsupportedContractType(address)\":[{\"notice\":\"Thrown when the token contract interface id does not supported.\"}],\"ERC721MinterZeroMaxTokenId()\":[{\"notice\":\"Thrown when the token ID is zero.\"}],\"ERC721MinterZeroTokenAddress()\":[{\"notice\":\"Thrown when the token address is zero.\"}],\"IllegalInterfaceId()\":[{\"notice\":\"Thrown when setting the illegal interfaceId 0xffffffff.\"}],\"InitializationPhaseAlreadyReached(uint256,uint256)\":[{\"notice\":\"Emitted when trying to set a phase value that has already been reached.\"}],\"NotProxyAdmin(address)\":[{\"notice\":\"Thrown when an account is not the proxy admin but is required to.\"}]},\"kind\":\"user\",\"methods\":{\"currentTokenId()\":{\"notice\":\"Returns the current token ID.\"},\"initERC721MinterStorage(uint256,address)\":{\"notice\":\"Initializes the storage with the maximum token ID and the ERC721 token contract.Sets the proxy initialization phase to `1`.Marks the following ERC165 interfaces as supported: ERC721Minter.\"},\"maxTokenId()\":{\"notice\":\"Returns the maximum token ID.\"},\"mint(address)\":{\"notice\":\"Mints a token to the specified address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/minter/ERC721/facets/ERC721MinterFacet.sol\":\"ERC721MinterFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Thrown when setting the illegal interfaceId 0xffffffff.\\nerror IllegalInterfaceId();\\n\",\"keccak256\":\"0xfc30a58bec3f7c1dd1c1b4604d668082c7c01696bb9cbf181a7812e9d0d318d5\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC165 Interface Detection Standard.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\\ninterface IERC165 {\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId the interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\\n}\\n\",\"keccak256\":\"0x569c0a59305d5e0eb9ea3ef6b9376f4771895caca1db902ca6397fa085ab82b4\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {IllegalInterfaceId} from \\\"./../errors/InterfaceDetectionErrors.sol\\\";\\nimport {IERC165} from \\\"./../interfaces/IERC165.sol\\\";\\n\\nlibrary InterfaceDetectionStorage {\\n    struct Layout {\\n        mapping(bytes4 => bool) supportedInterfaces;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.introspection.InterfaceDetection.storage\\\")) - 1);\\n\\n    bytes4 internal constant ILLEGAL_INTERFACE_ID = 0xffffffff;\\n\\n    /// @notice Sets or unsets an ERC165 interface.\\n    /// @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\\n    /// @param interfaceId the interface identifier.\\n    /// @param supported True to set the interface, false to unset it.\\n    function setSupportedInterface(Layout storage s, bytes4 interfaceId, bool supported) internal {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) revert IllegalInterfaceId();\\n        s.supportedInterfaces[interfaceId] = supported;\\n    }\\n\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId The interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(Layout storage s, bytes4 interfaceId) internal view returns (bool supported) {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) {\\n            return false;\\n        }\\n        if (interfaceId == type(IERC165).interfaceId) {\\n            return true;\\n        }\\n        return s.supportedInterfaces[interfaceId];\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x87944ecb71a120095067c66e9ab703ea25460e83f1f39ba0f9bd49a3481ad4dc\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/metatx/base/ForwarderRegistryContextBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {IForwarderRegistry} from \\\"./../interfaces/IForwarderRegistry.sol\\\";\\nimport {ERC2771Calldata} from \\\"./../libraries/ERC2771Calldata.sol\\\";\\n\\n/// @title Meta-Transactions Forwarder Registry Context (proxiable version).\\n/// @dev This contract is to be used via inheritance in a proxied implementation.\\n/// @dev Derived from https://github.com/wighawag/universal-forwarder (MIT licence)\\nabstract contract ForwarderRegistryContextBase {\\n    IForwarderRegistry internal immutable _FORWARDER_REGISTRY;\\n\\n    constructor(IForwarderRegistry forwarderRegistry) {\\n        _FORWARDER_REGISTRY = forwarderRegistry;\\n    }\\n\\n    /// @notice Returns the message sender depending on the ForwarderRegistry-based meta-transaction context.\\n    function _msgSender() internal view virtual returns (address) {\\n        // Optimised path in case of an EOA-initiated direct tx to the contract or a call from a contract not complying with EIP-2771\\n        // solhint-disable-next-line avoid-tx-origin\\n        if (msg.sender == tx.origin || msg.data.length < 24) {\\n            return msg.sender;\\n        }\\n\\n        address sender = ERC2771Calldata.msgSender();\\n\\n        // Return the EIP-2771 calldata-appended sender address if the message was forwarded by the ForwarderRegistry or an approved forwarder\\n        if (msg.sender == address(_FORWARDER_REGISTRY) || _FORWARDER_REGISTRY.isApprovedForwarder(sender, msg.sender)) {\\n            return sender;\\n        }\\n\\n        return msg.sender;\\n    }\\n\\n    /// @notice Returns the message data depending on the ForwarderRegistry-based meta-transaction context.\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        // Optimised path in case of an EOA-initiated direct tx to the contract or a call from a contract not complying with EIP-2771\\n        // solhint-disable-next-line avoid-tx-origin\\n        if (msg.sender == tx.origin || msg.data.length < 24) {\\n            return msg.data;\\n        }\\n\\n        // Return the EIP-2771 calldata (minus the appended sender) if the message was forwarded by the ForwarderRegistry or an approved forwarder\\n        if (msg.sender == address(_FORWARDER_REGISTRY) || _FORWARDER_REGISTRY.isApprovedForwarder(ERC2771Calldata.msgSender(), msg.sender)) {\\n            return ERC2771Calldata.msgData();\\n        }\\n\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xd327167f42244c5d99d0ffbcefcb5883ea15cbfb0aa268d6f265bc6aadc19297\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/metatx/interfaces/IForwarderRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title Universal Meta-Transactions Forwarder Registry.\\n/// @dev Derived from https://github.com/wighawag/universal-forwarder (MIT licence)\\ninterface IForwarderRegistry {\\n    /// @notice Checks whether an account is as an approved meta-transaction forwarder for a sender account.\\n    /// @param sender The sender account.\\n    /// @param forwarder The forwarder account.\\n    /// @return isApproved True if `forwarder` is an approved meta-transaction forwarder for `sender`, false otherwise.\\n    function isApprovedForwarder(address sender, address forwarder) external view returns (bool isApproved);\\n}\\n\",\"keccak256\":\"0x9b4a8105af5713c207f7c2c94b24d88f33e5dcf49d03f356cc7c794ae67147d4\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/metatx/libraries/ERC2771Calldata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @dev Derived from https://github.com/OpenZeppelin/openzeppelin-contracts (MIT licence)\\n/// @dev See https://eips.ethereum.org/EIPS/eip-2771\\nlibrary ERC2771Calldata {\\n    /// @notice Returns the sender address appended at the end of the calldata, as specified in EIP-2771.\\n    function msgSender() internal pure returns (address sender) {\\n        assembly {\\n            sender := shr(96, calldataload(sub(calldatasize(), 20)))\\n        }\\n    }\\n\\n    /// @notice Returns the calldata while omitting the appended sender address, as specified in EIP-2771.\\n    function msgData() internal pure returns (bytes calldata data) {\\n        unchecked {\\n            return msg.data[:msg.data.length - 20];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb9d3b8a6aa97234fac6f955d447e77e066549743cab021db787e442227abd3bf\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyAdminErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Thrown when the initial admin is not set.\\nerror NoInitialProxyAdmin();\\n\\n/// @notice Thrown when an account is not the proxy admin but is required to.\\n/// @param account The account that was checked.\\nerror NotProxyAdmin(address account);\\n\",\"keccak256\":\"0xd851b8ad5cb0328a5e7e12ff116e2e4f6c60520bf7c01371576e9ecf7a549491\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Emitted when trying to set a phase value that has already been reached.\\n/// @param currentPhase The current phase.\\n/// @param newPhase The new phase trying to be set.\\nerror InitializationPhaseAlreadyReached(uint256 currentPhase, uint256 newPhase);\\n\",\"keccak256\":\"0x04fd98d85db9c4a6947a8f33369455f9317f68fa9fccdc7ec7556a10cb2a1716\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/events/ProxyAdminEvents.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Emitted when the proxy admin changes.\\n/// @param previousAdmin the previous admin.\\n/// @param newAdmin the new admin.\\nevent AdminChanged(address previousAdmin, address newAdmin);\\n\",\"keccak256\":\"0x000d8f4db2c0917888fc21d83939aed42daaba7c7d18d1e81c9dd1ca25e8dbaa\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyAdminStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {NoInitialProxyAdmin, NotProxyAdmin} from \\\"./../errors/ProxyAdminErrors.sol\\\";\\nimport {AdminChanged} from \\\"./../events/ProxyAdminEvents.sol\\\";\\nimport {ProxyInitialization} from \\\"./ProxyInitialization.sol\\\";\\n\\nlibrary ProxyAdminStorage {\\n    using ProxyAdminStorage for ProxyAdminStorage.Layout;\\n\\n    struct Layout {\\n        address admin;\\n    }\\n\\n    // bytes32 public constant PROXYADMIN_STORAGE_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"eip1967.proxy.admin\\\")) - 1);\\n    bytes32 internal constant PROXY_INIT_PHASE_SLOT = bytes32(uint256(keccak256(\\\"eip1967.proxy.admin.phase\\\")) - 1);\\n\\n    /// @notice Initializes the storage with an initial admin (immutable version).\\n    /// @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\\n    /// @dev Reverts {NoInitialProxyAdmin} if `initialAdmin` is the zero address.\\n    /// @dev Emits an {AdminChanged} event.\\n    /// @param initialAdmin The initial payout wallet.\\n    function constructorInit(Layout storage s, address initialAdmin) internal {\\n        if (initialAdmin == address(0)) revert NoInitialProxyAdmin();\\n        s.admin = initialAdmin;\\n        emit AdminChanged(address(0), initialAdmin);\\n    }\\n\\n    /// @notice Initializes the storage with an initial admin (proxied version).\\n    /// @notice Sets the proxy initialization phase to `1`.\\n    /// @dev Note: This function should be called ONLY in the init function of a proxied contract.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\\n    /// @dev Reverts {NoInitialProxyAdmin} if `initialAdmin` is the zero address.\\n    /// @dev Emits an {AdminChanged} event.\\n    /// @param initialAdmin The initial payout wallet.\\n    function proxyInit(Layout storage s, address initialAdmin) internal {\\n        ProxyInitialization.setPhase(PROXY_INIT_PHASE_SLOT, 1);\\n        s.constructorInit(initialAdmin);\\n    }\\n\\n    /// @notice Sets a new proxy admin.\\n    /// @dev Reverts with {NotProxyAdmin} if `sender` is not the proxy admin.\\n    /// @dev Emits an {AdminChanged} event if `newAdmin` is different from the current proxy admin.\\n    /// @param newAdmin The new proxy admin.\\n    function changeProxyAdmin(Layout storage s, address sender, address newAdmin) internal {\\n        address previousAdmin = s.admin;\\n        if (sender != previousAdmin) revert NotProxyAdmin(sender);\\n        if (previousAdmin != newAdmin) {\\n            s.admin = newAdmin;\\n            emit AdminChanged(previousAdmin, newAdmin);\\n        }\\n    }\\n\\n    /// @notice Gets the proxy admin.\\n    /// @return admin The proxy admin\\n    function proxyAdmin(Layout storage s) internal view returns (address admin) {\\n        return s.admin;\\n    }\\n\\n    /// @notice Ensures that an account is the proxy admin.\\n    /// @dev Reverts with {NotProxyAdmin} if `account` is not the proxy admin.\\n    /// @param account The account.\\n    function enforceIsProxyAdmin(Layout storage s, address account) internal view {\\n        if (account != s.admin) revert NotProxyAdmin(account);\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x68cd9bb3b74af29f186c87283d7efbdc58fea3aa8ab4f276ec53d5a012442b67\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {InitializationPhaseAlreadyReached} from \\\"./../errors/ProxyInitializationErrors.sol\\\";\\nimport {StorageSlot} from \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\n/// @notice Multiple calls protection for storage-modifying proxy initialization functions.\\nlibrary ProxyInitialization {\\n    /// @notice Sets the initialization phase during a storage-modifying proxy initialization function.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\\n    /// @param storageSlot the storage slot where `phase` is stored.\\n    /// @param phase the initialization phase.\\n    function setPhase(bytes32 storageSlot, uint256 phase) internal {\\n        StorageSlot.Uint256Slot storage currentVersion = StorageSlot.getUint256Slot(storageSlot);\\n        uint256 currentPhase = currentVersion.value;\\n        if (currentPhase >= phase) revert InitializationPhaseAlreadyReached(currentPhase, phase);\\n        currentVersion.value = phase;\\n    }\\n}\\n\",\"keccak256\":\"0x5bf72b121964b5122b12048165c8f6ef84cf2232015c52632539548c261f6e7d\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC721 Non-Fungible Token Standard, optional extension: Mintable.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n/// @dev Note: The ERC-165 identifier for this interface is 0x8e773e13.\\ninterface IERC721Mintable {\\n    /// @notice Unsafely mints a token.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if `tokenId` already exists.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address.\\n    /// @param to Address of the new token owner.\\n    /// @param tokenId Identifier of the token to mint.\\n    function mint(address to, uint256 tokenId) external;\\n\\n    /// @notice Safely mints a token.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if `tokenId` already exists.\\n    /// @dev Reverts if `to` is a contract and the call to {IERC721Receiver-onERC721Received} fails, reverts or is rejected.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address.\\n    /// @param to Address of the new token owner.\\n    /// @param tokenId Identifier of the token to mint.\\n    /// @param data Optional data to pass along to the receiver call.\\n    function safeMint(address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /// @notice Unsafely mints a batch of tokens.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if one of `tokenIds` already exists.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address for each of `tokenIds`.\\n    /// @param to Address of the new tokens owner.\\n    /// @param tokenIds Identifiers of the tokens to mint.\\n    function batchMint(address to, uint256[] calldata tokenIds) external;\\n}\\n\",\"keccak256\":\"0x4636f14283fd145c15f085e968fd274df5b808738da83bc46ce98b360dec7dfb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/base/ERC721MinterBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {IERC721Minter} from \\\"../interfaces/IERC721Minter.sol\\\";\\nimport {ERC721MinterStorage} from \\\"../libraries/ERC721MinterStorage.sol\\\";\\n\\n/// @title ERC721 Minter contract for minting ERC721 tokens with a maximum token ID limit.\\n/// @dev This contract is to be used via inheritance in a proxied implementation.\\n/// @dev Note: This contract requires ERC165 (Interface Detection Standard).\\nabstract contract ERC721MinterBase is IERC721Minter {\\n    using ERC721MinterStorage for ERC721MinterStorage.Layout;\\n\\n    /// @inheritdoc IERC721Minter\\n    function mint(address to) public virtual {\\n        ERC721MinterStorage.layout().mint(to);\\n    }\\n\\n    /// @inheritdoc IERC721Minter\\n    function currentTokenId() public view returns (uint256 tokenId) {\\n        return ERC721MinterStorage.layout().currentId();\\n    }\\n\\n    /// @inheritdoc IERC721Minter\\n    function maxTokenId() public view returns (uint256 tokenId) {\\n        return ERC721MinterStorage.layout().maxId();\\n    }\\n}\\n\",\"keccak256\":\"0x37eb1e23835153a1cb01f2cbc9adeadb2cec50c272c28762c03265076acd2b4b\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/errors/ERC721MinterErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Thrown when the token ID is zero.\\nerror ERC721MinterZeroMaxTokenId();\\n\\n/// @notice Thrown when the token address is zero.\\nerror ERC721MinterZeroTokenAddress();\\n\\n/// @notice Thrown when the token contract interface id does not supported.\\nerror ERC721MinterUnsupportedContractType(address tokenContract);\\n\\n/// @notice Thrown when the maximum token ID is exceeded.\\nerror ERC721MinterMaxTokenIdExceeded();\\n\",\"keccak256\":\"0x7626262f30f77f2d08fb90b9cd9e66689523fc1b6bb0f70da706949e4bf026c3\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/facets/ERC721MinterFacet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {ForwarderRegistryContextBase} from \\\"@animoca/ethereum-contracts/contracts/metatx/base/ForwarderRegistryContextBase.sol\\\";\\nimport {IForwarderRegistry} from \\\"@animoca/ethereum-contracts/contracts/metatx/interfaces/IForwarderRegistry.sol\\\";\\nimport {ProxyAdminStorage} from \\\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyAdminStorage.sol\\\";\\nimport {IERC721Mintable} from \\\"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\\\";\\nimport {ERC721MinterBase} from \\\"../base/ERC721MinterBase.sol\\\";\\nimport {ERC721MinterStorage} from \\\"../libraries/ERC721MinterStorage.sol\\\";\\n\\n/// @title ERC721 Minter (facet version).\\n/// @dev This contract is to be used as a diamond facet (see ERC2535 Diamond Standard https://eips.ethereum.org/EIPS/eip-2535).\\n/// @dev Note: This facet depends on {ProxyAdminFacet} and {InterfaceDetectionFacet}.\\ncontract ERC721MinterFacet is ERC721MinterBase, ForwarderRegistryContextBase {\\n    using ERC721MinterStorage for ERC721MinterStorage.Layout;\\n    using ProxyAdminStorage for ProxyAdminStorage.Layout;\\n\\n    constructor(IForwarderRegistry forwarderRegistry) ForwarderRegistryContextBase(forwarderRegistry) {}\\n\\n    /// @notice Initializes the storage with the maximum token ID and the ERC721 token contract.\\n    /// @notice Sets the proxy initialization phase to `1`.\\n    /// @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\\n    /// @dev Reverts with {NotProxyAdmin} if the sender is not the proxy admin.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\\n    /// @dev Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.\\n    /// @dev Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.\\n    /// @dev Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.\\n    /// @param maxTokenId The maximum token ID that can be minted.\\n    /// @param token The ERC721 token contract.\\n    function initERC721MinterStorage(uint256 maxTokenId, IERC721Mintable token) external {\\n        ProxyAdminStorage.layout().enforceIsProxyAdmin(_msgSender());\\n        ERC721MinterStorage.layout().proxyInit(maxTokenId, token);\\n    }\\n}\\n\",\"keccak256\":\"0x8d61922ed3be3fc34df3e1d30ec04cb32f258d7fc92cad0532e86cdea7858f00\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/interfaces/IERC721Minter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC721 Minter interface for minting ERC721 tokens.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x4f859546.\\ninterface IERC721Minter {\\n    /// @notice Returns the current token ID.\\n    /// @return tokenId The current token ID.\\n    function currentTokenId() external view returns (uint256 tokenId);\\n\\n    /// @notice Returns the maximum token ID.\\n    /// @return tokenId The maximum token ID.\\n    function maxTokenId() external view returns (uint256 tokenId);\\n\\n    /// @notice Mints a token to the specified address.\\n    /// @param to The address to receive the token.\\n    function mint(address to) external;\\n}\\n\",\"keccak256\":\"0x5e903fc517cd0e8429fad955249edaf4d9e25a47c530872b0ab0ab1e505cc21b\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/libraries/ERC721MinterStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n// solhint-disable-next-line max-line-length\\nimport {ERC721MinterZeroMaxTokenId, ERC721MinterUnsupportedContractType, ERC721MinterMaxTokenIdExceeded, ERC721MinterZeroTokenAddress} from \\\"../errors/ERC721MinterErrors.sol\\\";\\nimport {InterfaceDetectionStorage} from \\\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\\\";\\nimport {IERC165} from \\\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\\\";\\nimport {IERC721Mintable} from \\\"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\\\";\\nimport {ProxyInitialization} from \\\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\\\";\\nimport {IERC721Minter} from \\\"../interfaces/IERC721Minter.sol\\\";\\n\\nlibrary ERC721MinterStorage {\\n    using ERC721MinterStorage for ERC721MinterStorage.Layout;\\n    using InterfaceDetectionStorage for InterfaceDetectionStorage.Layout;\\n\\n    struct Layout {\\n        uint256 currentTokenId;\\n        uint256 maxTokenId;\\n        IERC721Mintable token;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"yura2100.token.ERC721.ERC721Minter.storage\\\")) - 1);\\n    bytes32 internal constant PROXY_INIT_PHASE_SLOT = bytes32(uint256(keccak256(\\\"yura2100.token.ERC721.ERC721Minter.phase\\\")) - 1);\\n\\n    /// @notice Initializes the storage with the maximum token ID and the ERC721 token contract.\\n    /// @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\\n    /// @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\\n    /// @dev Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.\\n    /// @dev Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.\\n    /// @dev Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.\\n    /// @param maxTokenId The maximum token ID that can be minted.\\n    /// @param token The ERC721 token contract.\\n    function constructorInit(Layout storage s, uint256 maxTokenId, IERC721Mintable token) internal {\\n        if (maxTokenId == 0) {\\n            revert ERC721MinterZeroMaxTokenId();\\n        }\\n        if (address(token) == address(0)) {\\n            revert ERC721MinterZeroTokenAddress();\\n        }\\n\\n        if (!IERC165(address(token)).supportsInterface(type(IERC721Mintable).interfaceId)) {\\n            revert ERC721MinterUnsupportedContractType(address(token));\\n        }\\n        s.maxTokenId = maxTokenId;\\n        s.token = token;\\n        InterfaceDetectionStorage.layout().setSupportedInterface(type(IERC721Minter).interfaceId, true);\\n    }\\n\\n    /// @notice Initializes the storage with the maximum token ID and the ERC721 token contract.\\n    /// @notice Sets the proxy initialization phase to `1`.\\n    /// @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\\n    /// @dev Note: This function should be called ONLY in the init function of a proxied contract.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\\n    /// @param maxTokenId The maximum token ID that can be minted.\\n    /// @param token The ERC721 token contract.\\n    function proxyInit(Layout storage s, uint256 maxTokenId, IERC721Mintable token) internal {\\n        ProxyInitialization.setPhase(PROXY_INIT_PHASE_SLOT, 1);\\n        s.constructorInit(maxTokenId, token);\\n    }\\n\\n    /// @notice Mints a token to the specified address.\\n    /// @dev Reverts with {ERC721MinterMaxTokenIdExceeded} if the current token ID exceeds the maximum token ID.\\n    /// @param to The address to which the token will be minted.\\n    function mint(Layout storage s, address to) internal {\\n        uint256 nextId = s.currentTokenId + 1;\\n        if (nextId > s.maxTokenId) {\\n            revert ERC721MinterMaxTokenIdExceeded();\\n        }\\n        s.token.mint(to, nextId);\\n        s.currentTokenId = nextId;\\n    }\\n\\n    /// @notice Returns the current token ID.\\n    /// @return tokenId The current token ID.\\n    function currentId(Layout storage s) internal view returns (uint256 tokenId) {\\n        return s.currentTokenId;\\n    }\\n\\n    /// @notice Returns the maximum token ID.\\n    /// @return tokenId The maximum token ID.\\n    function maxId(Layout storage s) internal view returns (uint256 tokenId) {\\n        return s.maxTokenId;\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xeda0d8eac4ba8aa3ffd62fda5e840b18150a880f8d54b2bcc7f97589f62ff54e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"errors":{"ERC721MinterMaxTokenIdExceeded()":[{"notice":"Thrown when the maximum token ID is exceeded."}],"ERC721MinterUnsupportedContractType(address)":[{"notice":"Thrown when the token contract interface id does not supported."}],"ERC721MinterZeroMaxTokenId()":[{"notice":"Thrown when the token ID is zero."}],"ERC721MinterZeroTokenAddress()":[{"notice":"Thrown when the token address is zero."}],"IllegalInterfaceId()":[{"notice":"Thrown when setting the illegal interfaceId 0xffffffff."}],"InitializationPhaseAlreadyReached(uint256,uint256)":[{"notice":"Emitted when trying to set a phase value that has already been reached."}],"NotProxyAdmin(address)":[{"notice":"Thrown when an account is not the proxy admin but is required to."}]},"kind":"user","methods":{"currentTokenId()":{"notice":"Returns the current token ID."},"initERC721MinterStorage(uint256,address)":{"notice":"Initializes the storage with the maximum token ID and the ERC721 token contract.Sets the proxy initialization phase to `1`.Marks the following ERC165 interfaces as supported: ERC721Minter."},"maxTokenId()":{"notice":"Returns the maximum token ID."},"mint(address)":{"notice":"Mints a token to the specified address."}},"version":1}}},"contracts/lib/minter/ERC721/interfaces/IERC721Minter.sol":{"IERC721Minter":{"abi":[{"inputs":[],"name":"currentTokenId","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTokenId","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Note: The ERC-165 identifier for this interface is 0x4f859546.","kind":"dev","methods":{"currentTokenId()":{"returns":{"tokenId":"The current token ID."}},"maxTokenId()":{"returns":{"tokenId":"The maximum token ID."}},"mint(address)":{"params":{"to":"The address to receive the token."}}},"title":"ERC721 Minter interface for minting ERC721 tokens.","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"currentTokenId()":"009a9b7b","maxTokenId()":"91ba317a","mint(address)":"6a627842"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"currentTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Note: The ERC-165 identifier for this interface is 0x4f859546.\",\"kind\":\"dev\",\"methods\":{\"currentTokenId()\":{\"returns\":{\"tokenId\":\"The current token ID.\"}},\"maxTokenId()\":{\"returns\":{\"tokenId\":\"The maximum token ID.\"}},\"mint(address)\":{\"params\":{\"to\":\"The address to receive the token.\"}}},\"title\":\"ERC721 Minter interface for minting ERC721 tokens.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"currentTokenId()\":{\"notice\":\"Returns the current token ID.\"},\"maxTokenId()\":{\"notice\":\"Returns the maximum token ID.\"},\"mint(address)\":{\"notice\":\"Mints a token to the specified address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/minter/ERC721/interfaces/IERC721Minter.sol\":\"IERC721Minter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/lib/minter/ERC721/interfaces/IERC721Minter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC721 Minter interface for minting ERC721 tokens.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x4f859546.\\ninterface IERC721Minter {\\n    /// @notice Returns the current token ID.\\n    /// @return tokenId The current token ID.\\n    function currentTokenId() external view returns (uint256 tokenId);\\n\\n    /// @notice Returns the maximum token ID.\\n    /// @return tokenId The maximum token ID.\\n    function maxTokenId() external view returns (uint256 tokenId);\\n\\n    /// @notice Mints a token to the specified address.\\n    /// @param to The address to receive the token.\\n    function mint(address to) external;\\n}\\n\",\"keccak256\":\"0x5e903fc517cd0e8429fad955249edaf4d9e25a47c530872b0ab0ab1e505cc21b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"currentTokenId()":{"notice":"Returns the current token ID."},"maxTokenId()":{"notice":"Returns the maximum token ID."},"mint(address)":{"notice":"Mints a token to the specified address."}},"version":1}}},"contracts/lib/minter/ERC721/libraries/ERC721MinterStorage.sol":{"ERC721MinterStorage":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef08e7a3d86c9b2ba41eab4d28266252a2f240822832ad486dff6cd2f252863d64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF ADDMOD 0xE7 LOG3 0xD8 PUSH13 0x9B2BA41EAB4D28266252A2F240 DUP3 0x28 ORIGIN 0xAD BASEFEE PUSH14 0xFF6CD2F252863D64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"808:3807:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;808:3807:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ef08e7a3d86c9b2ba41eab4d28266252a2f240822832ad486dff6cd2f252863d64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF ADDMOD 0xE7 LOG3 0xD8 PUSH13 0x9B2BA41EAB4D28266252A2F240 DUP3 0x28 ORIGIN 0xAD BASEFEE PUSH14 0xFF6CD2F252863D64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"808:3807:19:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"constructorInit(struct ERC721MinterStorage.Layout storage pointer,uint256,contract IERC721Mintable)":"infinite","currentId(struct ERC721MinterStorage.Layout storage pointer)":"infinite","layout()":"infinite","maxId(struct ERC721MinterStorage.Layout storage pointer)":"infinite","mint(struct ERC721MinterStorage.Layout storage pointer,address)":"infinite","proxyInit(struct ERC721MinterStorage.Layout storage pointer,uint256,contract IERC721Mintable)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lib/minter/ERC721/libraries/ERC721MinterStorage.sol\":\"ERC721MinterStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"@animoca/ethereum-contracts/contracts/introspection/errors/InterfaceDetectionErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Thrown when setting the illegal interfaceId 0xffffffff.\\nerror IllegalInterfaceId();\\n\",\"keccak256\":\"0xfc30a58bec3f7c1dd1c1b4604d668082c7c01696bb9cbf181a7812e9d0d318d5\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC165 Interface Detection Standard.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-165.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x01ffc9a7.\\ninterface IERC165 {\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId the interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool supported);\\n}\\n\",\"keccak256\":\"0x569c0a59305d5e0eb9ea3ef6b9376f4771895caca1db902ca6397fa085ab82b4\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {IllegalInterfaceId} from \\\"./../errors/InterfaceDetectionErrors.sol\\\";\\nimport {IERC165} from \\\"./../interfaces/IERC165.sol\\\";\\n\\nlibrary InterfaceDetectionStorage {\\n    struct Layout {\\n        mapping(bytes4 => bool) supportedInterfaces;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"animoca.core.introspection.InterfaceDetection.storage\\\")) - 1);\\n\\n    bytes4 internal constant ILLEGAL_INTERFACE_ID = 0xffffffff;\\n\\n    /// @notice Sets or unsets an ERC165 interface.\\n    /// @dev Revertswith {IllegalInterfaceId} if `interfaceId` is `0xffffffff`.\\n    /// @param interfaceId the interface identifier.\\n    /// @param supported True to set the interface, false to unset it.\\n    function setSupportedInterface(Layout storage s, bytes4 interfaceId, bool supported) internal {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) revert IllegalInterfaceId();\\n        s.supportedInterfaces[interfaceId] = supported;\\n    }\\n\\n    /// @notice Returns whether this contract implements a given interface.\\n    /// @dev Note: This function call must use less than 30 000 gas.\\n    /// @param interfaceId The interface identifier to test.\\n    /// @return supported True if the interface is supported, false if `interfaceId` is `0xffffffff` or if the interface is not supported.\\n    function supportsInterface(Layout storage s, bytes4 interfaceId) internal view returns (bool supported) {\\n        if (interfaceId == ILLEGAL_INTERFACE_ID) {\\n            return false;\\n        }\\n        if (interfaceId == type(IERC165).interfaceId) {\\n            return true;\\n        }\\n        return s.supportedInterfaces[interfaceId];\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x87944ecb71a120095067c66e9ab703ea25460e83f1f39ba0f9bd49a3481ad4dc\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/errors/ProxyInitializationErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Emitted when trying to set a phase value that has already been reached.\\n/// @param currentPhase The current phase.\\n/// @param newPhase The new phase trying to be set.\\nerror InitializationPhaseAlreadyReached(uint256 currentPhase, uint256 newPhase);\\n\",\"keccak256\":\"0x04fd98d85db9c4a6947a8f33369455f9317f68fa9fccdc7ec7556a10cb2a1716\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport {InitializationPhaseAlreadyReached} from \\\"./../errors/ProxyInitializationErrors.sol\\\";\\nimport {StorageSlot} from \\\"@openzeppelin/contracts/utils/StorageSlot.sol\\\";\\n\\n/// @notice Multiple calls protection for storage-modifying proxy initialization functions.\\nlibrary ProxyInitialization {\\n    /// @notice Sets the initialization phase during a storage-modifying proxy initialization function.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if `phase` has been reached already.\\n    /// @param storageSlot the storage slot where `phase` is stored.\\n    /// @param phase the initialization phase.\\n    function setPhase(bytes32 storageSlot, uint256 phase) internal {\\n        StorageSlot.Uint256Slot storage currentVersion = StorageSlot.getUint256Slot(storageSlot);\\n        uint256 currentPhase = currentVersion.value;\\n        if (currentPhase >= phase) revert InitializationPhaseAlreadyReached(currentPhase, phase);\\n        currentVersion.value = phase;\\n    }\\n}\\n\",\"keccak256\":\"0x5bf72b121964b5122b12048165c8f6ef84cf2232015c52632539548c261f6e7d\",\"license\":\"MIT\"},\"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC721 Non-Fungible Token Standard, optional extension: Mintable.\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n/// @dev Note: The ERC-165 identifier for this interface is 0x8e773e13.\\ninterface IERC721Mintable {\\n    /// @notice Unsafely mints a token.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if `tokenId` already exists.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address.\\n    /// @param to Address of the new token owner.\\n    /// @param tokenId Identifier of the token to mint.\\n    function mint(address to, uint256 tokenId) external;\\n\\n    /// @notice Safely mints a token.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if `tokenId` already exists.\\n    /// @dev Reverts if `to` is a contract and the call to {IERC721Receiver-onERC721Received} fails, reverts or is rejected.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address.\\n    /// @param to Address of the new token owner.\\n    /// @param tokenId Identifier of the token to mint.\\n    /// @param data Optional data to pass along to the receiver call.\\n    function safeMint(address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /// @notice Unsafely mints a batch of tokens.\\n    /// @dev Reverts if `to` is the zero address.\\n    /// @dev Reverts if one of `tokenIds` already exists.\\n    /// @dev Emits an {IERC721-Transfer} event from the zero address for each of `tokenIds`.\\n    /// @param to Address of the new tokens owner.\\n    /// @param tokenIds Identifiers of the tokens to mint.\\n    function batchMint(address to, uint256[] calldata tokenIds) external;\\n}\\n\",\"keccak256\":\"0x4636f14283fd145c15f085e968fd274df5b808738da83bc46ce98b360dec7dfb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/errors/ERC721MinterErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @notice Thrown when the token ID is zero.\\nerror ERC721MinterZeroMaxTokenId();\\n\\n/// @notice Thrown when the token address is zero.\\nerror ERC721MinterZeroTokenAddress();\\n\\n/// @notice Thrown when the token contract interface id does not supported.\\nerror ERC721MinterUnsupportedContractType(address tokenContract);\\n\\n/// @notice Thrown when the maximum token ID is exceeded.\\nerror ERC721MinterMaxTokenIdExceeded();\\n\",\"keccak256\":\"0x7626262f30f77f2d08fb90b9cd9e66689523fc1b6bb0f70da706949e4bf026c3\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/interfaces/IERC721Minter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n/// @title ERC721 Minter interface for minting ERC721 tokens.\\n/// @dev Note: The ERC-165 identifier for this interface is 0x4f859546.\\ninterface IERC721Minter {\\n    /// @notice Returns the current token ID.\\n    /// @return tokenId The current token ID.\\n    function currentTokenId() external view returns (uint256 tokenId);\\n\\n    /// @notice Returns the maximum token ID.\\n    /// @return tokenId The maximum token ID.\\n    function maxTokenId() external view returns (uint256 tokenId);\\n\\n    /// @notice Mints a token to the specified address.\\n    /// @param to The address to receive the token.\\n    function mint(address to) external;\\n}\\n\",\"keccak256\":\"0x5e903fc517cd0e8429fad955249edaf4d9e25a47c530872b0ab0ab1e505cc21b\",\"license\":\"MIT\"},\"contracts/lib/minter/ERC721/libraries/ERC721MinterStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\n// solhint-disable-next-line max-line-length\\nimport {ERC721MinterZeroMaxTokenId, ERC721MinterUnsupportedContractType, ERC721MinterMaxTokenIdExceeded, ERC721MinterZeroTokenAddress} from \\\"../errors/ERC721MinterErrors.sol\\\";\\nimport {InterfaceDetectionStorage} from \\\"@animoca/ethereum-contracts/contracts/introspection/libraries/InterfaceDetectionStorage.sol\\\";\\nimport {IERC165} from \\\"@animoca/ethereum-contracts/contracts/introspection/interfaces/IERC165.sol\\\";\\nimport {IERC721Mintable} from \\\"@animoca/ethereum-contracts/contracts/token/ERC721/interfaces/IERC721Mintable.sol\\\";\\nimport {ProxyInitialization} from \\\"@animoca/ethereum-contracts/contracts/proxy/libraries/ProxyInitialization.sol\\\";\\nimport {IERC721Minter} from \\\"../interfaces/IERC721Minter.sol\\\";\\n\\nlibrary ERC721MinterStorage {\\n    using ERC721MinterStorage for ERC721MinterStorage.Layout;\\n    using InterfaceDetectionStorage for InterfaceDetectionStorage.Layout;\\n\\n    struct Layout {\\n        uint256 currentTokenId;\\n        uint256 maxTokenId;\\n        IERC721Mintable token;\\n    }\\n\\n    bytes32 internal constant LAYOUT_STORAGE_SLOT = bytes32(uint256(keccak256(\\\"yura2100.token.ERC721.ERC721Minter.storage\\\")) - 1);\\n    bytes32 internal constant PROXY_INIT_PHASE_SLOT = bytes32(uint256(keccak256(\\\"yura2100.token.ERC721.ERC721Minter.phase\\\")) - 1);\\n\\n    /// @notice Initializes the storage with the maximum token ID and the ERC721 token contract.\\n    /// @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\\n    /// @dev Note: This function should be called ONLY in the constructor of an immutable (non-proxied) contract.\\n    /// @dev Reverts with {ERC721MinterZeroMaxTokenId} if the `maxTokenId` is zero.\\n    /// @dev Reverts with {ERC721MinterZeroTokenAddress} if the `token` is the zero address.\\n    /// @dev Reverts with {ERC721MinterUnsupportedContractType} if the `token` does not support the IERC721Mintable interface.\\n    /// @param maxTokenId The maximum token ID that can be minted.\\n    /// @param token The ERC721 token contract.\\n    function constructorInit(Layout storage s, uint256 maxTokenId, IERC721Mintable token) internal {\\n        if (maxTokenId == 0) {\\n            revert ERC721MinterZeroMaxTokenId();\\n        }\\n        if (address(token) == address(0)) {\\n            revert ERC721MinterZeroTokenAddress();\\n        }\\n\\n        if (!IERC165(address(token)).supportsInterface(type(IERC721Mintable).interfaceId)) {\\n            revert ERC721MinterUnsupportedContractType(address(token));\\n        }\\n        s.maxTokenId = maxTokenId;\\n        s.token = token;\\n        InterfaceDetectionStorage.layout().setSupportedInterface(type(IERC721Minter).interfaceId, true);\\n    }\\n\\n    /// @notice Initializes the storage with the maximum token ID and the ERC721 token contract.\\n    /// @notice Sets the proxy initialization phase to `1`.\\n    /// @notice Marks the following ERC165 interfaces as supported: ERC721Minter.\\n    /// @dev Note: This function should be called ONLY in the init function of a proxied contract.\\n    /// @dev Reverts with {InitializationPhaseAlreadyReached} if the proxy initialization phase is set to `1` or above.\\n    /// @param maxTokenId The maximum token ID that can be minted.\\n    /// @param token The ERC721 token contract.\\n    function proxyInit(Layout storage s, uint256 maxTokenId, IERC721Mintable token) internal {\\n        ProxyInitialization.setPhase(PROXY_INIT_PHASE_SLOT, 1);\\n        s.constructorInit(maxTokenId, token);\\n    }\\n\\n    /// @notice Mints a token to the specified address.\\n    /// @dev Reverts with {ERC721MinterMaxTokenIdExceeded} if the current token ID exceeds the maximum token ID.\\n    /// @param to The address to which the token will be minted.\\n    function mint(Layout storage s, address to) internal {\\n        uint256 nextId = s.currentTokenId + 1;\\n        if (nextId > s.maxTokenId) {\\n            revert ERC721MinterMaxTokenIdExceeded();\\n        }\\n        s.token.mint(to, nextId);\\n        s.currentTokenId = nextId;\\n    }\\n\\n    /// @notice Returns the current token ID.\\n    /// @return tokenId The current token ID.\\n    function currentId(Layout storage s) internal view returns (uint256 tokenId) {\\n        return s.currentTokenId;\\n    }\\n\\n    /// @notice Returns the maximum token ID.\\n    /// @return tokenId The maximum token ID.\\n    function maxId(Layout storage s) internal view returns (uint256 tokenId) {\\n        return s.maxTokenId;\\n    }\\n\\n    function layout() internal pure returns (Layout storage s) {\\n        bytes32 position = LAYOUT_STORAGE_SLOT;\\n        assembly {\\n            s.slot := position\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xeda0d8eac4ba8aa3ffd62fda5e840b18150a880f8d54b2bcc7f97589f62ff54e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}